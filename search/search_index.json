{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u4e3b\u9875","text":"<p>\u6700\u8fd1\u6253\u7b97\u628a\u81ea\u5df1\u7684\u4e00\u4e9b\u5b66\u4e60\u7b14\u8bb0\u4e0a\u4f20\u6574\u7406\u4e00\u4e0b\uff0c\u987a\u4fbf\u8fc1\u79fb\u4e00\u4e0b\u4e4b\u524d\u7684\u535a\u5ba2\uff0c\u6240\u4ee5\u5c31\u6709\u4e86\u8fd9\u4e2a\u7f51\u7ad9\u3002  </p> <p>DejaVu\uff0c\u6cd5\u8bed\uff0c\u610f\u4e3a\u201c\u65e2\u89c6\u611f\u201d\uff0c\u4ee3\u8868\u4e86\u6211\u7684\u4e00\u70b9\u4e2a\u4eba\u7279\u8272\u548c\u4e2a\u4eba\u5fc3\u613f\uff0c\u5e0c\u671b\u6bcf\u6b21\u67e5\u770b\u8fd9\u4e2a\u7f51\u7ad9\u90fd\u662f\u5386\u4e45\u5f25\u65b0\uff0c\u6709\u6240\u6536\u83b7\u3002</p>"},{"location":"blog/","title":"Squarehuang's \u7b80\u4ecb","text":"<p>\u4e4b\u524d\u535a\u5ba2\u7684\u4e00\u4e9b\u642c\u8fd0\u5de5\u4f5c\uff0c\u73b0\u5728\u5df2\u7ecf\u57fa\u672c\u5b8c\u6210\u4e86\uff0c\u63a5\u4e0b\u6765\u4f1a\u7ee7\u7eed\u66f4\u65b0\u4e00\u4e9b\u65b0\u7684\u5185\u5bb9\u3002</p> <p>\u6bd5\u7adf\u73b0\u5728\u8d8a\u6765\u8d8a\u4e0d\u60f3\u6298\u817e\u4e86\uff0c\u4e0d\u8fc7\u6298\u817e\u8fd8\u662f\u5f88\u6709\u610f\u601d\u7684\uff0c\u4e0d\u662f\u5417(x\uff0c\u6240\u4ee5\u53ef\u80fd\u8fd8\u662f\u4f1a\u7ee7\u7eed\u6298\u817e\u7684\u3002</p> bubble_sort.py<pre><code>    def bubble_sort(items):\n        for i in range(len(items)):\n            for j in range(len(items) - 1 - i):\n                if items[j] &gt; items[j + 1]:\n                    items[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"blog/%E6%97%A5%E8%AE%B0_2023-03-14/","title":"\u65e5\u8bb0_2023-03-14","text":"<p>2023.03.14</p> <p>\u7a97\u5916\u662f\u6625\u65e5\u6696\u9633\uff0c\u73b0\u5728\u662f2023\u5e743\u670814\u65e5\u4e0b\u5348\u4e24\u70b914\u5206\uff0c\u521a\u521a\u90e8\u5206\u6d4f\u89c8\u5b8ckk\u66fe\u5728\u662f\u5341\u591a\u5e74\u524d\u5199\u4e0b\u7684\u6587\u7ae0\uff0c\u51c6\u5907\u5c0f\u61a9\u4e00\u4f1a\u513f\uff0c\u5fc3\u60c5\u5374\u4e45\u4e45\u96be\u4ee5\u5e73\u590d\uff0c\u6fc0\u8361\u4e0d\u5df2\u3002</p> <p>\u5176\u4e00\u662f\uff0c\u4f5c\u4e3a\u5f53\u4e0b\u65f6\u4ee3\u7684\u4e00\u4efd\u5b50\uff0c\u60f3\u8981\u5bf9\u4e8e\u5177\u4f53\u7684\u4e8b\u4ef6\u4e43\u81f3\u6574\u4e2a\u793e\u4f1a\u7684\u8fd0\u884c\u673a\u5236\u6709\u6e05\u6670\u7684\u8ba4\u77e5\uff0c\u6211\u611f\u5230\u7684\u963b\u529b\u662f\u5341\u5206\u5de8\u5927\u7684\u3002\u8bdd\u8bed\u6743\u88ab\u5784\u65ad\u7684\u5f53\u4e0b\uff0c\u66f4\u591a\u4eba\u53ea\u662f\u9ed8\u9ed8\u627f\u53d7\u7740\u4e00\u5207\uff0c\u6216\u8bb8\u5e94\u8be5\u53eb\u505a\u63a5\u53d7\u3002\u56e0\u4e3a\uff0c\u65f6\u4ee3\u7684\u6d41\u5411\u5728\u4e2a\u4eba\u7684\u6e3a\u5c0f\u9762\u524d\u662f\u4e0d\u53ef\u9006\u8f6c\u7684\uff0c\u65e0\u6cd5\u901a\u8fc7\u4e2a\u4eba\u7684\u529b\u91cf\u6765\u6539\u53d8\u4e00\u5207\u3002\u65e2\u5f97\u5229\u76ca\u8005\u4f9d\u65e7\u8d5a\u7684\u76c6\u6ee1\u94b5\u6ee1\uff0c\u56f0\u82e6\u4e2d\u6323\u624e\u7684\u4eba\u4f9d\u7136\u5728\u601d\u8003\u660e\u5929\u5982\u4f55\u6d3b\u4e0b\u53bb\u3002\u4e16\u754c\u672c\u5c31\u6ca1\u6709\u8fc7\u591a\u7684\u516c\u5e73\u53ef\u8a00\uff0c\u4e00\u5207\u90fd\u662f\u6709\u524d\u63d0\u7684\u3002</p> <p>\u5176\u4e8c\u662f\uff0c\u5bf9\u4e8e\u5f80\u65e5\u9ad8\u4e2d\u751f\u6d3b\u7684\u6000\u5ff5\u3002\u6625\u65e5\u6696\u9633\uff0c\u8ba9\u6211\u65e0\u6570\u6b21\u7684\u60f3\u8d77\u66fe\u7ecf\u7684\u94c1\u677f\u623f\u524d\u90a3\u4e00\u8def\u6a31\u82b1(\u4e5f\u53ef\u80fd\u662f\u4e00\u79cd\u4e0e\u6a31\u82b1\u6837\u8c8c\u76f8\u4f3c\u7684\u82b1)\u6811\u7efd\u653e\u7684\u573a\u666f\uff0c\u60f3\u8d77\u5df2\u7ecf\u8fc7\u53bb\u4e86\u4e24\u5e74\u7684\u7eaf\u7cb9\u7684\u9ad8\u4e2d\u751f\u6d3b\uff0c\u8fd8\u6709\u5979\u3002\u6211\u6ca1\u6709\u592a\u591a\u7684\u52c7\u6c14\uff0c\u53ea\u662f\u88ab\u63a8\u6421\u7740\u5f80\u524d\u8d70\u3002\u53ef\u80fd\u6b63\u662f\u56e0\u4e3a\u5982\u6b64\uff0c\u90a3\u6bb5\u7eaf\u7cb9\u7684\u751f\u6d3b\uff0c\u624d\u4f1a\u5728\u8bb0\u5fc6\u4e2d\u70d9\u4e0b\u4e0d\u53ef\u78e8\u706d\u7684\u5370\u8bb0\uff0c\u65f6\u65f6\u95ea\u70c1\uff0c\u63d0\u9192\u7740\u6211\u7684\u521d\u5fc3\u3002\u4e0d\u77e5\u9053\u51e0\u5341\u5e74\u540e\uff0c\u6211\u8fd8\u662f\u5426\u80fd\u627e\u56de\u5f53\u5e74\u7684\u81ea\u5df1\u3002\u6211\u4e0d\u4f1a\u9009\u62e9\u9057\u5fd8\uff0c\u53ea\u662f\u628a\u9009\u62e9\u4ea4\u7ed9\u4e86\u65f6\u95f4\u3002</p> <p>\u5176\u4e09\u662f\uff0c\u5fc3\u4e2d\u5bf9\u4e8e\u5f53\u4e0b\u7684\u8ff7\u832b\u548c\u6050\u60e7\u3002\u672a\u77e5\u7684\u4e8b\u7269\u548c\u4e1c\u897f\u592a\u591a\uff0c\u6ca1\u6709\u547d\u4e2d\u53ef\u8d35\u7684\u5f15\u8def\u4eba\uff0c\u8e52\u8dda\u6478\u7d22\uff0c\u5bf9\u4e8e\u81ea\u5df1\u80fd\u529b\u4e0d\u8db3\u7684\u6e05\u6670\u8ba4\u77e5\uff0c\u4ee5\u53ca\u4e0d\u6562\u8e0f\u51fa\u66f4\u8fdb\u4e00\u6b65\u7684\u7684\u52c7\u6c14\u548c\u8010\u5fc3......</p> <p>\u96be\u8fc7233\u79d2\u540e\uff0c\u7279\u6b64\u8bb0\u5f55\u4e8e\u6b64</p> <p>\u200b   -HJ<sup>2</sup></p>"},{"location":"blog/%E6%97%A5%E8%AE%B0_2023-03-22/","title":"\u65e5\u8bb0_2023-03-22","text":""},{"location":"blog/%E6%97%A5%E8%AE%B0_2023-03-22/#2023322","title":"2023.3.22","text":"<p>\u6e05\u6668\u8d77\u6765\u4fbf\u4e0b\u4e86\u5927\u96e8\uff0c\u8ff7\u8ff7\u7cca\u7cca\u7761\u5230\u516b\u70b9\u5dee\u4e00\u523b\uff0c\u53d1\u73b0\u81ea\u5df1\u6536\u5230\u4e86\u5229\u5179\u7684\u62a5\u540d\u901a\u8fc7\u901a\u77e5\uff0c\u5f88\u5f00\u5fc3\uff0c\u6b64\u524d\u770b\u4e86\u4e00\u904d\u4e4b\u540e\uff0c\u4fbf\u4e00\u5b9a\u60f3\u8981\u53bb\u8865\u6863\u7684\u3002\u672c\u6765\u53ea\u662f\u60f3\u60f3\uff0c\u6ca1\u60f3\u5230\u89c2\u5f71\u4f1a\u771f\u7684\u5f00\u5230\u4e86\u676d\u5dde\uff0c\u521a\u597d\u6b63\u5728\u62a5\u540d\uff0c\u53ef\u80fd\u8fd9\u5c31\u662f\u5de7\u5408\u5427\uff0c\u5de7\u7684\u4e0d\u80fd\u518d\u5de7\uff0c\u5f88\u5f00\u5fc3\u3002</p>"},{"location":"blog/date-a-live-s05%E8%A7%82%E6%84%9F/","title":"DATE A LIVE S05\u89c2\u611f","text":"<p>\u8fd9\u662f\u4e00\u7bc7\u7ea6\u62185\u7684\u89c2\u540e\u611f.   </p> <p>\u5176\u5b9e\uff0c\u770b\u5230\u7ea6\u62185\u7684\u5236\u4f5c\u8d28\u91cf\u4e4b\u540e\uff0c\u6211\u662f\u4e0d\u5bf9\u8fd9\u90e8\u756a\u62b1\u6709\u592a\u5927\u7684\u671f\u5f85\u7684\u3002\u5373\u4f7f\u5728\u770b\u5b8c\u524d\u56db\u90e8\u4f5c\u54c1 \u7684\u57fa\u7840\u4e0a\uff0c\u6211\u521a\u5f00\u59cb\u4e5f\u53ea\u662f\u4eceN\u7ad9\u4e0a\u4e0b\u8f7d\u4e0b\u6765\uff0c\u653e\u5728\u786c\u76d8\u4e2d\u5e76\u6ca1\u6709\u770b\u3002\u4e0d\u8fc7\u8fd8\u662f\u4e3a\u4e86\u60c5\u6000\u5427\uff0c\u4e5f\u4e3a\u4e86\u4e00\u4e2a\u7cfb\u5217\u7684\u5b8c\u6574\u5ea6\uff0c\u6211\u8fd8\u662f\u62bd\u7a7a\u770b\u5b8c\u4e86\u8fd9\u90e8\u5b63\u756a\u3002(\u5c6f\u756a\u770b\u8fd8\u662f\u633a\u723d\u7684) </p> <p>\u8981\u8bf4\u5267\u60c5\u7684\u8bdd\uff0c\u4e5f\u8fd8\u7b97\u8bf4\u7684\u8fc7\u53bb\uff0c\u4f46\u662f\u4f5c\u4e3a\u4e00\u4e2a\u76f8\u5f53\u4f20\u7edf\u7684\u540e\u5bab\u756a......\u73b0\u5728\u6211\u4e5f\u6ca1\u90a3\u4e48\u611f\u5174\u8da3\uff0c\u6240\u4ee5\u62b1\u6709\u7684\u671f\u5f85\u4e5f\u4e0d\u7b97\u5927\uff0c\u80fd\u770b\u5230\u72c2\u4e09\u7684\u65b0\u5957\u88c5\u5c31\u591f\u4e86(x</p> <p>\u4e0d\u8fc7\u52a8\u753b\u5236\u4f5c\u7684\u8d28\u91cf\u786e\u5b9e\u633a\u5dee\u7684\uff0c\u753b\u98ce\u4e2a\u4eba\u975e\u5e38\u4e0d\u559c\u6b22\uff0c\u8fd8\u4e0d\u5982\u7b2c\u4e00\u5b63\u7684\u5236\u4f5c\u3002\u4e0d\u8fc7\u65f6\u5d0e\u72c2\u4e09\u7684\u4eba\u6c14\u8fd8\u662f\u633a\u9ad8\u7684\uff0c\u5f88\u591a\u4eba\u5927\u6982\u4e5f\u662f\u5954\u7740\u72c2\u4e09\u624d\u53bb\u770b\u4e86\u8fd9\u90e8\u756a\u3002</p> <p>\u603b\u7684\u6765\u8bf4\uff0c\u5728\u7ecf\u8d39\u4e0d\u8db3\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u4e3a\u7ea6\u6218\u7684\u6545\u4e8b\u753b\u4e0a\u4e00\u4e2a\u53e5\u53f7\u5176\u5b9e\u5c31\u591f\u4e86\uff0c\u8fd9\u79cd\u7c7b\u578b\u7684\u6545\u4e8b\u5728\u5f53\u4e0b\u5e94\u8be5\u4e5f\u6380\u4e0d\u8d77\u592a\u5927\u7684\u70ed\u5ea6\u4e86\u3002</p>"},{"location":"blog/euterpe/","title":"Euterpe","text":""},{"location":"blog/euterpe/#euterpe","title":"Euterpe","text":"<p>\u200b       \u4e5f\u8bb8\uff0c\u53c8\u662f\u4e00\u7bc7\u6ca1\u4ec0\u4e48\u5b9e\u7528\u4ef7\u503c\u7684Blog\u5427\u3002\u4eca\u5929\uff0c\u7a81\u7136\u53c8\u60f3\u8d77\u6765\u628a\u300aGuilty Crown\u300b\u5237\u4e86\u4e00\u904d\uff0c\u5c3d\u7ba1\u4e34\u8fd1\u671f\u672b\uff0c\u4f46\u6211\u8fd8\u662f\u6000\u7740\u96be\u8fc7\u7684\u5fc3\u60c5\u6682\u8bb0\u4e0b\u6b64\u523b\u7684\u611f\u53d7\u3002</p> <p>\u200b       \u9690\u9690\u7ea6\u7ea6\u8bb0\u5f97\uff0c\u5927\u6982\u5e94\u8be5\u662f\u7b2c\u4e09\u904d\u4e86\uff0c\u4e0d\u8fc7\u6bcf\u6b21\u770b\u7684\u611f\u53d7/\u5173\u6ce8\u70b9\uff0c\u90fd\u4f1a\u6709\u4e9b\u8bb8\u4e0d\u540c\u7684\u6539\u53d8\u5427\uff0c\u8fd9\u4e5f\u53ef\u4ee5\u7b97\u4f5c\u6211\u5728\u53d8\u5316\u6210\u957f\u7684\u8bc1\u660e\u4e4b\u4e00\u3002\u7b2c\u4e00\u6b21\uff0c\u53ef\u80fd\u662f\u516d\u5e74\u524d(?)\uff0c\u5904\u4e8e\u90a3\u79cd\u53db\u9006\u671f\uff0c\u5bf9\u5267\u60c5\u4e00\u5f00\u59cb\u672a\u80fd\u5b8c\u5168\u7406\u89e3\u7684\u6211\uff0c\u53ea\u662f\u8ba4\u4e3a\u8fd9\u662f\u4e00\u90e8\u70ed\u8840\u756a\uff0c\u7c7b\u4f3c\u4e8e\u7ecf\u5178\u7684\u4e3a\u4e86\u5973\u4e3b\u6740\u5149\u9ed1\u6697\u52bf\u529b\u7684\u8001\u5957\u8def\uff08\u73b0\u5728\u6765\u770b\u5b9e\u9645\u4e0a\u7684\u786e\u5982\u6b64\uff09\uff0c\u8bb0\u5f97\u696a\u7948\u4ece\u9876\u7a7a\u4e00\u8dc3\u800c\u4e0b\u98de\u5411\u96c6\uff0c\u4ee5\u53ca\u6daf\u4e00\u7bad\u706d\u6389\u5927\u534a\u4e2a\u8230\u961f\u7684\u753b\u9762\u3002\u7b2c\u4e8c\u6b21\uff0c\u751a\u81f3\u4e8e\u5b8c\u5168\u6ca1\u6709\u5370\u8c61\u4e86\uff0c\u4e5f\u8bb8\u53ea\u662f\u4e00\u95ea\u800c\u8fc7\uff0c\u6211\u4e5f\u53ea\u662f\u8bb0\u5f97\u6709\u8fc7\u8fd9\u4e48\u4e00\u56de\u4e8b\u3002\u800c\u8fd9\u6b21\uff0c\u5370\u8c61\u6700\u6df1\u7684\u662f\u5404\u79cd\u7a81\u7136\u660e\u767d\u7684\u7ec6\u8282\u4ee5\u53ca\u696a\u7948\u7684\u6b4c\u58f0\u2014\u2014Euterpe\u3002</p> <p>\u200b       Euterpe\u4e00\u822c\u6307\u6b27\u5fd2\u8033\u4f69\uff0c\u4e5f\u5c31\u662f\u5e0c\u814a\u795e\u8bdd\u4e2d\u53f8\u6292\u60c5\u8bd7\u7684\u7f2a\u65af\u3002\u6bcf\u5f53\u5267\u4e2d\u696a\u7948\u7684\u6b4c\u58f0\u54cd\u8d77\uff0c\u90fd\u4f1a\u6709\u4e00\u6bb5\u4e0d\u4e00\u6837\u7684\u60c5\u611f\u6d8c\u51fa\u753b\u9762\uff0c\u800c\u6b4c\u8bcd\u4e5f\u6b63\u597d\u53cd\u6620\u7740\u5f53\u65f6\u7684\u73b0\u51b5\u3002\u4e0d\u8fc7\uff0c\u603b\u662f\u7ed9\u4eba\u4e00\u79cd\u60b2\u4f24\u7684\u611f\u89c9...</p> <p>\u76db\u5f00\u7684\u539f\u91ce\u4e4b\u82b1\u5537 \u8bf7\u52a1\u5fc5\u544a\u8bc9\u6211 \u4eba\u4eec\u4e3a\u4ec0\u4e48\u8981\u4e92\u76f8\u4f24\u5bb3 \u4ee5\u81f4\u7eb7\u4e89\u4e0d\u65ad\u5462</p> <p>\u51db\u7136\u7efd\u5f00\u7684\u82b1\u5537 \u4ece\u4f60\u90a3\u91cc \u80fd\u770b\u5230\u4ec0\u4e48 \u4eba\u4eec\u4e3a\u4ec0\u4e48\u8fde\u4e92\u76f8\u539f\u8c05 \u4e5f\u505a\u4e0d\u5230\u554a \uff08\u8282\u9009\uff09                                        </p> <p>\u200b       \u800c\u8fd9\u4e2a\u73b0\u51b5\uff0c\u6307\u4ee3\u7684\u5176\u5b9e\u5f88\u591a\u5f88\u591a\u3002\u4f8b\u5982\u96c6\u88ab\u670b\u53cb\u80cc\u53db\uff0c\u673a\u6784\u5bf9\u6c11\u4f17\u7684\u5c60\u6740\uff0c\u96c6\u56e0\u81ea\u8eab\u7684\u6050\u60e7\u800c\u53eb\u5c0f\u7948\u602a\u7269\uff0c\u592a\u591a\u592a\u591a\uff0c\u751a\u81f3\u5305\u62ec\u6574\u6bb5\u6545\u4e8b\u7684\u8d77\u6e90\uff0c\u5728Loss Christmas\u65f6\uff0c\u4e24\u4eba\u6ca1\u6709\u56de\u5e94\u771f\u540d\u5e0c\u671b\u5f97\u5230\u62ef\u6551\u7684\u547c\u5524.......\u5f53\u7136\u5176\u4e2d\uff0c\u4e0d\u4e4f\u6709\u4e00\u4e9b\u7cdf\u70b9\u3002\u503c\u5f97\u4e00\u63d0\u7684\u662f\uff0c\u6574\u4e2a\u6545\u4e8b\u663e\u5f97\u6709\u4e9b\u6df7\u4e71\uff0c\u5982\u4eca\u770b\u65f6\u5012\u662f\u540e\u9762\u4e0e\u524d\u9762\u6709\u7740\u5f88\u597d\u7684\u547c\u5e94\u3002\u4e0d\u8fc7\u65e0\u8bba\u5982\u4f55\uff0c\u6df7\u4e71\u5728\u6700\u540e\u96c6\u727a\u7272\u81ea\u5df1\u505a\u6551\u4e16\u4e3b\u7684\u65f6\u5019\u90fd\u7ed3\u675f\u4e86\uff0c\u8fd9\u4e5f\u662f\u4e3b\u89d2\u6700\u771f\u5b9e\u7684\u5fc3\u7075\u7efd\u653e\u3002</p> <p>\u200b       \u5267\u4e2d\u63d0\u5230\uff0cvoid\u4f1a\u5c06\u4eba\u7684\u5fc3\u7075\u7269\u8d28\u5316\uff0c\u662f\u5fc3\u7075\u7684\u5177\u8c61\u5316\u8868\u73b0\uff0c\u6240\u4ee5\u8fd9\u4e5f\u5f88\u597d\u7684\u89e3\u91ca\u4e86\u4e3a\u4ec0\u4e48void\u88ab\u7834\u574f\u4eba\u5c31\u4f1a\u6b7b\u7684\u8bbe\u5b9a\u3002\u56e0\u4e3a\u6211\u89c9\u5f97\u5fc3\u7075\u88ab\u7834\u574f\u7684\u4eba\u4e0d\u80fd\u518d\u79f0\u4e4b\u4e3a\u4eba\u4e86\uff0c\u800c\u8fd9\u4e5f\u8ba9\u5267\u60c5\u4e2d\u7ed3\u6676\u4e2d\u6c38\u6052\u601d\u8003\u7684\u8bbe\u5b9a\u663e\u5f97\u5982\u6b64\u4e0d\u53ef\u63a5\u53d7\u3002\u4f3c\u4e4e\u5f88\u591a\u90fd\u63d0\u5230\u8fc7\uff0c\u820d\u5f03\u4eba\u7c7b\u81ea\u8eab\u7684\u7269\u79cd\u8fdb\u5316/\u8de8\u8d8a\u90fd\u662f\u9519\u8bef\u7684\uff0c\u662f\u4eba\u7684\u5fc3\u7075/\u4eba\u6027\u8ba9\u4eba\u4e4b\u6240\u4ee5\u4e3a\u4eba\u3002\u5176\u5b9e\u5f88\u591a\u5267\u60c5\u4e2d\uff0c\u90fd\u4f1a\u5f3a\u8c03\u4eba\u7684\u611f\u6027\u7684\u91cd\u8981\u6027\uff0c\u5c31\u50cf\u5929\u6c14\u4e4b\u5b50\u4e2d\uff0c\u4e3b\u89d2\u5728\u62ef\u6551\u4e16\u754c\u548c\u9633\u83b1\u4e2d\u9009\u62e9\u540e\u8005\u4e00\u6837\u3002\u5f88\u591a\u65f6\u5019\u6211\u90fd\u4f1a\u601d\u8003\uff0c\u81ea\u5df1\u7684\u4ef7\u503c\u89c2\u662f\u4ec0\u4e48......</p> <p>\u200b       \u5173\u4e8e\u7ed3\u5c3e\uff0c\u672c\u6765\u6211\u5e0c\u671b\u7684happy ending\u662f\u96c6\u6ca1\u6709\u63a5\u4e0b\u90a3\u6761\u7ea2\u7ebf\uff0c\u800c\u662f\u53cd\u624b\u5c06\u5c0f\u7948\u7d27\u7d27\u62b1\u4f4f\uff0c\u4ee5\u4e24\u4eba\u76f8\u62e5\u79bb\u53bb(\u590d\u6d3b\u5728\u65b0\u4e16\u754c)\u4f5c\u4e3a\u6536\u5c3e\u3002\u4f46\u662f\uff0c\u96c6\u63a5\u4e0b\u4e86\uff0c\u4e8e\u662f\u96c6\u5c31\u6d3b\u4e0b\u6765\u4e86\u3002\u4e0d\u8fc7\uff0c\u540e\u6765\u770b\u522b\u4eba\u5bf9op\u7684\u89e3\u8bfb\uff0c\u7a81\u7136\u53d1\u73b0op\u91cc\u4fbf\u9690\u85cf\u4e86\u6545\u4e8b\u7684\u7ed3\u5c40\u4e00\u79cd\u662f\u7948\u72ec\u81ea\u590d\u6d3b\u5728\u7406\u60f3\u4e16\u754c\uff0c\u4e0d\u505c\u7684\u5bfb\u627e\u8fd8\u6d3b\u5728\u73b0\u5b9e\u4e16\u754c\u7684\u6a31\u6ee1\u96c6\u5374\u627e\u4e0d\u5230\u3002\u4e0d\u8fc7\uff0c\u6211\u66f4\u559c\u6b22\u53e6\u5916\u4e00\u79cd\u89e3\u8bfb\uff0c\u6a31\u6ee1\u96c6\u63a5\u53d7\u4e86\u6765\u81ea\u5c0f\u7948\u7684\u4e00\u5207\uff0c\u6240\u4ee5\u5931\u660e\u4e86(\u6700\u540e\u7948\u62e5\u62b1\u96c6\u7684\u65f6\u5019\u662f\u770b\u4e0d\u89c1\u7684)\uff0c\u6240\u4ee5\u5c0f\u7948\u6d3b\u5728\u6a31\u6ee1\u96c6\u7684\u5185\u5fc3\u4e16\u754c\u4e2d\uff0c\u4e24\u4eba\u53ef\u4ee5\u901a\u8fc7\u5fc3\u7075\u611f\u53d7\u5f7c\u6b64\u3002\u4eba\u603b\u662f\u60f3\u770b\u89c1\u4ed6\u4eec\u6240\u60f3\u770b\u89c1\u7684\u561b\uff0c\u6211\u53ef\u592a\u5e0c\u671b\u4e24\u4eba\u80fd\u591f\u5b9e\u6253\u5b9e\u7684\u5728\u4e00\u8d77\u4e86www\u3002</p> <p>\u200b       \u603b\u7684\u6765\u8bf4\uff0c\u770b\u5b8c\u662f\u8ba9\u4eba\u96be\u8fc7\u7684\uff0c\u96be\u8fc7\u7684\u4e0d\u4ec5\u6709\u4e24\u4eba\u7684\u4e16\u754c\u76f8\u9694\uff0c\u4e5f\u6709\u4eba\u5fc3\u7684\u4e92\u76f8\u4f24\u5bb3\uff0c\u8fd9\u4e5f\u662f\u73b0\u5b9e\u7684\u6a21\u6837\u4e4b\u4e00\u5427\u3002</p> <p>\u90a3\u4e9b\u751f\u5b58\u8fc7\u7684\u5370\u8bc1 \u6211\u6765\u5531\u51fa\u5b83\u4eec\u7684\u5fc3\u58f0 \u4e3a\u4e86\u6211\u90a3\u65e0\u540d\u7684\u631a\u53cb\u554a</p> <p>\uff08\u5b8c\uff09</p>"},{"location":"blog/linux-%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/","title":"Linux \u5b66\u4e60\u8bb0\u5f55","text":""},{"location":"blog/linux-%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/#linux","title":"Linux\u547d\u4ee4\u5b66\u4e60","text":""},{"location":"blog/linux-%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/#1linux","title":"1.Linux\u4e2d\u7684\u89e3\u538b\u7f29/\u538b\u7f29\u547d\u4ee4","text":"<ul> <li>tar\u3001gzip\u3001gunzip\u3001bzip2\u3001bunzip2\u3001compress \u3001uncompress\u3001 zip\u3001 unzip\u3001rar\u3001unrar \u7b49</li> </ul> <ul> <li>tar\u7684\u53c2\u6570\u610f\u4e49\uff1a</li> </ul> <pre><code>-c: \u5efa\u7acb\u538b\u7f29\u6863\u6848 \n-x\uff1a\u89e3\u538b \n-t\uff1a\u67e5\u770b\u5185\u5bb9 \n-r\uff1a\u5411\u538b\u7f29\u5f52\u6863\u6587\u4ef6\u672b\u5c3e\u8ffd\u52a0\u6587\u4ef6 \n-u\uff1a\u66f4\u65b0\u539f\u538b\u7f29\u5305\u4e2d\u7684\u6587\u4ef6\n-z\uff1a\u6709gzip\u5c5e\u6027\u7684 \n-j\uff1a\u6709bz2\u5c5e\u6027\u7684 \n-Z\uff1a\u6709compress\u5c5e\u6027\u7684 \n-v\uff1a\u663e\u793a\u6240\u6709\u8fc7\u7a0b \n-O\uff1a\u5c06\u6587\u4ef6\u89e3\u5f00\u5230\u6807\u51c6\u8f93\u51fa \n-f: \u4f7f\u7528\u6863\u6848\u540d\u5b57\uff0c\u5207\u8bb0\uff0c\u8fd9\u4e2a\u53c2\u6570\u662f\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff0c\u540e\u9762\u53ea\u80fd\u63a5\u6863\u6848\u540d\u3002 \n</code></pre> <p>\u538b\u7f29\uff1a</p> <pre><code>tar \u2013cvf jpg.tar *.jpg       // \u5c06\u76ee\u5f55\u91cc\u6240\u6709jpg\u6587\u4ef6\u6253\u5305\u6210 tar.jpg \ntar \u2013czf jpg.tar.gz *.jpg    // \u5c06\u76ee\u5f55\u91cc\u6240\u6709jpg\u6587\u4ef6\u6253\u5305\u6210 jpg.tar \u540e\uff0c\u5e76\u4e14\u5c06\u5176\u7528 gzip \u538b\u7f29\uff0c\u751f\u6210\u4e00\u4e2a gzip \u538b\u7f29\u8fc7\u7684\u5305\uff0c\u547d\u540d\u4e3a jpg.tar.gz \ntar \u2013cjf jpg.tar.bz2 *.jpg   // \u5c06\u76ee\u5f55\u91cc\u6240\u6709jpg\u6587\u4ef6\u6253\u5305\u6210 jpg.tar \u540e\uff0c\u5e76\u4e14\u5c06\u5176\u7528 bzip2 \u538b\u7f29\uff0c\u751f\u6210\u4e00\u4e2a bzip2 \u538b\u7f29\u8fc7\u7684\u5305\uff0c\u547d\u540d\u4e3ajpg.tar.bz2 \ntar \u2013cZf jpg.tar.Z *.jpg     // \u5c06\u76ee\u5f55\u91cc\u6240\u6709 jpg \u6587\u4ef6\u6253\u5305\u6210 jpg.tar \u540e\uff0c\u5e76\u4e14\u5c06\u5176\u7528 compress \u538b\u7f29\uff0c\u751f\u6210\u4e00\u4e2a umcompress \u538b\u7f29\u8fc7\u7684\u5305\uff0c\u547d\u540d\u4e3ajpg.tar.Z \nrar a jpg.rar *.jpg          // rar\u683c\u5f0f\u7684\u538b\u7f29\uff0c\u9700\u8981\u5148\u4e0b\u8f7d rar for linux \nzip jpg.zip *.jpg            // zip\u683c\u5f0f\u7684\u538b\u7f29\uff0c\u9700\u8981\u5148\u4e0b\u8f7d zip for linux\n</code></pre> <p>\u89e3\u538b\uff1a</p> <pre><code>tar \u2013xvf file.tar         // \u89e3\u538b tar \u5305 \ntar -xzvf file.tar.gz     // \u89e3\u538b tar.gz \ntar -xjvf file.tar.bz2    // \u89e3\u538b tar.bz2 \ntar \u2013xZvf file.tar.Z      // \u89e3\u538b tar.Z \nunrar e file.rar          // \u89e3\u538b rar \nunzip file.zip            // \u89e3\u538b zip \n</code></pre>"},{"location":"blog/linux-%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/#linux_1","title":"Linux \u77e5\u8bc6","text":""},{"location":"blog/linux-%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/#1swp","title":"1.\u5173\u4e8e.swp\u6587\u4ef6","text":"<p>\u5f53\u7528 vim\u6253\u5f00\u6587\u4ef6\uff0c\u4f46\u662f\u7ec8\u7aef\u5f02\u5e38\u9000\u51fa\uff0c\u7cfb\u7edf\u4f1a\u751f\u4ea7\u4e00\u4e2a .\u6587\u4ef6\u540d.swp \u7684\u6587\u4ef6\u3002\u53ef\u4ee5\u5229\u7528\u8fd9\u4e2a\u6587\u4ef6\u6062\u590d\u6e90\u6587\u4ef6</p> <ul> <li>\u547d\u4ee4\uff1a vim -r .filename.swp</li> </ul>"},{"location":"blog/%E5%87%8C%E6%99%A8%E9%9B%A8%E5%A4%9C%E8%92%99%E8%92%99%E7%9A%84/","title":"\u51cc\u6668\uff0c\u96e8\u591c\uff0c\u8499\u8499\u7684","text":""},{"location":"blog/%E5%87%8C%E6%99%A8%E9%9B%A8%E5%A4%9C%E8%92%99%E8%92%99%E7%9A%84/#date-20221119","title":"Date: 2022/11/19","text":"<p>\u201c\u7834\u6653\uff0c\u878d\u5316\uff0c\u662f\u4e00\u6761\u901a\u5f80\u6625\u5929\u7684\u5fc5\u7ecf\u4e4b\u8def\u3002\u201d</p> <p></p> <p>\u7a97\u4e0a\uff0c\u6cdb\u8d77\u4e86\u5c42\u5c42\u8584\u96fe\uff0c\u90a3\u662f\u7ec6\u96e8\u7559\u4e0b\u6765\u7684\u4e9b\u8bb8\u75d5\u8ff9\u3002\u4e5f\u8bb8\u73b0\u5728\u8fd8\u672a\u505c\u5427\u3002\u5916\u9762\u7684\u5ba3\u4f20\u677f\u4e0a\u8fd8\u60ac\u6302\u7740\u8fa9\u8bba\u8d5b\u7684\u9898\u76ee\uff0c\u5f88\u6709\u8da3\uff0c\u5f53\u4f60\u6b7b\u524d\u4f60\u4f1a\u9009\u62e9\u8bfb\u4e00\u9996\u8bd7\u8fd8\u662f\u89c1\u5bb6\u4eba\u6700\u540e\u4e00\u9762\u3002\u7b2c\u4e00\u611f\u89c9\u5c31\u662f\u6d6a\u6f2b\u4e3b\u4e49\u4e0e\u73b0\u5b9e\u4e3b\u4e49\u7684\u78b0\u649e\uff0c\u7ec6\u7ec6\u60f3\u6765\uff0c\u4f3c\u4e4e\u53c8\u6709\u4e9b\u5938\u5927\u5316\u4e86\u3002\u975e\u5e38\u4eab\u53d7\u5728\u591c\u6df1\u4eba\u9759\u7684\u9ed1\u591c\u91cc\uff0c\u5e26\u7740\u8033\u673a\u542c\u7740\u6749\u5349\u5148\u751f\u7684\u97f3\u4e50\uff0c\u6e29\u67d4\u5b89\u9759\uff0c\u5199\u7740\u5fc3\u7075\u7684\u6d41\u52a8\uff0c\u4eff\u4f5b\u4e00\u5207\u90fd\u9759\u6b62\u5728\u8fd9\u91cc\u3002  </p> <p>\u4eff\u4f5b\u4ece\u672a\u89c1\u8fc7\u8fd9\u6837\u7684\u7d2b\u91d1\u6e2f\uff0c\u6655\u6655\u706f\u5149\u5728\u96fe\u4e2d\u6563\u53d1\u7740\u5fe7\u4f24\uff0c\u5c0f\u96e8\u4e3a\u5929\u7a7a\u6dfb\u4e0a\u4e86\u9762\u7eb1\uff0c\u4e00\u4e2a\u4eba\u72ec\u81ea\u6f2b\u6b65\u4e8e\u5176\u4e2d\u3002\u4e0d\u7528\u8003\u8651\u4e16\u4e8b\u829c\u6742\uff0c\u5076\u7136\u5bfb\u5f97\u4e00\u756a\u6e05\u9759\u3002\u9047\u89c1\u770b\u4e0a\u53bb\u9700\u8981\u5e2e\u5fd9\u7684\u60c5\u51b5\uff0c\u4fbf\u987a\u624b\u6298\u8fd4\u53bb\u52a9\u5979\u4e00\u529b\uff0c\u7136\u540e\u5934\u4e5f\u4e0d\u56de\u7684\u79bb\u5f00\u3002\u5f88\u5f00\u5fc3\u3002\u81f3\u5c11\u8fd9\u4efd\u6e29\u6696\u80fd\u5e26\u7ed9\u5979\u4e00\u4e9b\u6170\u85c9\uff0c\u5728\u8fd9\u5bd2\u96e8\u4e4b\u4e2d\uff0c\u4e5f\u80fd\u7ed9\u6211\u7a7a\u6d1e\u7684\u5fc3\u7559\u4e0b\u4e9b\u8bb8\u5feb\u4e50\u7684\u56de\u5fc6\u3002  </p> <p>\u51ac\u65e5\u5df2\u7ecf\u5728\u8def\u4e0a\u4e86\uff0c\u60f3\u505a\u4e00\u4e2a\u6e29\u67d4\u7684\u4eba\u5440\u3002\u56e0\u4e3a\u66fe\u88ab\u6e29\u67d4\u7684\u4eba\u90a3\u6837\u5bf9\u5f85\u8fc7\uff0c\u6df1\u6df1\u4e86\u89e3\u90a3\u79cd\u88ab\u6e29\u67d4\u76f8\u5f85\u7684\u611f\u89c9\u3002\u5bf9\u4e07\u4e8b\u4e07\u7269\u90fd\u53ef\u7231\u4e00\u70b9\uff0c\u5bf9\u6211\u559c\u6b22\u7684\u4eba\u5f00\u5fc3\u5730\u6253\u4e2a\u62db\u547c\uff0c\u907f\u5f00\u90a3\u4e9b\u8ba8\u538c\u7684\u4eba\u6216\u4e8b\uff0c\u4e0d\u8fc7\u8fd8\u662f\u52c7\u6562\u7684\u9762\u5bf9\u4ed6\u4eec\u66f4\u597d\u5427\u3002 </p> <p>\u54c8\u54c8\uff0c\u88ab\u5b50\u91cc\u6696\u70d8\u70d8\u7684\uff0c\u751a\u81f3\u8fd8\u6709\u70b9\u70ed\uff0c\u751f\u6d3b\u8fd8\u662f\u8981\u524d\u8fdb\uff0c\u6ca1\u6709\u628a\u63e1\u4f4f\u7684\u4e00\u4e2a\u53c8\u4e00\u4e2a\u673a\u4f1a\u5c31\u8ba9\u5b83\u8fc7\u53bb\u5427\u3002\u4e00\u8f88\u5b50\u90a3\u4e48\u957f\uff0c\u8fd8\u6709\u65e0\u6570\u53ef\u80fd\u6027\u7b49\u5f85\u6211\u53bb\u63a2\u7d22\u3002\u60f3\u5230\u8fd9\u91cc\uff0c\u5f88\u5f00\u5fc3\uff0c\u4e5f\u6709\u4e86\u751f\u6d3b\u7684\u70ed\u60c5\u3002\u5e0c\u671b\u96be\u8fc7\u7684\u65f6\u5019\uff0c\u8fd9\u4e9b\u8bdd\u8fd8\u80fd\u8bb0\u8d77\u3002  </p> <p>\u547c~ \u771f\u4e0d\u60f3\u7ed3\u675f\u5440\uff0c\u4eca\u665a\u53c8\u6d6a\u8d39\u4e86\u4e0d\u5c11\u65f6\u5149\u8bc1\u5b9e\u4e86\u6211\u4e0d\u559c\u6b22\u67d0\u4e9b\u4e8b\u60c5\uff0c\u4e0d\u5fc5\u4e3a\u4e86\u522b\u4eba\u7684\u9080\u7ea6\u800c\u803d\u8bef\u81ea\u8eab\uff0c\u5f53\u90a3\u4e2a\u4eba\u4e0d\u503c\u5f97\u7684\u65f6\u5019\u3002  </p> <p>\u665a\u5b89\uff0cDear.</p>"},{"location":"blog/%E5%88%9D%E9%9B%AA/","title":"\u521d\u96ea","text":""},{"location":"blog/%E5%88%9D%E9%9B%AA/#_1","title":"\u521d\u96ea","text":"<p>\u4f3c\u4e4e\u6709\u4e9b\u7a81\u7136\u5462\uff0c\u4eca\u5e74\u7684\u7b2c\u4e00\u573a\u96ea\u3002</p> <p>\u5c1a\u4e14\u8fd8\u5904\u4e8e\u9694\u79bb\u7684\u72b6\u6001\u4e2d\uff0c\u8e72\u5728\u623f\u95f4\u7684\u843d\u5730\u7a97\u524d\uff0c\u770b\u96ea\u82b1\u7eb7\u7eb7\u626c\u626c\u7684\u6492\u4e0b\uff0c\u5fc3\u91cc\u5341\u5206\u65b0\u5947\u3002\u4e8e\u662f\u6682\u4e14\u653e\u4e0b\u624b\u4e2d\u7684\u7410\u4e8b\uff0c\u8bb0\u4e0b\u6b64\u65f6\u7684\u5fc3\u7eea\u3002</p> <p>\u5f88\u4e71\u5f88\u4e71\uff0c\u4e0d\u77e5\u4ece\u4f55\u8bb2\u8d77\u3002\u90a3\u5c31\u5148\u5206\u4eab\u4e00\u7bc7\u6563\u6587\u5427\uff0c\u5eb7\u65af\u5766\u4e01\u7684\u300a\u96ea\u300b\u3002</p> <p></p> <p>\u539f\u6587\u5982\u4e0b\uff1a</p> <p>\u96ea</p> <p>[\u82cf]\u5eb7\u65af\u5766\u4e01\u00b7\u5e15\u4e4c\u65af\u6258\u592b\u65af\u57fa</p> <p>\u5f7c\u5f97\u6d1b\u8299\u5a1c\u642c\u6765\u4e00\u4e2a\u6708\u540e\uff0c\u6ce2\u5854\u6ce2\u592b\u8001\u4eba\u5c31\u53bb\u4e16\u4e86\u3002\u8fd9\u5ea7\u623f\u5b50\u91cc\u5c31\u5269\u4e0b\u5f7c\u5f97\u6d1b\u8299\u5a1c\u548c\u5979\u7684\u5973\u513f\u74e6\u4e3d\u5a05\u3002</p> <p>\u8fd9\u5ea7\u53ea\u6709\u4e09\u4e2a\u623f\u95f4\u7684\u5c0f\u5c4b\u5750\u843d\u5728\u5c71\u4e0a\uff0c\u5c0f\u5c4b\u540e\u9762\u662f\u4e00\u5ea7\u51cb\u96f6\u7684\u82b1\u56ed\u3002</p> <p>\u79bb\u5a5a\u540e\u7684\u5f7c\u5f97\u6d1b\u8299\u5a1c\u79bb\u5f00\u83ab\u65af\u79d1\u4ee5\u540e\uff0c\u5728\u5f88\u957f\u4e00\u6bb5\u65f6\u95f4\u91cc\u90fd\u4e0d\u4e60\u60ef\u8fd9\u5ea7\u7a7a\u65f7\u7684\u5c0f\u57ce\u3002\u53ef\u662f\u56de\u83ab\u65af\u79d1\u5df2\u7ecf\u4e0d\u53ef\u80fd\u4e86\u3002\u5979\u5728\u8fd9\u5ea7\u5c0f\u57ce\u7684\u519b\u533b\u9662\u627e\u4e86\u4e8b\u505a\uff0c\u53d7\u4f24\u7684\u5fc3\u4e5f\u5c31\u6682\u65f6\u5b89\u5b9a\u4e0b\u6765\u4e86\u3002</p> <p>\u6e10\u6e10\u5730\uff0c\u5979\u6709\u70b9\u559c\u6b22\u4e0a\u8fd9\u5ea7\u5c0f\u57ce\u4e86\uff0c\u559c\u6b22\u4e0a\u4e86\u8fd9\u5c0f\u57ce\u51ac\u65e5\u91cc\u6d01\u767d\u3001\u6e29\u67d4\u7684\u96ea\u3002\u5979\u6e10\u6e10\u4e60\u60ef\u4e86\u5c0f\u5c4b\u91cc\u6446\u653e\u7740\u7684\u90a3\u67b6\u8d70\u4e86\u8c03\u7684\u94a2\u7434\uff0c\u4e60\u60ef\u4e86\u6302\u5728\u5899\u4e0a\u7684\u90a3\u4e9b\u4e1a\u5df2\u53d1\u9ec4\u7684\u7167\u7247\u3002</p> <p>\u5979\u77e5\u9053\u8001\u4eba\u6709\u4e00\u4e2a\u513f\u5b50\uff0c\u5982\u4eca\u6b63\u5728\u9ed1\u6d77\u8230\u961f\u4e0a\u670d\u5f79\u3002\u684c\u4e0a\u6709\u4e00\u5f20\u4ed6\u7684\u7167\u7247\u3002\u6709\u65f6\uff0c\u5979\u4f1a\u62ff\u8d77\u4ed6\u7684\u7167\u7247\uff0c\u7aef\u8be6\u4e00\u756a\uff0c\u5979\u603b\u662f\u9690\u7ea6\u89c9\u5f97\u4f3c\u4e4e\u89c1\u8fc7\u4ed6\uff0c\u53ef\u662f\uff0c\u662f\u5728\u54ea\u91cc\u5462\uff1f\u662f\u4ec0\u4e48\u65f6\u5019\u7684\u4e8b\u5462\uff1f</p> <p>\u6c34\u5175\u90a3\u53cc\u5b89\u8be6\u7684\u773c\u775b\u4eff\u4f5b\u5728\u95ee\uff1a\u201c\u5582\uff0c\u600e\u4e48\u6837\uff1f\u96be\u9053\u60a8\u771f\u7684\u60f3\u4e0d\u8d77\u6765\uff0c\u6211\u4eec\u662f\u5728\u54ea\u91cc\u76f8\u4f1a\u7684\u5417\uff1f\u201d</p> <p>\u51ac\u5929\u5230\u6765\u4e4b\u540e\uff0c\u9646\u7eed\u6709\u5199\u7ed9\u6ce2\u5854\u6ce2\u592b\u8001\u5934\u7684\u4fe1\u5bc4\u6765\u3002\u5f7c\u5f97\u6d1b\u8299\u5a1c\u628a\u8fd9\u4e9b\u4fe1\u90fd\u53e0\u653e\u5728\u4e66\u684c\u4e0a\u3002\u6709\u4e00\u5929\u591c\u91cc\uff0c\u5979\u9192\u4e86\u8fc7\u6765\u3002\u7a97\u5916\u7684\u767d\u96ea\u53d1\u51fa\u660f\u6697\u7684\u5149\u4eae\u3002\u5979\u70b9\u71c3\u684c\u4e0a\u7684\u8721\u70db\uff0c\u5c0f\u5fc3\u5730\u62bd\u51fa\u4e00\u5c01\u4fe1\uff0c\u62c6\u5f00\u4e86\u4fe1\u5c01\uff0c\u73af\u987e\u4e86\u7247\u523b\uff0c\u4fbf\u8bfb\u4e86\u8d77\u6765\u3002</p> <p>\u201c\u4eb2\u7231\u7684\u8001\u7237\u5b50\uff0c\u201d\u5979\u5ff5\u9053\uff0c\u201c\u6211\u4ece\u6218\u573a\u4e0a\u4e0b\u6765\u5df2\u7ecf\u5728\u533b\u9662\u91cc\u8eba\u4e86\u4e00\u4e2a\u6708\u4e86\u3002\u4f24\u4e0d\u662f\u5f88\u91cd\u3002\u603b\u7684\u6765\u8bf4\uff0c\u4f24\u5feb\u8981\u517b\u597d\u5566\u3002\u201d</p> <p>\u201c\u7238\u7238\uff0c\u6211\u5e38\u5e38\u60f3\u8d77\u4f60\uff0c\u201d\u5979\u63a5\u7740\u5ff5\u4e0b\u53bb\uff0c\u201c\u6211\u4e5f\u5e38\u5e38\u60f3\u8d77\u6211\u4eec\u5bb6\u8fd9\u5ea7\u5c0f\u5c4b\uff0c\u4f46\u8fd9\u4e9b\u79bb\u6211\u4f3c\u4e4e\u90fd\u975e\u5e38\u9065\u8fdc\u3002\u6211\u53ea\u8981\u4e00\u95ed\u4e0a\u773c\u775b\uff0c\u7acb\u523b\u5c31\u4f1a\u770b\u5230\uff1a\u6211\u597d\u50cf\u6b63\u5728\u63a8\u5f00\u5c0f\u95e8\uff0c\u8d70\u8fdb\u82b1\u56ed\u3002\u8fd9\u662f\u5728\u51ac\u5929\uff0c\u767d\u96ea\u7691\u7691\uff0c\u53ef\u662f\u901a\u5411\u90a3\u5ea7\u65e7\u4ead\u5b50\u7684\u5c0f\u5f84\u88ab\u6e05\u626b\u5f97\u5e72\u5e72\u51c0\u51c0\uff0c\u94a2\u7434\u5f53\u7136\u5df2\u7ecf\u4fee\u597d\u5566\uff0c\u4f60\u628a\u90a3\u4e9b\u87ba\u65cb\u72b6\u7684\u8721\u70db\u63d2\u5728\u4e86\u70db\u53f0\u4e0a\u3002\u94a2\u7434\u4e0a\u6446\u7740\u7684\u8fd8\u662f\u90a3\u4e9b\u66f2\u8c31\uff1a\u300a\u9ed1\u6843\u7687\u540e\u300b\u5e8f\u66f2\u548c\u6292\u60c5\u66f2\u300a\u4e3a\u4e86\u9065\u8fdc\u7684\u7956\u56fd\u7684\u6d77\u5cb8\u2026\u2026\u300b\u3002\u95e8\u4e0a\u7684\u94c3\u8fd8\u54cd\u5417\uff1f\u6211\u8d70\u7684\u65f6\u5019\u8fd8\u662f\u6ca1\u6765\u5f97\u53ca\u628a\u8fd9\u4fee\u597d\u3002\u6211\u96be\u9053\u8fd8\u80fd\u518d\u89c1\u5230\u8fd9\u4e00\u5207\u5417\uff1f\u6211\u660e\u767d\uff0c\u6211\u5728\u4fdd\u536b\u7684\u4e0d\u4ec5\u662f\u6574\u4e2a\u56fd\u5bb6\uff0c\u4e5f\u5728\u4fdd\u536b\u8fd9\u4e2a\u56fd\u5bb6\u91cc\u7684\u6bcf\u4e00\u4e2a\u89d2\u843d\uff0c\u5305\u62ec\u6211\u4eec\u5bb6\u7684\u82b1\u56ed\u5c0f\u5c4b\u3002</p> <p>\u201c\u6211\u51fa\u9662\u540e\uff0c\u4f1a\u6709\u4e00\u4e2a\u5f88\u77ed\u7684\u65f6\u95f4\u56de\u5bb6\u63a2\u4eb2\u3002\u6211\u8fd8\u4e0d\u80fd\u786e\u5b9a\u3002\u4e0d\u8fc7\u6700\u597d\u522b\u7b49\u3002\u201d</p> <p>\u5979\u601d\u5fd6\uff0c\u6216\u8bb8\u5c31\u5728\u8fd9\u4e24\u5929\u5185\uff0c\u8fd9\u4e2a\u964c\u751f\u4eba\u5c31\u4f1a\u4ece\u524d\u7ebf\u56de\u6765\u3002</p> <p>\u4e00\u5927\u65e9\uff0c\u5f7c\u5f97\u6d1b\u8299\u5a1c\u5c31\u5429\u5490\u74e6\u4e3d\u5a05\u62ff\u8d77\u6728\u94f2\u53bb\u6e05\u7406\u901a\u5411\u5c71\u5761\u4e0a\u90a3\u5ea7\u4ead\u5b50\u7684\u5c0f\u5f84\u3002\u8fd9\u5ea7\u4ead\u5b50\u5df2\u7ecf\u975e\u5e38\u7834\u65e7\u4e86\u3002\u5f7c\u5f97\u6d1b\u8299\u5a1c\u4fee\u7406\u597d\u4e86\u95e8\u94c3\uff0c\u5979\u6309\u4e86\u6309\u95e8\u94c3\uff0c\u95e8\u94c3\u54cd\u4e86\u8d77\u6765\uff0c\u58f0\u97f3\u5f88\u5927\u3002\u5979\u663e\u5f97\u683c\u5916\u7cbe\u795e\uff0c\u9762\u8272\u7eef\u7ea2\uff0c\u8bf4\u8bdd\u55d3\u95e8\u7279\u522b\u5927\u3002\u5979\u4ece\u57ce\u91cc\u8bf7\u6765\u4e86\u4e00\u4f4d\u8001\u6280\u5e08\uff0c\u4ed6\u4fee\u597d\u4e86\u94a2\u7434\uff0c\u8bf4\u8fd9\u786e\u662f\u4e00\u67b6\u597d\u94a2\u7434\u3002</p> <p>\u8001\u6280\u5e08\u8d70\u4e86\u4e4b\u540e\uff0c\u5f7c\u5f97\u6d1b\u8299\u5a1c\u5c0f\u5fc3\u7ffc\u7ffc\u5730\u4ece\u62bd\u5c49\u7ffb\u627e\u51fa\u4e00\u5305\u7c97\u7c97\u7684\u87ba\u65cb\u72b6\u8721\u70db\u3002\u5979\u628a\u8721\u70db\u63d2\u5230\u4e86\u94a2\u7434\u67b6\u4e0a\u7684\u70db\u53f0\u4e0a\u3002\u665a\u4e0a\uff0c\u5979\u70b9\u71c3\u8721\u70db\uff0c\u5750\u5230\u94a2\u7434\u524d\uff0c\u987f\u65f6\uff0c\u6574\u4e2a\u623f\u5b50\u90fd\u5145\u6ee1\u4e86\u97f3\u4e50\u58f0\u3002</p> <p>\u8fd8\u5728\u706b\u8f66\u4e0a\uff0c\u6ce2\u5854\u6ce2\u592b\u4e2d\u5c09\u5c31\u7b97\u597d\u4e86\uff0c\u7559\u7ed9\u4ed6\u5f85\u5728\u7236\u4eb2\u90a3\u513f\u7684\u65f6\u95f4\u4e0d\u8d85\u8fc7\u4e00\u663c\u591c\u3002\u706b\u8f66\u662f\u4e0b\u5348\u5230\u8fbe\u5c0f\u57ce\u7684\u3002\u5c31\u5728\u8f66\u7ad9\uff0c\u4e2d\u5c09\u4ece\u8ba4\u8bc6\u7684\u7ad9\u957f\u90a3\u513f\u4e86\u89e3\u5230\uff0c\u7236\u4eb2\u5df2\u7ecf\u5728\u4e00\u4e2a\u6708\u524d\u53bb\u4e16\u4e86\uff0c\u5982\u4eca\u5728\u8fd9\u5ea7\u5c4b\u91cc\u4f4f\u7740\u7684\u662f\u4e00\u4e2a\u5e26\u7740\u5973\u513f\u4ece\u83ab\u65af\u79d1\u6765\u7684\u964c\u751f\u7684\u5973\u6b4c\u5531\u5bb6\u3002\u7ad9\u957f\u5efa\u8bae\u4e2d\u5c09\u5c31\u522b\u56de\u5bb6\u53bb\u4e86\u3002</p> <p>\u4e2d\u5c09\u6c89\u9ed8\u4e86\u4e00\u4f1a\uff0c\u8bf4\u4e86\u58f0\u201c\u8c22\u8c22\u201d\uff0c\u4fbf\u8d70\u4e86\u51fa\u53bb\u3002\u7ad9\u957f\u770b\u7740\u4ed6\u7684\u80cc\u5f71\uff0c\u6447\u4e86\u6447\u5934\u3002</p> <p>\u7a7f\u8fc7\u5c0f\u57ce\uff0c\u4e00\u7247\u66ae\u972d\u4e2d\uff0c\u6ce2\u5854\u6ce2\u592b\u7ec8\u4e8e\u8d70\u5230\u4e86\u623f\u5b50\u8ddf\u524d\u3002\u5c0f\u5fc3\u7ffc\u7ffc\u5730\u6253\u5f00\u5c0f\u95e8\uff0c\u53ef\u662f\u5c0f\u95e8\u8fd8\u662f\u54af\u5431\u5730\u54cd\u4e86\u4e00\u58f0\u3002\u82b1\u56ed\u4eff\u4f5b\u6296\u52a8\u4e86\u4e00\u4e0b\u3002\u6811\u679d\u4e0a\u6709\u96ea\u82b1\u7c0c\u7c0c\u98d8\u843d\uff0c\u6c99\u6c99\u4f5c\u54cd\u3002\u4ed6\u73af\u89c6\u56db\u5468\u3002\u96ea\u5730\u91cc\uff0c\u4e00\u6761\u5df2\u6253\u626b\u5e72\u51c0\u7684\u5c0f\u5f84\u901a\u5411\u65e7\u4ead\u5b50\uff0c\u4ed6\u4e0d\u77e5\u4e0d\u89c9\u5730\u8d70\u5230\u4e86\u4ead\u5b50\u91cc\uff0c\u628a\u624b\u653e\u5728\u5e74\u4ee3\u5df2\u4e45\u7684\u680f\u6746\u4e0a\u3002\u8fdc\u65b9\uff0c\u68ee\u6797\u7684\u5c3d\u5934\uff0c\u5929\u7a7a\u96fe\u8499\u8499\u4e00\u7247\uff0c\u5448\u73b0\u51fa\u7c89\u7ea2\u8272\u7684\u971e\u5149\uff0c\u5927\u6982\u662f\u6708\u4eae\u5728\u4e91\u5c42\u540e\u9762\u6162\u6162\u5347\u8d77\u7684\u7f18\u6545\u3002</p> <p>\u201c\u600e\u4e48\u4f1a\u662f\u8fd9\u6837\uff1f\u201d\u6ce2\u5854\u6ce2\u592b\u4e00\u8138\u832b\u7136\uff0c\u8f7b\u58f0\u5730\u81ea\u8a00\u81ea\u8bed\u9053\u3002</p> <p>\u4e0d\u77e5\u662f\u8c01\u5c0f\u5fc3\u7ffc\u7ffc\u5730\u62cd\u4e86\u62cd\u6ce2\u5854\u6ce2\u592b\u7684\u80a9\u8180\u3002\u4ed6\u56de\u8fc7\u5934\u53bb\u3002\u5728\u4ed6\u8eab\u540e\u7ad9\u7740\u4e00\u4f4d\u5e74\u8f7b\u7684\u5973\u4eba\u3002\u201c\u8fdb\u5c4b\u5427\uff0c\u522b\u5728\u8fd9\u7ad9\u7740\u3002\u201d\u5973\u4eba\u8f7b\u8f7b\u8bf4\u3002\u6ce2\u5854\u6ce2\u592b\u4e00\u8a00\u4e0d\u53d1\u3002\u5973\u4eba\u62fd\u7740\u4ed6\u7684\u8896\u53e3\uff0c\u6cbf\u7740\u6253\u626b\u5e72\u51c0\u7684\u5c0f\u5f84\u8d70\u5411\u5c0f\u6728\u5c4b\u3002\u5feb\u5230\u53f0\u9636\u7684\u65f6\u5019\uff0c\u6ce2\u5854\u6ce2\u592b\u505c\u4e86\u4e0b\u6765\uff0c\u611f\u5230\u5589\u5499\u91cc\u4e00\u9635\u75c9\u631b\uff0c\u51e0\u4e4e\u5598\u4e0d\u4e0a\u6c14\u6765\u3002\u5973\u4eba\u8fd8\u662f\u90a3\u6837\u8f7b\u67d4\u5730\u8bf4\u9053\uff1a\u201c\u6ca1\u5173\u7cfb\u3002\u8bf7\u60a8\u522b\u62d8\u675f\u3002\u5f88\u5feb\u5c31\u4f1a\u8fc7\u53bb\u7684\u3002\u201d</p> <p>\u4ed6\u8fdb\u4e86\u5c4b\u5b50\u3002\u6574\u4e2a\u665a\u4e0a\u6ce2\u5854\u6ce2\u592b\u90fd\u65e0\u6cd5\u6d88\u9664\u4e00\u79cd\u5947\u602a\u7684\u5e7b\u89c9\uff0c\u4eff\u4f5b\u4ed6\u5904\u5728\u4e00\u79cd\u98d8\u7136\u7684\u3001\u5f71\u5f71\u7ef0\u7ef0\u7684\uff0c\u4f46\u5374\u5341\u5206\u771f\u5b9e\u53ef\u9760\u7684\u68a6\u5883\u4e2d\u3002\u94a2\u7434\u3001\u8721\u70db\u2026\u2026\u5c4b\u5b50\u91cc\u7684\u4e00\u5207\u90fd\u5982\u4ed6\u5f53\u521d\u60f3\u770b\u89c1\u7684\u4e00\u6837\u3002</p> <p>\u5f7c\u5f97\u6d1b\u8299\u5a1c\u5750\u5230\u94a2\u7434\u524d\uff0c\u5c0f\u5fc3\u7ffc\u7ffc\u5730\u5f39\u594f\u4e86\u51e0\u66f2\uff0c\u8f6c\u8fc7\u8eab\uff0c\u5bf9\u6ce2\u5854\u6ce2\u592b\u8bf4\uff1a</p> <p>\u201c\u6211\u89c9\u5f97\u6211\u597d\u50cf\u5728\u54ea\u513f\u89c1\u8fc7\u60a8\u3002\u201d</p> <p>\u201c\u4e5f\u8bb8\u5427\uff0c\u201d\u6ce2\u5854\u6ce2\u592b\u7b54\u9053\uff0c\u201c\u4e0d\u8fc7\uff0c\u60f3\u4e0d\u8d77\u6765\u5566\u3002\u201d</p> <p>\u51e0\u5929\u4e4b\u540e\uff0c\u5f7c\u5f97\u6d1b\u8299\u5a1c\u6536\u5230\u4e86\u6ce2\u5854\u6ce2\u592b\u5199\u6765\u7684\u4fe1\u3002</p> <p>\u201c\u6211\u5f53\u7136\u8bb0\u5f97\u6211\u4eec\u662f\u5728\u54ea\u91cc\u76f8\u9022\u7684\uff0c\u201d\u6ce2\u5854\u6ce2\u592b\u5199\u9053\uff0c\u201c\u53ef\u662f\u6211\u4e0d\u60f3\u5728\u5bb6\u91cc\u5bf9\u60a8\u8bf4\u3002\u60a8\u8fd8\u8bb0\u5f971927\u5e74\u5728\u5229\u74e6\u5b63\u4e9a\u5417\uff1f\u5728\u4e00\u6761\u5c0f\u9053\u4e0a\uff0c\u6211\u53ea\u770b\u4e86\u60a8\u4e00\u773c\uff0c\u60a8\u7684\u5029\u5f71\u5c31\u6c38\u8fdc\u523b\u5728\u4e86\u6211\u8111\u6d77\u91cc\u3002\u5f53\u6211\u770b\u7740\u60a8\u7684\u80cc\u5f71\u8fdc\u901d\uff0c\u6211\u5c31\u77e5\u9053\uff0c\u60a8\u662f\u4f1a\u8ba9\u6211\u7684\u4e00\u751f\u53d1\u751f\u6539\u53d8\u7684\u4eba\u3002\u53ef\u6211\u5f53\u65f6\u4e0d\u77e5\u4e3a\u4ec0\u4e48\u5c31\u662f\u6ca1\u6709\u8ffd\u4e0a\u53bb\u3002\u5728\u8fd9\u6761\u5c0f\u9053\u4e0a\uff0c\u6211\u53ea\u770b\u4e86\u60a8\u4e00\u773c\uff0c\u5c31\u6c38\u8fdc\u5931\u53bb\u4e86\u60a8\u3002\u4e0d\u8fc7\uff0c\u751f\u6d3b\u770b\u6765\u5bf9\u6211\u8fd8\u662f\u5f88\u5bbd\u539a\u7684\uff0c\u8ba9\u6211\u53c8\u9047\u4e0a\u4e86\u60a8\u3002\u5982\u679c\u80fd\u6709\u4e00\u4e2a\u7f8e\u6ee1\u7684\u7ed3\u5c40\uff0c\u5982\u679c\u60a8\u9700\u8981\u6211\u7684\u751f\u547d\uff0c\u90a3\u5b83\u5f53\u7136\u662f\u5c5e\u4e8e\u60a8\u7684\u3002\u201d</p> <p>\u5f7c\u5f97\u6d1b\u8299\u5a1c\u653e\u4e0b\u624b\u4e2d\u7684\u4fe1\uff0c\u4e24\u773c\u6726\u80e7\u5730\u671b\u7740\u7a97\u5916\u90a3\u767d\u96ea\u7691\u7691\u7684\u82b1\u56ed\uff0c\u4f4e\u58f0\u8bf4\u9053\uff1a</p> <p>\u201c\u5929\u5450\uff0c\u6211\u4ece\u6765\u6ca1\u6709\u53bb\u8fc7\u5229\u74e6\u5b63\u4e9a\uff01\u4ece\u6765\u6ca1\u6709\uff01\u53ef\u662f\uff0c\u73b0\u5728\u8fd9\u8fd8\u6709\u4ec0\u4e48\u610f\u4e49\u5417\uff1f\u8be5\u4e0d\u8be5\u8ba9\u4ed6\u77e5\u9053\u8fd9\u4e00\u70b9\u5462\uff1f\u6216\u8005\u5e72\u8106\u6b3a\u9a97\u4e00\u4e0b\u6211\u81ea\u5df1\u5427\uff01\u201d</p> <p>\u5979\u6342\u4f4f\u81ea\u5df1\u7684\u53cc\u773c\uff0c\u7b11\u4e86\u8d77\u6765\u3002</p> <p>\u8bb0\u5f97\u66fe\u7ecf\u7b2c\u4e00\u6b21\u8bfb\u5b8c\u8fd9\u7bc7\u6587\u7ae0\u65f6\uff0c\u5fc3\u4e2d\u4fbf\u5145\u6ee1\u4e86\u6e29\u6696\u3002\u6251\u9762\u800c\u6765\u7684\u53e4\u6734\u6c14\u606f\uff0c\u4fe1\u4ef6\uff0c\u96ea\u82b1\uff0c\u8721\u70db\uff0c\u94a2\u7434\uff0c\u6728\u5c4b\uff0c\u52fe\u52d2\u51fa\u4e86\u4e00\u5e45\u72ec\u5c5e\u4e8e\u90a3\u4e2a\u65f6\u4ee3\u7684\u98ce\u666f\u753b\u3002\u800c\u753b\u4e2d\u6d6a\u6f2b\u7684\u9752\u5e74\u548c\u5973\u5b50\uff0c\u66f4\u662f\u5728\u96ea\u82b1\u7684\u6620\u886c\u4e0b\u751a\u662f\u6e29\u99a8\u3002</p> <p>\u96ea\u5f88\u7f8e\uff0c\u6d6a\u6f2b\u65e0\u6687\uff0c\u7ed9\u4eba\u65e0\u9650\u7684\u9050\u60f3\u3002\u4f46\u73b0\u5b9e\u4e2d\uff0c\u96ea\u662f\u5bd2\u51b7\uff0c\u662f\u65e0\u60c5\uff0c\u7ed9\u4eba\u4ee5\u60b2\u621a\u3002</p> <p>\u6b64\u523b\u5916\u9762\u5929\u8272\u5df2\u7ecf\u6697\u4e86\u4e0b\u6765\uff0c\u96ea\u82b1\u4f9d\u65e7\u98d8\u821e\u7740\uff0c\u4e5f\u7b97\u662f\u8fdb\u4e86\u5bd2\u591c\u4e86\u3002\u60f3\u5230\u8bb8\u8bb8\u591a\u591a\u7684\u4eba\u8fd8\u5728\u98ce\u96ea\u4e2d\u524d\u884c\u7740\uff0c\u5fc3\u4e2d\u4e0d\u514d\u4fbf\u591a\u4e86\u4e00\u4e9b\u96be\u8fc7\u548c\u611f\u52a8\u3002\u5f53\u4e0b\u7684\u5e73\u7a33\uff0c\u786e\u662f\u65e0\u6570\u5e73\u51e1\u4eba\u7684\u4ed8\u51fa\u6240\u6362\u6765\u7684\uff0c\u6709\u4eba\u4e45\u4e45\u6491\u4f1e\u96e8\u4e2d\uff0c\u6709\u4eba\u5bd2\u591c\u7535\u8bdd\u4e0d\u6b62\uff0c\u53ea\u5e0c\u671b\u3002</p> <p>\u521a\u770b\u5230\u4e00\u5219\u5e16\u5b50\uff0c\u95ee\u4eba\u6d3b\u7740\u5230\u5e95\u6709\u4ec0\u4e48\u610f\u4e49\u3002\u4f5c\u4e3a\u4e00\u4e2a\u54f2\u5b66\u95ee\u9898\uff0c\u5b83\u5df2\u7ecf\u5b58\u5728\u4e86\u5343\u5e74\u3002\u5343\u4eba\u5343\u8a00\uff0c\u6bcf\u4e2a\u4eba\u5bf9\u8fd9\u4e2a\u95ee\u9898\u90fd\u6709\u7740\u81ea\u5df1\u72ec\u4e00\u4efd\u7684\u7b54\u6848\u3002\u6216\u8005\u8bf4\uff0c\u6709\u5f88\u591a\u4eba\u6b63\u5728\u5bfb\u627e\u81ea\u5df1\u7684\u7b54\u6848\u3002\u4e5f\u6709\u4e1d\u6beb\u4e0d\u53bb\u8003\u8651\u8fd9\u4e2a\u95ee\u9898\u800c\u75db\u75db\u5feb\u5feb\u7684\u751f\u6d3b\u7740\u7684\u3002\u8fd9\u90fd\u65e0\u6240\u8c13\uff0c\u6d3b\u5f97\u81ea\u5728\u6f47\u6d12\u6216\u662f\u4e45\u4e45\u601d\u7d22\uff0c\u90a3\u662f\u4e2a\u4eba\u7684\u9009\u62e9\uff0c\u65e0\u5173\u4f60\u6211\u3002\u4e0d\u8fc7\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u601d\u8003\u8fc7\u8fd9\u4e2a\u95ee\u9898\u7684\u4eba\u4eec\uff0c\u6211\u60f3\u8bf4\uff0c\u6211\u4e5f\u6709\u548c\u4f60\u4eec\u4e00\u6837\u7684\u611f\u53d7\uff0c\u548c\u4f60\u4eec\u95ee\u8fc7\u540c\u6837\u7684\u95ee\u9898\uff0c\u73b0\u5728\u4e5f\u8fd8\u5728\u8ff7\u832b\u7740\uff0c\u6ca1\u6709\u627e\u5230\u771f\u6b63\u5c5e\u4e8e\u81ea\u5df1\u7684\u7b54\u6848\u3002\u4f46\u662f\u5728\u627e\u5230\u4e4b\u524d\uff0c\u8bf7\u52c7\u6562\u7684\u6d3b\u4e0b\u53bb\uff0c\u65e0\u95ee\u4e1c\u897f\u3002</p> <p>\u4eca\u5929\u786e\u662f\u5f88\u51b7\u7684\uff0c\u6211\u5fc3\u81f3\u4eca\u4e5f\u662f\u51b7\u7684\u3002</p>"},{"location":"blog/%E6%83%B3%E7%9C%8B%E7%9A%84%E4%B9%A6%E7%B1%8D%E7%94%B5%E5%BD%B1%E5%92%8C%E5%8A%A8%E6%BC%AB%E6%B8%85%E5%8D%95%E5%AE%9E%E6%97%B6%E6%9B%B4%E6%96%B0/","title":"\u60f3\u770b\u7684\u4e66\u7c4d\u3001\u7535\u5f71\u548c\u52a8\u6f2b\u6e05\u5355(\u5b9e\u65f6\u66f4\u65b0)","text":""},{"location":"blog/%E6%83%B3%E7%9C%8B%E7%9A%84%E4%B9%A6%E7%B1%8D%E7%94%B5%E5%BD%B1%E5%92%8C%E5%8A%A8%E6%BC%AB%E6%B8%85%E5%8D%95%E5%AE%9E%E6%97%B6%E6%9B%B4%E6%96%B0/#_1","title":"\u4e66\u7c4d\u6e05\u5355\uff1a","text":"<p>\u6211\u662f\u732b\uff08\u5728\u8bfb\uff09</p> <p>\u6d41\u52a8\u7684\u76db\u5bb4 \u5c11\u5e74\u7ef4\u7279\u4e4b\u70e6\u607c \u897f\u7ebf\u65e0\u6218\u4e8b \u5c71\u6708\u8bb0 \u96ea\u56fd \u6545\u4e8b\u65b0\u7f16 \u5b89\u5a1c\u5361\u5217\u5c3c\u5a1c \u732e\u7ed9\u963f\u5c14\u5409\u4fac\u7684\u82b1\u675f \u5fc3\u7684\u5904\u65b9\u7b3a \u7ea2\u8272\u5730\u5740\u7c3f \u8ffd\u5fc6\u4f3c\u6c34\u5e74\u534e \u897f\u4f2f\u5229\u4e9a\u94c1\u8def\u7eaa\u884c \u56db\u5343\u5468 \u66ae\u5149\u4e4b\u57ce</p>"},{"location":"blog/%E6%83%B3%E7%9C%8B%E7%9A%84%E4%B9%A6%E7%B1%8D%E7%94%B5%E5%BD%B1%E5%92%8C%E5%8A%A8%E6%BC%AB%E6%B8%85%E5%8D%95%E5%AE%9E%E6%97%B6%E6%9B%B4%E6%96%B0/#_2","title":"\u52a8\u6f2b\u548c\u7535\u5f71\u6e05\u5355\uff1a","text":"<p>\u6d77\u8d3c\u738b\u300a\u7ea2\u53d1\u6b4c\u59ec\u300b \u51c9\u5bab\u6625\u65e5\u7684\u5fe7\u90c1 \u51c9\u5bab\u6625\u65e5\u7684\u6d88\u5931 \u8f7b\u97f3\u5c11\u5973\u7b2c\u4e8c\u5b63 \u5439\u54cd\u5427\uff0c\u4e0a\u4f4e\u97f3\u53f7 \u6b7b\u795e\u5343\u5e74\u8840\u6218</p>"},{"location":"blog/%E8%A7%A3%E5%86%B3%E6%96%87%E4%BB%B6%E5%A4%B9%E5%88%A0%E9%99%A4%E9%9C%80%E8%A6%81%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90/","title":"\u89e3\u51b3\u6587\u4ef6\u5939\u5220\u9664\u9700\u8981\u7ba1\u7406\u5458\u6743\u9650","text":""},{"location":"blog/%E8%A7%A3%E5%86%B3%E6%96%87%E4%BB%B6%E5%A4%B9%E5%88%A0%E9%99%A4%E9%9C%80%E8%A6%81%E7%AE%A1%E7%90%86%E5%91%98%E6%9D%83%E9%99%90/#_1","title":"\u6709\u6548\u65b9\u6cd5","text":"<p>\u53c2\u89c1https://www.zhihu.com/question/55517641</p> <p>\u7ecf\u5e38\u9047\u5230\u6587\u4ef6\u5939\u6216\u6587\u4ef6\u5220\u9664\u4e0d\u6389\u7684\u60c5\u51b5\uff0c\u540e\u53d1\u73b0\u4e86\u4ee5\u4e0b\u5f88\u65b9\u4fbf\u7684\u5220\u9664\u65b9\u6cd5\uff1a</p> <p>\u5728\u76ee\u5f55C:\\Windows\\System32\u4e2d\uff0c\u8fd0\u884creg.exe\u6587\u4ef6\uff0c\u4e4b\u540e\u53f3\u952e\u6587\u4ef6\u5939\u9009\u62e9\u201c\u7ba1\u7406\u5458\u53d6\u5f97\u6240\u6709\u6743\u201d\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u5220\u9664\u4e86</p>"},{"location":"blog/%E9%98%B4%E9%9B%A8%E5%A4%A9%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/","title":"\u9634\u96e8\u5929\u7684\u788e\u788e\u5ff5","text":""},{"location":"blog/%E9%98%B4%E9%9B%A8%E5%A4%A9%E7%9A%84%E7%A2%8E%E7%A2%8E%E5%BF%B5/#date-20221117","title":"Date: 2022/11/17","text":"<p>\u4eca\u5929\u4e0b\u96e8\uff0c\u4e0d\u8fc7\u516b\u70b9\u534a\u51fa\u95e8\u65f6\u5df2\u7ecf\u505c\u4e86\u3002\u5728\u60f3\u8bfb\u7684\u4e66\u7c4d\u76ee\u5f55\u91cc\u9762\u53c8\u6dfb\u4e86\u4e00\u672c\uff0c\u603b\u8bf4\u8981\u8bfb\u8981\u8bfb\u5374\u603b\u662f\u6ca1\u6709\u5f00\u59cb\uff0c\u5012\u662f\u6253\u9ebb\u5c06\u6253\u7684\u52e4\u52c9\u3002\u56e0\u4e3a\u5bf9\u4e8e\u8fd9\u4e2a\u8fd8\u662f\u633a\u611f\u5174\u8da3\u7684\uff0c\u6240\u4ee5\u5f00\u59cb\u4e86\u4e00\u4e9b\u7406\u8bba\u5b66\u4e60\uff0c\u4f46\u603b\u89c9\u5f97\u6709\u4e9b\u7f6a\u6076\u3002\u6bcf\u5929\u95f2\u6765\u6253\u4e24\u5c40\u4e5f\u4e0d\u7b97\u5f97\u4e0a\u662f\u7f6a\u8fc7\u3002\u633a\u51b7\u7684\uff0c\u5bd2\u51b7\u5929\u603b\u4f1a\u60f3\u8d77\u4e00\u4e9b\u8fc7\u5f80\uff0c\u53ef\u80fd\u603b\u8fd8\u662f\u60f3\u5bfb\u5f97\u4e00\u4e9b\u966a\u4f34\u5427\uff0c\u4f46\u6211\u53c8\u662f\u4e2a\u559c\u6b22\u81ea\u7531\u884c\u52a8\u7684\u72ec\u884c\u4fa0\uff0c\u4e5f\u8bb8\u4e4b\u540e\u4f1a\u53d8\u5462\uff1f\u5f53\u4e0b\uff0c\u6211\u5012\u662f\u60f3\u767e\u65e0\u804a\u8d56\u7684\u7f29\u5728\u67d0\u4e2a\u89d2\u843d\uff0c\u81ea\u4e60\u5ba4\u6216\u8005\u6559\u5ba4\uff0c\u65e0\u6240\u8c13\u5565\u7684\uff0c\u53ea\u8981\u6ca1\u4ec0\u4e48\u4eba\u5728\u610f\u6211\uff0c\u770b\u770b\u81ea\u5df1\u60f3\u770b\u7684\u4e66\u3002\u8fd9\u4e0e\u6211\u73b0\u5728\u5199\u8fd9\u6bb5\u6587\u5b57\u662f\u5426\u51b2\u7a81\u5462\uff1f  </p> <p>\u8bb0\u5f97\u4e4b\u524d\u5728\u7ed9\u964c\u751f\u4eba\u5199\u7684\u4fe1\u4e2d\uff0c\u5199\u5230\u559c\u6b22\u9634\u96e8\u5929\uff0c\u987a\u8def\u63d0\u4e00\u5634\uff0c\u4e3a\u4ec0\u4e48\u6211\u6700\u540e\u62d2\u7edd\u4e86\u5979\u7684\u9080\u7ea6\u5462\uff1f\u611f\u89c9\u975e\u5e38\u5bf9\u4e0d\u8d77\u5979\uff0c\u4e0d\u8fc7\uff0c\u4ece\u4fe1\u4e2d\u6211\u8bfb\u51fa\u4e86\u4e00\u4e9b\u4e0d\u5408\u62cd\u5427\uff0c\u4e0d\u60f3\u8ba9\u81ea\u5df1\u5931\u671b\uff0c\u5f53\u7136\u4e5f\u4e0d\u60f3\u8ba9\u5979\u5931\u671b\u3002\u56e0\u4e3a\u4ece\u524d\u7684\u67d0\u4e9b\u7f18\u6545\uff0c\u6211\u7ed9\u8fc7\u6709\u9650\u7684\u4eba\u5199\u8fc7\u4fe1\uff0c\u73b0\u5728\u4e5f\u4e0d\u4f1a\u968f\u4fbf\u5199\u4fe1\uff0c\u603b\u89c9\u5f97\u4fe1\u4ef6\u662f\u53ef\u4ee5\u4f20\u8fbe\u60c5\u611f\u7684\u4e1c\u897f\uff0c\u6587\u5b57\u95f4\u7684\u659f\u914c\uff0c\u534a\u9690\u534a\u660e\uff0c\u5012\u662f\u5f88\u6d6a\u6f2b\u7684\uff0c\u81f3\u5c11\u4f1a\u7559\u4e0b\u4e0d\u4e00\u6837\u7684\u611f\u89c9\u5427\uff0c\u548c\u73b0\u5728\u7684wechat\u6a21\u5f0f\u3002\u5176\u5b9e\u6211\u672c\u4e0d\u8be5\u7559\u4e0b\u6211\u7684\u8054\u7cfb\u65b9\u5f0f\u2026\u2026\u2026\u2026  </p> <p>\u65e5\u5b50\u8fc7\u5f97\u5f88\u5feb\uff0c\u591a\u7559\u4e0b\u70b9\u5370\u8bb0\u5427\u3002\u4e4b\u524d\u5f88\u591a\u6d8c\u51fa\u6765\u7684\u4e00\u4e9b\u60f3\u6cd5\u90fd\u6ca1\u6709\u8bb0\u5f55\u4e0b\u6765\uff0c\u5012\u662f\u5341\u5206\u53ef\u60dc\u3002\u5b89\u9759\u7684\u65f6\u5019\uff0c\u603b\u662f\u4f1a\u542c\u6625\u91ce\u6749\u5349\u7684\u94a2\u7434\u66f2\uff0c\u5176\u4e2d\u4e00\u9996\u662f\u9ad8\u4e2d\u4e09\u5e74\u6bcf\u6b21\u81ea\u4e60\u65f6\u90fd\u4f1a\u64ad\u653e\u7684\uff0c\u542c\u4e0d\u538c\u3002\u5766\u7136\u8bf4\uff0c\u9ad8\u4e2d\u6211\u662f\u5341\u5206\u6000\u5ff5\u7684\uff0c\u559c\u6b22\u548c\u540c\u5b66\u6253\u6253\u95f9\u95f9\uff0c\u5348\u7761\u534a\u664c\u9192\u6765\u770b\u89c1\u7a97\u5916\u7684\u4e00\u675f\u9633\u5149\uff0c\u7279\u522b\u662f\u5728\u5468\u56f4\u4eba\u90fd\u6ca1\u9192\u6765\u7684\u65f6\u5019\uff0c\u5fc3\u91cc\u6709\u4e00\u79cd\u7279\u522b\u7684\u6ee1\u8db3\u611f\uff0c\u559c\u6b22\u90a3\u79cd\u6c1b\u56f4\uff0c\u600e\u4e48\u8bf4\uff0c\u5f88\u6e29\u6696\uff0c\u5f88\u660e\u4eae\uff0c\u5f88\u8ba9\u4eba\u9676\u9189\uff0c\u6175\u61d2\u7684\u4e0d\u60f3\u8fdc\u79bb\u3002 </p> <p>\u8fdc\u65b9\u7684\u98de\u9e1f\uff0c\u7a7a\u767d\u7684\u5929\u7a7a\uff0c\u9ed1\u8272\u7684\u6c34\u676f\uff0c\u5fc3\u4e2d\u96be\u53d7\u7684\u611f\u89c9\u6162\u6162\u5728\u915d\u917f\uff0c\u5b64\u5355\u662f\u5e38\u6001\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e9b\u4e8b\u60c5\u6765\u8ba9\u81ea\u5df1\u6682\u65f6\u5fd8\u6389\u5b64\u5355\u3002  </p> <p>\u6ca1\u6709\u4ec0\u4e48\u662f\u6c38\u8fdc\uff0c\u4e0d\u8fc7\u6211\u6709\u6c38\u8fdc\u3002</p>"},{"location":"blog/%E9%9A%8F%E5%BF%83%E8%AE%B0/","title":"\u968f\u5fc3\u8bb0","text":"<p>Date 2022/03/29</p> <p>\u97e9\u88d4\u5fb7\u56fd\u54f2\u5b66\u5bb6\u97e9\u70b3\u54f2\u5728\u300a\u5026\u6020\u793e\u4f1a\u300b\u4e00\u4e66\u4e2d\u63d0\u51fa\u8fd9\u6837\u7684\u89c2\u70b9\uff0c21\u4e16\u7eaa\u7684\u793e\u4f1a\u4e0d\u518d\u662f\u4e00\u4e2a\u89c4\u8bad\u793e\u4f1a\uff0c\u800c\u662f\u529f\u7ee9\u793e\u4f1a\u3002\u529f\u7ee9\u793e\u4f1a\u5145\u6ee1\u79ef\u6781\u7684\u53e3\u53f7\uff0c\u5b83\u770b\u4f3c\u81ea\u7531\uff0c\u5374\u8ba9\u4eba\u4eec\u5728\u8fc7\u5ea6\u7684\u79ef\u6781\u6027\u4e2d\u81ea\u6211\u5265\u524a\uff0c\u76f4\u81f3\u7cbe\u75b2\u529b\u5c3d\uff0c\u611f\u5230\u75b2\u7d2f\u548c\u6291\u90c1</p> <p>Date 2022/05/31</p> <p>March winds and April showers bring forward May flowers</p> <p>Date 2022/10/16</p> <p>\u6e21\u53e3\u65c1\u627e\u4e0d\u5230\u4e00\u6735\u53ef\u4ee5\u76f8\u8d60\u7684\u82b1\uff0c\u90a3\u5c31\u628a\u795d\u798f\u522b\u5728\u895f\u4e0a\u5427</p> <p>Date 2022/10/20</p> <p>\u9002\u5ea6\u60b2\u89c2\u662f\u4e00\u79cd\u8fdc\u89c1</p> <p>Date 2022/10/24</p> <p>\u60f3\u6cd5\u4e0d\u4f1a\u6d88\u5931\uff0c\u53ea\u4f1a\u8f6c\u5316</p> <p>Date 2022/11/11</p> <p>\u65e0\u610f\u95f4\u88ab\u522b\u4eba\u4f24\u4e86\u53c8\u600e\u4e48\u529e\u5462\uff1f\u4e0d\u8fc7\u662f\u8fce\u4e0a\u7b11\u5bb9\u3002</p> <p>Date 2022/11/03</p> <p>\u5728\u6211\u773c\u91cc\u4e00\u76f4\u662f\u574f\u4eba\u89d2\u8272\u7684\u4eba \u5374\u662f\u6211\u5931\u843d\u65f6\u6700\u5173\u5fc3\u6211\u7684\u4eba \u5728\u6b64\u4e4b\u524d \u6211\u627f\u8ba4\u5bf9\u4ed6\u5e26\u6709\u5f88\u591a\u504f\u89c1 \u3002 \u5f88\u591a\u4e8b\u60c5\u4e5f\u5c31\u5ffd\u7136\u91ca\u6000\u4e86 \u6211\u4e0d\u518d\u60f3\u7740\u53bb\u89e3\u91ca \u6211\u4eec\u90fd\u6ca1\u5fc5\u8981\u8bc1\u660e\u4ec0\u4e48 \u3002 \u4eba\u4eec\u53ea\u76f8\u4fe1\u4ed6\u4eec\u613f\u610f\u770b\u5230\u7684  \u6240\u4ee5\u6bcf\u4e2a\u4eba\u773c\u91cc\u7684\u4e8b\u5b9e\u90fd\u662f\u4e0d\u4e00\u6837\u7684 \u3002 \u5e78\u597d\u6211\u770b\u5230\u4e86\u3002  \u8f6c\u6362\u601d\u8def\uff0c\u4e0d\u5c06\u5f97\u5230\u63a5\u7eb3\u6216\u8005\u8bf4\u670d\u5bf9\u65b9\u4f5c\u4e3a\u76ee\u6807 \u800c\u5c06\u5b8c\u5584\u5730\u8868\u8fbe\u5fc3\u610f\u4f5c\u4e3a\u76ee\u6807\u3002\u8fd9\u5e94\u8be5\u662f\u51cf\u5c0f\u8bef\u5dee\u7684\u6709\u6548\u65b9\u6cd5\u3002</p> <p>Date 2022/11/25</p> <p>\u6211\u4eec\u6c99\u6c99\u4f5c\u54cd\u7684\u6811\u53f6\u7528\u81ea\u5df1\u7684\u58f0\u97f3\u56de\u7b54\u72c2\u98ce\u66b4\u96e8\u3002\u800c\u6c89\u9ed8\u7684\u4f60\u662f\u8c01\uff1f\u6211\u4e0d\u8fc7\u662f\u4e00\u6735\u5c0f\u5c0f\u7684\u82b1\u3002</p> <p>Date 2022/12/4</p> <p>\u6211\u4e00\u9762\u4f6f\u88c5\u5e73\u9759\uff0c\u4e00\u9762\u60f3\u628a\u5361\u7247\u63e3\u5230\u515c\u91cc\u3002\u7136\u800c\u4e0d\u51d1\u5de7\uff0c\u6211\u559c\u6b22\u7684\u56f4\u88d9\uff0c\u4e0a\u4e0b\u6ca1\u6709\u4e00\u4e2a\u515c\u3002\u201d    \u2014\u2014\u300a\u60c5\u4e66\u300b</p>"},{"location":"blog/%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%9B%80%E5%A3%AB%E7%9A%84%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/","title":"\u4e00\u4e2a\u5c0f\u96c0\u58eb\u7684\u7ecf\u9a8c\u4e4b\u8c08","text":""},{"location":"blog/%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%9B%80%E5%A3%AB%E7%9A%84%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/#_1","title":"\u4ece\u5165\u95e8\u5230\u201c\u5165\u571f\u201d","text":""},{"location":"blog/%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%9B%80%E5%A3%AB%E7%9A%84%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/#_2","title":"\u4e09\u9ebb\u7bc7","text":"<ol> <li>\u4e09\u4eba\u9ebb\u5c06\u548c\u56db\u4eba\u9ebb\u5c06\u662f\u622a\u7136\u4e0d\u540c\u7684\u4e24\u4e2a\u6e38\u620f\uff0c\u7531\u4e8e\u4e09\u9ebb\u4e2d\u5c062-9\u7684\u5b57\u724c\u5254\u9664\u5e76\u589e\u52a0\u4e86\u62d4\u5317\u7684\u673a\u5236\uff0c\u6574\u4e2a\u6e38\u620f\u7684\u8282\u594f\u662f\u5341\u5206\u5feb\u7684\u3002\u5f88\u591a\u65f6\u5019\u724c\u5a18\u53d1\u7ed9\u73a9\u5bb6\u7684\u90fd\u662f\u4e8c\u5411\u542c\u751a\u81f3\u4e8e\u4e00\u5411\u542c\u7684\u724c\uff0c\u5c31\u7b97\u4e0d\u662f\uff0c\u4e5f\u53ef\u4ee5\u8fc5\u901f\u901a\u8fc7\u724c\u6548\u7387\u6765\u505c\u724c\u3002</li> <li>\u4e09\u9ebb\u4e2d\uff0c\u4e00\u822c\u6765\u8bb2\uff0c\u756a\u6570\u76f8\u8f83\u4e8e\u56db\u9ebb\u4f1a\u5341\u5206\u5927\u3002\u8fd9\u662f\u7531\u4e8e2-9\u5b57\u724c\u7684\u51cf\u5c11\u5bfc\u81f4\u91cc\u5b9d\u724c\uff0c\u67d3\u624b\u7b49\u4e00\u7cfb\u5217\u724c\u578b\u7684\u80e1\u724c\u6982\u7387\u52a0\u5927\u3002\u7ecf\u5e38\u53ef\u4ee5\u89c1\u5230\u7acb\u76f4\uff0c\u81ea\u6478\uff0c\u5b9d\u724c\uff0c\u91cc\u5b9d\u724c\uff0c\u6df7\u4e00\u8272\uff0c\u5f79\u724c\u7b49\u540c\u65f6\u51fa\u73b0\u3002\u6e05\u4e00\u8272\uff0c\u56db\u6697\u523b\uff0c\u56fd\u58eb\u65e0\u53cc\uff0c\u5927\u4e09\u5143\u4e5f\u4e0d\u7b97\u592a\u7a00\u6709\u3002</li> </ol> <ol> <li>\u4e2a\u4eba\u89c1\u89e3\u662f\u4e09\u9ebb\u8981\u5feb\u901f\u95e8\u6e05\u7acb\u76f4\uff0c\u6216\u8005\u526f\u9732\u901f\u653b\uff0c\u7531\u4e8e\u724c\u7684\u6570\u91cf\u51cf\u5c11\uff0c\u81ea\u6478\u7684\u6982\u7387\u5927\u5927\u589e\u52a0\u3002(\u5f53\u7136\u4f60\u80e1\u7684\u724c\u5728\u522b\u4eba\u624b\u4e0a\u6210\u5bf9\u6216\u6210\u523b\u7684\u6982\u7387\uff0c\u4ee5\u53ca\u5728\u724c\u5c71\u7684\u6982\u7387\u4e5f\u76f8\u5e94\u7684\u589e\u52a0\uff09\uff0c\u987a\u5e26\u4e00\u63d0\uff0c\u6700\u8fd1\u80e1\u724c\u603b\u662f\u81f3\u5c11\u4e09\u5f20\u5728\u724c\u5c71\u91cc......\u65e0\u5948\u6389\u5206</li> <li>\u5728\u526f\u9732\u7684\u65f6\u5019\u8981\u6839\u636e\u5408\u9002\u60c5\u51b5\u6765\u9009\u62e9\uff0c\u5728\u724c\u5f88\u70c2\u7684\u65f6\u5019\uff0c\u4e0d\u8981\u76f2\u76ee\u78b0\u724c\uff0c\u867d\u7136\u94c1\u5934\u5a03\u5f88\u5e38\u89c1\uff0c\u4f46\u6211\u4eec\u76f8\u4fe1\u8fd0\u6c14\u4e0d\u603b\u662f\u7167\u987e\u4ed6\u4eec\u3002</li> <li>\u4e09\u9ebb\u91cc\u6a21\u7cca\u724c\u578b\u7684\u786e\u5b9a\uff08\u6682\u65f6\uff09\u662f\u5bb9\u6613\u7684\uff0c\u5f88\u591a\u65f6\u5019\u90fd\u80fd\u5224\u65ad\u51fa\u5bf9\u624b\u7684\u724c\u5927\u6982\u542c\u5728\u4ec0\u4e48\u4f4d\u7f6e\uff0c\u6240\u4ee5\u8981\u89c2\u5bdf\u5bf9\u624b\u7684\u624b\u5207\u3002</li> </ol>"},{"location":"blog/%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%9B%80%E5%A3%AB%E7%9A%84%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/#_3","title":"\u56db\u9ebb\u7bc7","text":"<ol> <li>\u6682\u65f6\u60f3\u8bf4\u7684\u53ea\u6709\u4e00\u70b9\uff0c\u4e0d\u8981\u5728\u6df1\u591c\u6253\u56db\u9ebb\uff0c\u56db\u8fde\u5403\u56db\u7684\u60e8\u75db\u6559\u8bad\u3002</li> </ol>"},{"location":"blog/%E4%B8%80%E4%B8%AA%E5%B0%8F%E9%9B%80%E5%A3%AB%E7%9A%84%E7%BB%8F%E9%AA%8C%E4%B9%8B%E8%B0%88/#20221122","title":"2022/11/22","text":"<p>\u200b   \u4e0d\u8981\u5728\u6076\u8c03\u65f6\u6253\u724c\uff0c\u8981\u987a\u5e94\u81ea\u7136\u89c4\u5f8b\uff0c\u89c1\u597d\u5c31\u6536 \u200b   \u4e0d\u8981\u4e0a\u5934\uff0c\u75af\u72c2\u5bf9\u653b\uff0c\u4fdd\u6301\u7406\u667a\uff0c\u6bcf\u5929\u6700\u591a\u4e00\u628a\u3002</p>"},{"location":"course/","title":"\u6249\u9875","text":"<p>\u8bb0\u8f7d\u4e86\u5b66\u5230\u7684\u6240\u6709\u77e5\u8bc6....</p> <p>\u201c\u5584\u826f\u662f\u8fdc\u884c\u4e4b\u4eba\u7684\u63a8\u8350\u4fe1~\u201d</p>"},{"location":"course/CS231n/","title":"CS231n Notes","text":"<p>Waiting for Completion.......</p>"},{"location":"course/CS231n/#lecture-1-image-classification","title":"Lecture 1  Image Classification","text":"<p>\u4f20\u7edf\u8bc6\u522b\u7684\u4e94\u5927\u56f0\u5883\uff1aIllumination, Deformation, Occlusion, Clutter, Intraclass Variation</p> <p>K-Nearest Neighbor Algorithm</p> <ul> <li>L1 distance(\u66fc\u54c8\u987f\u8ddd\u79bb): $d_1(I1,I2)= \\sum_p|I_1<sup>p-I_2</sup>p| $\uff0c\u5373\u4e24\u4e2apixel\u77e9\u9635\u5bf9\u5e94\u503c\u76f8\u51cf</li> </ul> <ul> <li>L2 distance(\u6b27\u6c0f\u8ddd\u79bb): \\(d_2(I1,I2)=\\sqrt{\\sum_p(I_1^p-I_2^p)^2}\\) \uff0cL1,L2\u5747\u4e3a\u6bd4\u8f83\u4e0d\u540c\u50cf\u7d20\u77e9\u9635\u65f6\u6240\u7528\u7684\u8ddd\u79bb\u5ea6\u91cf\uff0c\u5f53\u7136\u8fd9\u4e24\u79cd\u6bd4\u8f83\u89c6\u89c9\u611f\u77e5\u5dee\u5f02\u7684\u5ea6\u91cf\u90fd\u4e0d\u592a\u597d\u3002</li> </ul> <ul> <li>L1\u548cL2\u7684\u533a\u522b: L1\u66f4\u52a0\u4f9d\u8d56\u4e8e\u6570\u636e\u9009\u53d6\u7684\u5750\u6807\u7cfb\u7edf\uff0c\u800cL2\u5219\u4e0d\u4f9d\u8d56\u4e8e\u5750\u6807\u7cfb\u7edf</li> </ul> <ul> <li>Explanation: \u627e\u5230\u79bb\u67d0\u4e2a\u70b9\u6700\u8fd1\u7684k\u4e2a\u70b9\uff0c\u7136\u540e\u5728\u8fd9\u4e9b\u76f8\u90bb\u70b9\u4e2d\u8fdb\u884c\u6295\u7968\uff0c\u7968\u6570\u591a\u7684\u76f8\u90bb\u70b9\u4ee3\u8868\u8be5\u533a\u57df\u7684\u9884\u6d4b\u7ed3\u679c</li> </ul> <ul> <li> <p>Hyperparamteters\uff1a\u4f9d\u8d56\u4e8e\u5177\u4f53\u95ee\u9898\uff0c\u800c\u4e0d\u662f\u5b66\u4e60\u51fa\u7684\u53c2\u6570\uff0c\u4f8b\u5982KNN\u7b97\u6cd5\u4e2d\u7684K\u548cdistance\u5ea6\u91cf\u51fd\u6570\uff0c\u9700\u8981\u63d0\u524d\u8bbe\u5b9a\u597d\u3002</p> <p>\u5728\u8bad\u7ec3\u4e2d\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u4f1a\u5c06\u6570\u636e\u5206\u4e3atrain, val, test\u4e09\u4e2a\u6570\u636e\u96c6\uff0c\u5206\u522b\u7528\u4e8etrain, validation, test\uff0c\u4f1a\u5728validation set\u4e2d\u9009\u62e9\u4e00\u7ec4\u8868\u73b0\u6700\u597d\u7684hyperparameters.  Test set\u548cValidation set\u9700\u8981\u4e25\u683c\u5206\u5f00</p> <p>\u5c0f\u6570\u636e\u96c6\u4e2d\uff0c\u6211\u4eec\u4f1a\u5c06\u6570\u636e\u96c6\u5206\u4e3a\u591a\u4e2afold\u548ctest\u6570\u636e\u96c6\uff0c\u91c7\u53d6cross-valiadation\uff0c\u4f9d\u6b21\u5c06 fold1-foldn\u4f5c\u4e3aval\u6570\u636e\u96c6\uff0c\u5176\u4f59\u4f5c\u4e3atrain. </p> <p>\u4e3a\u4e86\u4f7f\u5f97\u6570\u636e\u5177\u6709\u4ee3\u8868\u6027\uff0c\u5728\u4f7f\u7528\u6570\u636e\u96c6\u65f6\uff0c\u968f\u673a\u5212\u5206\u4e3atrain\u548ctest set</p> </li> </ul> <ul> <li>Shortcoming: \u4e3a\u4e86\u4f7f\u7b97\u6cd5\u5177\u6709\u5f88\u597d\u7684\u6548\u679c\uff0c\u9700\u8981\u5c06\u6574\u4e2a\u7a7a\u95f4\u5bc6\u96c6\u7684\u94fa\u6ee1\uff0c\u6240\u4ee5\u968f\u7740dimension\u7684\u589e\u52a0\uff0c\u6240\u9700\u8981\u7684\u6570\u636e\u6210\u6307\u6570\u500d\u7684\u589e\u957f\uff0cof course\uff0c\u8fd9\u662f\u4e0d\u53ef\u80fd\u7684\u3002\u53e6\u5916\uff0c\u9a8c\u8bc1\u8fc7\u7a0b\u4e5f\u5f88\u6162\uff0cO(n)\u590d\u6742\u5ea6\u3002</li> </ul> <ul> <li>Summary: \u5b9e\u9645\u4e2d\u57fa\u672c\u4e0d\u4f1a\u4f7f\u7528</li> </ul>"},{"location":"course/CS231n/#lecture-2-linear-classification-and-loss-function-and-optimization","title":"Lecture 2 Linear Classification and loss function and Optimization","text":"<ul> <li>Parametric Approach: \u5373\u53c2\u6570\u5316\u7684\u65b9\u6cd5\uff0c\u628a\u5bf9\u8bad\u7ec3\u6570\u636e\u7684\u8ba4\u8bc6\u4ee5\u53ca\u6240\u6709\u77e5\u8bc6\u5e94\u7528\u5230\u6a21\u578b\u53c2\u6570\u4e2d\uff0c\u6697\u4e48\u5728\u5b9e\u9645\u6d4b\u8bd5\u65f6\uff0c\u4e0d\u518d\u9700\u8981\u5b9e\u9645\u5bfb\u6765\u6570\u636e\uff0c\u800c\u4ec5\u4ec5\u9700\u8981\u8fd9\u4e9b\u53c2\u6570.</li> </ul> <ul> <li> <p>Explanation:  \\(f(x, W)=Wx+b\\)\uff0c\u5176\u4e2dW\u4e3a\u6743\u91cd\u77e9\u9635</p> <p>\u7ebf\u6027\u5206\u7c7b\u662f\u4e00\u79cdparameter classifier\uff0c\u53ef\u4ee5\u8fd1\u4f3c\u770b\u4f5c\u4e00\u79cd\u6a21\u677f\u5339\u914d\u65b9\u6cd5\uff0c\u6743\u91cd\u77e9\u9635W\u4e2d\u7684\u6bcf\u4e00\u884c\u5bf9\u5e94\u4e8e\u67d0\u4e00\u7c7b\u56fe\u50cf\u7684\u6a21\u677f\uff0c\u800c\u6bcf\u4e00\u884c\u4e2d\u7684\u9879\u544a\u8bc9\u6211\u4eec\u90a3\u4e2a\u50cf\u7d20\u5bf9\u90a3\u4e2a\u7c7b\u522b\u9884\u6d4b\u6709\u591a\u5c11\u5f71\u54cd. </p> <p>\u56e0\u6b64\uff0c\u7f3a\u70b9\u5728\u4e8e\u6bcf\u4e2a\u7c7b\u522b\u53ea\u80fd\u5b66\u4e60\u4e00\u4e2a\u6a21\u677f. \u53cd\u5e94\u5728\u5e73\u9762\u4e0a\uff0c\u5219\u662f\u5212\u51fa\u8bb8\u591a\u76f4\u7ebf\u6765\u5212\u5206\u533a\u57df\u3002</p> </li> </ul> <p>Loss function</p> <ul> <li>\u635f\u5931\u51fd\u6570Li\u5c31\u662f\u7528\u6765\u8bc4\u4f30\u5f53\u524d\u7684\u5206\u7c7b\u5668\u7684\u4e00\u4e2a\u51fd\u6570\uff0c\u6700\u7ec8\u635f\u5931\\(L=\\frac{1}{N}\\sum L_i\\)</li> </ul> <ul> <li> <p>Multiclass SVM loss: (\u4ee5\\(s=f(xi,W)\\)\u4e3a\u4f8b)\uff0c\u7c7b\u4f3c\u56fe\u50cf\u7684loss function\u4e5f\u88ab\u79f0\u4e3ahinge loss</p> \\[L_i= \\sum_{j \\neq y_i}\\begin{cases} 0 &amp;if \\ s_{yi} \\geq \\ s_j +1 \\\\ s_j-s_{yi}+1 &amp; otherwise\\end{cases} \\\\ = \\sum_{j \\neq y_{i}} max(0, s_j-s_{yi} + 1)\\] <p>\u5176\u4e2d\uff0c\\(s_{yi}\\)\u662f\u8bad\u7ec3\u6837\u672c\u771f\u5b9e\u5206\u7c7b\u7684\u5206\u6570\uff0c\\(s_j\\)\u662f\u901a\u8fc7classifier\u9884\u6d4b\u51fa\u6765\u7684\u5206\u6570\uff0ci\u4ee3\u8868\u7684\u662f\u9884\u6d4b\u7684\u7b2ci\u4e2a\u79cd\u7c7b\u3002\u6b64\u5904\u76841\u662f\u4e00\u4e2a\u968f\u673a\u9009\u62e9\u7684\u5e38\u91cf\uff0c\u5bf9\u6700\u540e\u5206\u7c7b\u7ed3\u679c\u800c\u8a00\u4e0d\u91cd\u8981\u3002</p> <p>\u5bf9\u4e8emulticlass SVM loss\uff0c\u6211\u4eec\u5173\u5fc3\u7684\u4ec5\u4ec5\u662f\u6b63\u786e\u7684\u5206\u6570\u6bd4\u9519\u8bef\u7684\u5206\u6570\u8981\u5927\u4e8e\u67d0\u4e00\u4e2a\u5e38\u6570\uff0c\u6240\u4ee5\u7565\u5fae\u6270\u52a8\u4e0d\u4f1a\u5f71\u54cdloss\u3002</p> <p>\u4e00\u4e2a\u8c03\u8bd5\u5c0f\u6d4b\u7565\uff1a\u4ece\u96f6\u8bad\u7ec3\u65f6\uff0c\u968f\u673a\u7528\u8f83\u5c0f\u503c\u521d\u59cb\u5316W\uff0c\u5206\u6570\u7ed3\u679c\u521d\u671f\u503e\u5411\u4e8e\u51fa\u73b0\u8f83\u5c0f\u7684\u5747\u5300\u5206\u5e03\u3002\u6240\u6709\u7684\u5206\u6570\u90fd\u8fd1\u4e4e\u4e8e0\u5e76\u57fa\u672c\u76f8\u7b49\uff0c\u90a3\u4e48\u635f\u5931\u51fd\u6570\u7ed3\u679c\u9884\u8ba1\u4e3aC-1\uff0cC\u4e3a\u79cd\u7c7b\u6570</p> <p>\u6700\u4f18\u7684W\u4e00\u5b9a\u4e0d\u662f\u552f\u4e00\u7684\uff0c\u56e0\u4e3a2*W\u4e5f\u662f\u6700\u4f18\u7684</p> </li> </ul> <ul> <li> <p>Regularization term:</p> <p>\u4e3a\u4e86\u89e3\u51b3machine learning\u7684\u8fc7\u62df\u5408\u95ee\u9898\uff08\u5373\u964d\u4f4e\u6a21\u578b\u7684\u590d\u6742\u5ea6\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u662f\u964d\u4f4e\u591a\u9879\u5f0f\u6a21\u578b\u7684\u5e42\u6307\u6570\uff09\uff0c\u901a\u5e38\u60c5\u51b5\u9700\u8981\u6dfb\u52a0\u6b63\u5219\u60e9\u7f5a\u9879(regularization penalty term) \\(L(W)=\\frac{1}{N}\\sum L_i+\\lambda R(W)\\), \u8ba9\u6a21\u578b\u9009\u62e9\u8f83\u4e3a\u7b80\u5355\u7684W\uff0c\u03bb\u7528\u6765\u5e73\u8861\u4e24\u4e2a\u9879\uff08data loss and regulation\uff09.</p> <ul> <li> <p>\u5e38\u89c1\u6b63\u5219\u9879\uff1a</p> <ul> <li>L2 regularization: \\(R(W)=\\sum_k\\sum_lW_{k,l}^2\\)</li> </ul> <ul> <li>L1 regularization: \\(R(W)=\\sum_k\\sum_l|W_{k,l}|\\)</li> </ul> <ul> <li>Elastic net(L1 + L2), Max norm, Dropout, Fancier</li> </ul> </li> </ul> <ul> <li> <p>\u6b63\u5219\u9879\u7684\u76ee\u7684\u5c31\u662f\u66f4\u5feb\u4f53\u73b0\u8f93\u5165x\u5bf9\u4e8e\u6700\u7ec8Output\u7684\u5f71\u54cd\u7a0b\u5ea6\uff0c\u8ba9\u6a21\u578b\u9488\u5bf9\u4f60\u6240\u5047\u8bbe\u7684\u60c5\u51b5\u800c\u8d8b\u5411\u4e8e\u66f4\u52a0\u7b80\u5355\u3002\u4e0d\u540c\u6b63\u5219\u9879\u5bf9\u4e8e\u590d\u6742\u5ea6\u7684\u63cf\u8ff0\u662f\u4e0d\u4e00\u6837\u7684\u3002</p> <p>\u4f8b\u5982L2\u8003\u8651\u66f4\u591a\u7684\u662fW\u7684\u6574\u4f53\u5206\u5e03\uff0c\u800cL1\u8003\u8651\u7684\u53ef\u80fd\u662f\u975e\u96f6\u5143\u7d20\u7684\u4e2a\u6570</p> </li> </ul> </li> </ul> <ul> <li> <p>Softmax Classifier(Multinomial Logistic Regression)</p> <ul> <li>\\(P(Y=k|X=x_i)=\\frac{e^{s}_k}{\\sum_je^s_j},where \\ s = f(xi;W)\\)</li> </ul> <ul> <li> <p>Loss fucntion: \\(L_i=-logP(Y=y_i|X=x_i)\\)</p> <p>\u5373\u5e0c\u671b\u9884\u671f\u6b63\u786e\u7c7b\u522b\u7684\u6982\u7387\u6700\u5927\uff0c\u8ba9\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u5c3d\u53ef\u80fd\u5206\u5e03\u5728\u6b63\u786e\u7c7b\u522b\u4e0a\uff0c\u8ba9\u6574\u4f53\u6240\u6709\u7684\u70b9\u8d8a\u6765\u8d8a\u597d</p> <p>\u5b9e\u9645\u8ba1\u7b97\u4e2d\uff0c\u5148\u8fdb\u884c\u70b9\u79ef(\u4ee5\\(f=xW\\)\u4e3a\u4f8b)\u5f97\u5230\u5206\u6570\u5411\u91cf\uff0c\u9700\u8981\u5bf9\u5f97\u51fa\u5206\u6570\u5148\u8fdb\u884cexp(\u6307\u6570\u5316)\uff0c\u5728\u8fdb\u884cnormalize(\u5f52\u4e00\u5316)\u5f97\u5230\u6982\u7387</p> <p>\u6700\u5c0f\u4e3a0\uff0c\u6700\u5927\u4e3a+Infinity</p> <p>\u5c0f\u7ed3\u8bba\uff1a\u7528\u8f83\u5c0f\u503c\u521d\u59cb\u5316W\u4f7f\u5f97\u6240\u6709s\u7ea6\u4e3a0\uff0cthe loss is \\(-lnc\\)</p> </li> </ul> </li> </ul> <p>Optimization</p> <ul> <li> <p>Gradient(\u68af\u5ea6)\u5c31\u662f\u504f\u5bfc\u6570\u7684\u5411\u91cf\uff0c\u6bcf\u4e00\u7ef4\u544a\u8bc9\u6211\u4eec\u5728\u76f8\u5173\u65b9\u5411\u4e0a\u79fb\u52a8\u4e00\u5c0f\u6b65\u4f1a\u4f7f\u5f97\u635f\u5931\u53d8\u5316\u591a\u5c11\u3002\u5b9e\u9645\u8ba1\u7b97\u65f6\u8fdb\u884c\u6709\u9650\u5dee\u5206\u903c\u8fd1(silly)\uff0c\u76f4\u63a5\u6c42\u504f\u5bfc\u3002</p> <p>\u4e00\u822c\u60c5\u51b5\u53ef\u4ee5\u7528Numerical gradient\u6765check out\uff0c\u800c\u7528Analytic gradient\u6765\u5b9e\u9645\u8ba1\u7b97\u68af\u5ea6</p> </li> </ul> <ul> <li> <p>Gradient Descent: </p> <pre><code>while True:\n    data_batch = sample_training_data(data, N)\n  weights_grad = evaluate_gradient(loss_fun, data_batch, weights)\n  weights += - step_size * weights_grad\n</code></pre> <p>\u6b64\u5904\u7684step_size\u662fhyperparameter\uff0c\u4e5f\u88ab\u79f0\u4e3a\u5b66\u4e60\u7387(learning rate)\uff0c\u662f\u9996\u5148\u9700\u8981\u8003\u8651\u7684\u8d85\u53c2\u6570</p> <p>\u7b97\u6cd5\u76ee\u7684\u5c31\u662f\u5229\u7528\u5f53\u524d\u6743\u91cd\u6c42\u51fa\u7684\u68af\u5ea6\u4fe1\u606f\uff0c\u7528\u4e0d\u540c\u7684\u7b56\u7565\u66f4\u65b0\u6743\u91cd\u4f7f\u5f97loss_function\u8ba1\u7b97\u51fa\u7684loss\u6700\u5c0f</p> <p>\u5b9e\u9645\u4e2d\uff0c\u4f1a\u91c7\u7528\u968f\u673a(stochaastic)\u68af\u5ea6\u4e0b\u964d\uff0c\u5373\u6bcf\u6b21iteration\u4ece\u6570\u636e\u96c6\u4e2d\u9009\u51fa\u4e00\u5c0f\u90e8\u5206\u5373\u4e00\u4e2abatch\u4f5c\u4e3a\u5b9e\u9645\u4f7f\u7528\u7684\u6570\u636e</p> </li> </ul> <ul> <li> <p>Oriented Gradients and Bag of Words:</p> <p>\u5b9e\u9645\u7684\u6570\u636e\u83b7\u5f97\uff0c\u662f\u4ece\u539f\u59cb\u6570\u636e\u4e2d\u5f97\u5230\u7684\u7279\u5f81\u5411\u91cf\uff0c\u628a\u8fd9\u4e9b\u7279\u5f81\u5411\u91cf\u4f5c\u4e3aInput\u8f93\u5165\u5230classifier\u4e2d\u6765\u5f97\u5230output. \u5176\u4e2d\u65b9\u5411\u68af\u5ea6\u548c\u8bcd\u888b\u5c31\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u4f8b\u5b50</p> </li> </ul>"},{"location":"course/CS231n/#lecture-3-back-propagation-and-neural-network","title":"Lecture 3 Back Propagation and Neural network","text":"<p>Back propagation</p> <ul> <li>Computational graph: \u8ba1\u7b97\u56fe\uff0c\u7528\u6765\u8868\u793a\u4e00\u4e2a\u51fd\u6570\uff0c\u6bcf\u4e2a\u8282\u70b9\u8868\u793a\u4e00\u4e2a\u6570\u636e\u9879\u6216\u8005\u8ba1\u7b97\u64cd\u4f5c\u3002\u6bcf\u4e2a\u8282\u70b9\u53ea\u77e5\u9053\u5b83\u7684local inputs\u548coutput</li> </ul> <ul> <li> <p>\u53cd\u5411\u4f20\u64ad\u5c31\u662f\u94fe\u5f0f\u6cd5\u5219\u9010\u6b21\u6c42\u5bfc\uff0c\u5f97\u5230output f\u5bf9\u6240\u6709input\u7684\u504f\u5bfc\u6570\u503c\u3002 \u516c\u5f0f\u5982\u4e0b\u6240\u793a\uff1a$Downsteam  Gradient = local  gradient*  upstream  gradient  $</p> <ul> <li>upstream gradient\u4ece\u4e0a\u6e38\u5373\u540e\u7eed\u7ed3\u70b9\u4f20\u56de\u6765\uff0c\u4f53\u73b0\u7ed3\u70b9\u7684\u8f93\u51fa\u53d8\u5316\u5c06\u4f1a\u5f15\u8d77loss\u53d1\u751f\u591a\u5927\u7684\u53d8\u5316</li> <li>local gradient\u662f\u7531\u8be5\u7ed3\u70b9\u8fd0\u7b97\u7684\u987a\u5e8f\u7b80\u5355\u7684\u8ba1\u7b97\u51fa\u6765\uff0c\u4f53\u73b0\u8be5\u7ed3\u70b9\u5404\u4e2a\u8f93\u5165\u53d8\u5316\u5bf9\u8f93\u51fa\u7684\u5f71\u54cd</li> <li>downstream gradient\u662f\u7531\u8be5\u8282\u70b9\u5411\u540e\u4f20\u64ad\uff0c\u4f53\u73b0\u8be5\u7ed3\u70b9\u8f93\u5165\u53d8\u5316\u5bf9Loss\u7684\u5f71\u54cd\uff0c\u7528\u4f5c\u540e\u7eed\u7ed3\u70b9\u7684\u4e0a\u6e38\u68af\u5ea6</li> </ul> </li> </ul> <ul> <li> <p>\u5e38\u89c1\u64cd\u4f5c\u8282\u70b9\uff1a</p> <ul> <li>add gate: gradient distributer</li> <li>mul gate: swap multiplier</li> <li>copy gate: gradient adder</li> <li>max gate: gradient router</li> </ul> </li> </ul> <ul> <li> <p>\u9ad8\u7ef4\u5411\u91cf\u7684\u53cd\u5411\u4f20\u64ad</p> <ul> <li>loss\u662fscalar</li> </ul> <ul> <li>\u53c2\u6570W\u7684\u68af\u5ea6\u4f1a\u548cW\u7684\u5f62\u72b6\u76f8\u540c</li> </ul> <p>\u53c2\u8003\uff1a </p> <p>\\(f(x,W)=||W\\cdot x||^2=\\sum_{i=1}^n(W\\cdot x)^2\\) \uff0c\u77e9\u9635\u4e4b\u95f4\u6ca1\u592a\u5f04\u61c2</p> <p>\\(\\nabla _Wf=2q\\cdot x^T\\) </p> <p>$\\nabla_xf = 2W^T\\cdot q $</p> </li> </ul> <p>ex. </p> <p>Multi-layer Neural network:</p> <ul> <li>\\(f=W_2 \\ max(0,W_1x)\\)\uff0c\u4f8b\u5982\u5728\u8fd9\u4e2ascore function\u4e2d\uff0c\u9996\u5148\u8fdb\u884c\u975e\u7ebf\u6027\u7684\u5904\u7406\uff0c\u8ba9\u6bcf\u4e2a\u7c7b\u522b\u5b66\u4e60\u591a\u4e2a\u6a21\u677f\uff0c\u7136\u540e\u7531W<sub>2</sub>\u6765\u8fdb\u884c\u52a0\u6743\u5f97\u5230\u6700\u7ec8\u5728\u7ed3\u679c</li> </ul> <ul> <li> <p>Activation functions:</p> <ul> <li>\u8ba1\u7b97\u8282\u70b9\u672b\u7aef\u7684\u51fd\u6570\uff0c\u5c06function f\u7684\u8f93\u51fa\u8fdb\u884c\u67d0\u79cd\u6570\u5b66\u64cd\u4f5c\u518d\u8f93\u51fa\uff0csigmoid\u51fd\u6570\u8f93\u51fa\u57280-1\u4e4b\u95f4</li> </ul> <ul> <li> <p>sigmoid\u51fd\u6570: \\(\\sigma(x)= \\frac{1}{1+e^{-x}}\\)</p> <p>sigmoid\u51fd\u6570\u5c06\u5b9e\u6570\u503c\u538b\u52300-1\u8303\u56f4\u5185\uff0c\u7f3a\u70b9\u5728\u4e8e\uff0c\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u5728\u63a5\u8fd10\u62161\u5904\u4f1a\u9971\u548c\uff0c\u5bfc\u81f4\u8fd9\u4e9b\u533a\u57df\u7684\u68af\u5ea6\u51e0\u4e4e\u4e3a0\u4ece\u800c\u4e22\u5931\u3002\u53e6\u5916\u8f93\u51fa\u4e0d\u662f\u96f6\u4e2d\u5fc3\uff0c\u4f1a\u7a0d\u5fae\u5f71\u54cd\u68af\u5ea6\u4e0b\u964d</p> </li> </ul> <ul> <li> <p>Tanh\u51fd\u6570: \\(tanh(x)=2\\sigma(2x)-1\\)</p> <p>Tanh\u51fd\u6570\u5c06\u5b9e\u6570\u503c\u538b\u7f29\u5230[-1,1]\u4e4b\u95f4\uff0c\u540c\u6837\u5177\u6709\u9971\u548c\u95ee\u9898\uff0c\u4f46\u662f\u662f\u96f6\u4e2d\u5fc3\u7684</p> </li> </ul> <ul> <li> <p>ReLU\u51fd\u6570: \\(f(x)=max(0,x)\\)</p> <p>ReLU\u51fd\u6570\u5bf9\u4e8e\u968f\u673a\u68af\u5ea6\u4e0b\u964d\u7684\u6536\u655b\u7531\u5de8\u5927\u7684\u52a0\u901f\u4f5c\u7528\uff0c\u5e76\u4e14\u8ba1\u7b97\u7b80\u5355\uff0c\u7ebf\u6027\u64cd\u4f5c\uff0c\u4e0d\u9971\u548c\u3002\u7f3a\u70b9\u5728\u4e8eReLU\u5355\u5143\u6b7b\u4ea1\uff0c\u5f53\u5b66\u4e60\u7387\u8fc7\u9ad8\u65f6\uff0c\u68af\u5ea6\u592a\u5927\uff0c\u6743\u91cd\u66f4\u65b0\u8fc7\u591a\u3002\u53ef\u80fd\u4f7f\u5f97ReLU\u795e\u7ecf\u5143\u7684\u8f93\u5165\u4e00\u76f4\u662f\u5c0f\u4e8e0\u7684\uff0c\u90a3\u4e48\u5c31\u4e00\u76f4\u4e0d\u4f1a\u6fc0\u6d3b\u8be5\u795e\u7ecf\u5143</p> </li> </ul> <ul> <li>Leaky ReLU\u51fd\u6570: \\(f(x)=(x&lt;0)\\alpha x+(x\\geq0) x\\)</li> </ul> <ul> <li>Maxout\u51fd\u6570: \\(max(\\omega_1^T+b1,\\omega_2^Tx+b2)\\)\u7684\u5f62\u5f0f</li> </ul> </li> </ul> <ul> <li> <p>Fully connected layer:</p> <ul> <li>\u4e5f\u5c31\u662f\u7ebf\u6027\u5c42\uff0c\u5373\u91c7\u7528\u77e9\u9635\u4e58\u6cd5\uff0c\u524d\u4e00\u5c42\u7684\u7ed3\u70b9\u4e0e\u540e\u9762\u7684\u7ed3\u70b9\u5168\u90e8\u76f8\u8fde</li> </ul> </li> </ul>"},{"location":"course/CS231n/#lecture-4-convolution-network","title":"Lecture 4 Convolution network","text":""},{"location":"course/CS231n/#numpy","title":"Numpy","text":"<ul> <li> <p>Python\u90e8\u5206</p> <ul> <li> <p>print\u4e0d\u6362\u884c\uff1a<code>print(str, end=\"\")</code></p> <ul> <li>end\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u4efb\u4f55\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u53c2\u6570\u4e3a<code>\\n</code></li> </ul> </li> </ul> <ul> <li> <p>String method</p> <pre><code>str.upper/lower() #\u6240\u6709\u5b57\u7b26\u5927\\\u5c0f\u5199\nstr.strip() #\u5220\u9664\u524d\u5bfc\u548c\u540e\u5c3e\u7684\u7a7a\u683c\nstr.replace('str1', 'str2') #\u628a\u6240\u6709\u7684\u5b57\u4e32str1\u7528str2\u66ff\u6362\nstr.center(length) #Padding a string with space and put the string in the middle\nstr.count(sub, start, end) #\u8fd4\u56de\u5b57\u4e32sub\u5728str\u4e2d\u76f8\u5e94\u8303\u56f4\u7684\u51fa\u73b0\u6b21\u6570(non-overlaping)\nstr.find(sub, start, end) #\u8fd4\u56de\u5b57\u7b26\u4e32sub\u5728str\u4e2d\u6307\u5b9a\u8303\u56f4\u7684\u7b2c\u4e00\u6b21\u51fa\u73b0\u4f4d\u7f6e\uff0c\u6ca1\u6709\u5219\u8fd4\u56de-1\nstr.startwith/endwith(prefix/suffix, start, end) #\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5xxx\u7ed3\u5c3e\nstr.isalnum/isalpha/isdigit/decimal()\nstr.partition(sep) #\u5728\u7b2c\u4e00\u6b21\u9047\u5230\u5b57\u7b26\u4e32sep\u65f6\u5c06str\u5206\u5272\u6210\u4e09\u90e8\u5206\uff0c\u8fd4\u56de\u4e00\u4e2a\u4e09\u5143\u7ec4\nstr.ljust/rjust(width) #\u8fd4\u56de\u957f\u5ea6\u5bbd\u5ea6\u53f3\u5bf9\u9f50\u7684\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u7528space\u586b\u5145\nstr.split(sep=None, maxsplit=-1) #\u5c06sep\u4f5c\u4e3a\u5206\u9694\u7b26\u5206\u5272\u6700\u591amaxsplit\u6b21\uff0c\u5373\u7ed3\u679c\u542b\u6700\u591amaxsplit+1\u4e2a\u5143\u7d20\uff0c\u7ed3\u679c\u4e0d\u5305\u542bdelimiter\n</code></pre> </li> </ul> <ul> <li></li> </ul> </li> </ul>"},{"location":"course/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%8A%80%E6%9C%AF/","title":"\u5927\u6570\u636e\u5b58\u50a8\u4e0e\u8ba1\u7b97\u6280\u672f","text":""},{"location":"course/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%8A%80%E6%9C%AF/#lecture1-introduction","title":"Lecture1 Introduction","text":"<p>\u5927\u6570\u636e\uff1a\u89c4\u6a21\u5728P\u7ea7(10<sup>15</sup>)-E\u7ea7(10<sup>18</sup>)-Z\u7ea7\uff0810<sup>21</sup>\uff09\u7684\u6781\u5927\u89c4\u6a21\u6570\u636e\u5904\u7406\u6216\u6216Extreme-Scale Computing\uff0c\u5373\u4f20\u7edf\u5b58\u50a8\u3001\u6570\u636e\u5e93\u3001\u5e76\u884c\u8ba1\u7b97\u3001\u6570\u636e\u6316\u6398\u7b49\u6280\u672f\u65e0\u6cd5\u6709\u6548\u5904\u7406\u7684\u6781\u5927\u89c4\u6a21\u6570\u636e\u8ba1\u7b97</p> <p>\u7279\u70b9\uff1a4V\uff0cVolume\u4f53\u91cf\u5927, Value\u4ef7\u503c\u5bc6\u5ea6\u4f4e, Variety\u591a\u6837\u6027, Velocity\u4e00\u79d2\u5b9a\u5f8b</p> <p>\u5e94\u7528\uff1a\u641c\u7d22\u5f15\u64ce(\u5927\u6570\u636e\u7d22\u5f15\uff0c\u641c\u7d22\u884c\u4e3a\u6316\u6398\u548c\u5206\u6790\uff0c\u7ade\u4ef7\u6392\u540d)\uff0c\u7535\u5546(\u667a\u80fd\u63a8\u8350\u3001\u7cbe\u51c6\u8425\u9500\u3001\u5e7f\u544a\u4f18\u5316)\uff0c\u793e\u4ea4\u5a92\u4f53\uff0c\u79fb\u52a8\u4e92\u8054\u7f51\u5206\u6790\uff0c\u91d1\u878d\u5927\u6570\u636e\uff0c\u7535\u4fe1\u5927\u6570\u636e......</p> <p>IT-&gt;DT: \u6570\u636e\u6280\u672f\u4ea7\u4e1a</p> <ul> <li>\u6570\u636e\u5373\u5546\u54c1\uff1a\u6570\u636e\u91c7\u96c6\u548c\u6570\u636e\u4ea4\u6613</li> <li>\u6280\u672f\u670d\u52a1\u6a21\u5f0f\uff1a\u6570\u636e\u6280\u672f\u548c\u6280\u672f\u4ea4\u6613\uff0c\u5982\u6570\u636e\u5b58\u50a8\u548c\u5e76\u884c\u5904\u7406/\u673a\u5668\u5b66\u4e60/\u53ef\u89c6\u5316/\u77e5\u8bc6\u56fe\u8c31\u6280\u672f</li> <li>\u4e91\u5e73\u53f0\u6a21\u5f0f\uff1a\u91c7\u7528\u4e91\u670d\u52a1\u7684\u6a21\u5f0f\u63d0\u4f9b\u6570\u636e\u548c\u6280\u672f\u7684\u5728\u7ebf\u670d\u52a1</li> </ul>"},{"location":"course/%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E4%B8%8E%E8%AE%A1%E7%AE%97%E6%8A%80%E6%9C%AF/#lecture2","title":"Lecture2 \u5b58\u50a8\u6280\u672f","text":"<p>\u6570\u636e\uff1a\u7ed3\u6784\u5316\u6570\u636e\u548c\u975e\u7ed3\u6784\u5316\u6570\u636e</p> <p>\u6570\u636e\u4e2d\u5fc3\uff1a\u5305\u542b\u5b58\u50a8\u3001\u8ba1\u7b97(\u4e3b\u673a)\u3001\u7f51\u7edc\u3001DBMS\u3001\u5e94\u7528\u7a0b\u5e8f\u4ee5\u63d0\u4f9b\u96c6\u4e2d\u5f0f\u6570\u636e\u5904\u7406\u529f\u80fd\u7684\u8bbe\u5907\u3002</p> <ul> <li>\u516d\u4e2a\u7279\u5f81\uff1a\u6570\u636e\u5b8c\u6574\u6027\uff0c\u53ef\u7528\u6027\uff0c\u5b89\u5168\u6027\uff0c\u6027\u80fd\uff0c\u5bb9\u91cf\u548c\u53ef\u6269\u5c55\u6027</li> </ul> <p>\u5e94\u7528\u7a0b\u5e8f\uff1a\u5b83\u662f\u5411\u6700\u7ec8\u7528\u6237\u63d0\u4f9b\u5e94\u7528\u7a0b\u5e8f\u800c\u65e0\u9700\u4efb\u4f55\u5b89\u88c5\u3001\u96c6\u6210\u6216\u5e95\u5c42\u8ba1\u7b97\u5e73\u53f0\u4e0a\u7684\u4f9d\u8d56\u9879\u7684\u6280\u672f</p> <ul> <li>\u5173\u952eI/O\u7279\u6027\uff1a\u8bfb\u53d6\u5bc6\u96c6\u578b\u548c\u5199\u5165\u5bc6\u96c6\u578b\uff0c\u6309\u5e8f\u548c\u968f\u673a\uff0c\u5927\u5c0f</li> </ul> <p>DBMS: DBMS \u53ef\u63a7\u5236\u6570\u636e\u5e93\u7684\u521b\u5efa\u3001\u7ef4\u62a4\u548c\u4f7f\u7528\uff0c\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u7684\u6570\u636e\u8bf7\u6c42</p> <p>\u4e3b\u673a\uff08\u8ba1\u7b97\uff09: \u501f\u52a9\u5e95\u5c42\u8ba1\u7b97\u7ec4\u4ef6\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u8d44\u6e90\uff0c\u5305\u542b\u786c\u4ef6\u548c\u8f6f\u4ef6\u7ec4\u4ef6</p> <p>\u4e91\u8ba1\u7b97\uff1a\u652f\u6301\u4e2a\u4eba\u548c\u7ec4\u7ec7\u901a\u8fc7\u7f51\u7edc\u5c06 IT \u8d44\u6e90\u4f5c\u4e3a\u670d\u52a1\u4f7f\u7528</p> <p>\u865a\u62df\u5316\uff1a\u62bd\u8c61\u5316\u7269\u7406\u8d44\u6e90\u5e76\u8ba9\u5176\u663e\u793a\u4e3a\u903b\u8f91\u8d44\u6e90\u7684\u6280\u672f</p> <ul> <li> <p>\u8ba1\u7b97\u865a\u62df\u5316\uff1a\u5b83\u662f\u4e00\u9879\u63a9\u853d\u6216\u62bd\u8c61\u5316\u7269\u7406\u8ba1\u7b97\u786c\u4ef6\u7684\u6280\u672f\uff0c\u652f\u6301\u5bf9\u5355\u4e2a\u6216\u7fa4\u96c6\u7269\u7406\u673a\u5e76\u884c\u8fd0\u884c\u591a\u4e2a\u64cd\u4f5c\u7cfb\u7edf (OS)</p> <ul> <li>\u652f\u6301\u521b\u5efa\u591a\u53f0\u865a\u62df\u673a (VM)\uff0c\u6bcf\u53f0\u90fd\u8fd0\u884c\u4e00\u4e2a OS \u548c\u5e94\u7528\u7a0b\u5e8f</li> </ul> <ul> <li>\u865a\u62df\u5316\u5c42\u4f4d\u4e8e\u786c\u4ef6\u548c\u865a\u62df\u673a\u4e4b\u95f4\uff0c\u63d0\u4f9b\u6709\u6807\u51c6\u5316\u7684\u786c\u4ef6\u8d44\u6e90</li> </ul> </li> </ul> <ul> <li> <p>\u684c\u9762\u865a\u62df\u5316\uff1a\u8fd9\u662f\u4e00\u9879\u652f\u6301\u4ece\u7ec8\u7aef\u8bbe\u5907\u65ad\u5f00\u7528\u6237\u72b6\u6001\u3001\u64cd\u4f5c\u7cfb\u7edf (OS) \u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u6280\u672f\u3002</p> <ul> <li>\u652f\u6301\u7ec4\u7ec7\u6258\u7ba1\u548c\u96c6\u4e2d\u7ba1\u7406\u684c\u9762</li> </ul> </li> </ul> <p>\u8bbe\u5907\u95f4\u4e00\u4e9b\u8fde\u63a5\u534f\u8bae\uff1aSCSI, SAS, SATA, FC, IP</p> <p>\u5b58\u50a8\u9009\u9879\uff1a\u78c1\u5e26\uff0c\u5149\u76d8\uff0c\u78c1\u76d8\u9a71\u52a8\u5668\uff0c\u95ea\u5b58(\u56fa\u6001)\u9a71\u52a8\u5668</p> <p>RAID: \u5b83\u662f\u4e00\u9879\u5c06\u591a\u4e2a\u78c1\u76d8\u9a71\u52a8\u5668\u5408\u5e76\u5230\u4e00\u4e2a\u903b\u8f91\u5355\u5143\uff08RAID \u96c6\uff09\u4e2d\u5e76\u63d0\u4f9b\u4fdd\u62a4\u548c/\u6216\u6027\u80fd\u7684\u6280\u672f\u3002</p> <p></p> <ul> <li>Stripping , Mirror, Parity</li> <li>RAID 0 \u2013 \u65e0\u5bb9\u9519\u80fd\u529b\u7684\u5206\u6761\u96c6</li> <li>RAID 1 \u2013 \u78c1\u76d8\u955c\u50cf</li> <li>RAID 0 + 1 - \u6761\u5e26\u96c6\u7ec4\u6210\u7684\u955c\u50cf\u96c6\uff0c\u4e5f\u5c31\u662f\u5148\u5c06\u6574\u4e2a\u5206\u6761\uff0c\u5c06\u6574\u4e2a\u5206\u6761\u505a\u955c\u50cf</li> <li>RAID 1 + 0 \u2013 \u955c\u50cf\u96c6\u7ec4\u6210\u7684\u6761\u5e26\u96c6\uff0c\u5148\u5c06\u6bcf\u4e2a\u5206\u6761\u955c\u50cf\uff0c\u7136\u540e\u7ec4\u5408\u5728\u4e00\u8d77</li> <li>RAID 3 \u2013 \u5177\u6709\u5e76\u884c\u8bbf\u95ee\u548c\u4e13\u7528\u5947\u5076\u6821\u9a8c\u78c1\u76d8\u7684\u5206\u6761\u96c6</li> <li>RAID 5 \u2013 \u5177\u6709\u72ec\u7acb\u78c1\u76d8\u8bbf\u95ee\u548c\u5206\u5e03\u5f0f\u5947\u5076\u6821\u9a8c\u7684\u5206\u6761\u96c6</li> <li>RAID 6 \u2013 \u5177\u6709\u72ec\u7acb\u78c1\u76d8\u8bbf\u95ee\u548c\u53cc\u5206\u5e03\u5f0f\u5947\u5076\u6821\u9a8c\u7684\u5206\u6761\u96c6</li> </ul>"},{"location":"favorites/","title":"\u6249\u9875","text":"<p>\u6536\u85cf\u4e00\u4e9b\u6709\u8da3\u7684\u4e1c\u897f.</p> <p>\u201c\u6211\u4ece\u4e0d\u6000\u7591\u771f\u5fc3\uff0c\u4f46\u771f\u5fc3\u77ac\u606f\u4e07\u53d8\u3002\u201d</p>"},{"location":"favorites/cartoon/","title":"\u770b\u756a\u8bb0\u5f55","text":"<p>\u8bb0\u5f55\u4e00\u4e0b\u770b\u8fc7\u7684\u756a\u5267\uff0c\u5747\u57fa\u4e8e\u4e2a\u4eba\u7684\u89c6\u89d2\u548c\u559c\u597d\u5bf9\u756a\u5267\u8fdb\u884c\u8bc4\u4ef7\uff1a</p>"},{"location":"favorites/cartoon/#_2","title":"\u795e\u4f5c","text":"<ul> <li>\u51b0\u83d3</li> <li>\u547d\u8fd0\u77f3\u4e4b\u95e8\u30010\u3001\u8d1f\u8377\u9886\u57df\u7684\u65e2\u89c6\u611f</li> <li>86-\u4e0d\u5b58\u5728\u7684\u6218\u533a</li> <li>\u5200\u5251\u795e\u57df\u7b2c\u4e00\u5b63(SAO+ALO\u7bc7)\uff0c\u6211\u7684\u5165\u95e8\u756a(x</li> <li>Re:\u4ece\u96f6\u5f00\u59cb\u7684\u5f02\u4e16\u754c\u751f\u6d3b</li> <li>\u65e0\u804c\u8f6c\u751f</li> <li>\u7a7a\u4e4b\u5883\u754c</li> <li>\u6587\u8c6a\u91ce\u72ac</li> <li>\u67d0\u79d1\u5b66\u7684\u8d85\u7535\u78c1\u70ae</li> <li>\u7d2b\u7f57\u5170\u6c38\u6052\u82b1\u56ed\u5916\u4f20</li> <li>\u846c\u9001\u7684\u8299\u8389\u83b2</li> <li>No Game No Life</li> <li>\u9b54\u6cd5\u5c11\u5973\u5c0f\u5706</li> <li>\u5fc3\u7406\u6d4b\u91cf\u8005(Psycho-Pass) </li> <li>\u5229\u5179\u4e0e\u9752\u9e1f</li> <li>\u540d\u4fa6\u63a2\u67ef\u5357M6</li> <li>\u4f60\u7684\u540d\u5b57</li> <li>\u91cd\u542f\u54b2\u826f\u7530</li> <li>Another</li> </ul>"},{"location":"favorites/cartoon/#_3","title":"\u53ef\u4ee5\u770b\u770b","text":"<ul> <li>\u8389\u53ef\u4e3d\u4e1d(Lycoris Recoli)  </li> <li>\u8d25\u72ac\u5973\u4e3b\u592a\u591a\u4e86</li> <li>\u9b3c\u706d\u4e4b\u5203</li> <li>\u7f6a\u6076\u738b\u51a0</li> <li>\u9b54\u6cd5\u5c11\u5973\u4f0a\u8389\u96c5</li> <li>\u5200\u5251\u795e\u57df\u7b2c\u4e8c\u5b63(\u5e7d\u7075\u5b50\u5f39)</li> <li>\u9752\u6625\u732a\u5934\u5c11\u5e74\u4e4b\u4e0d\u4f1a\u68a6\u5230\u5154\u5973\u90ce\u5b66\u59d0\u3001\u6000\u68a6\u7f8e\u5c11\u5973\u3001\u5a07\u601c\u5916\u51fa\u59b9\u3001\u7ea2\u4e66\u5305\u5973\u5b69</li> <li>Fate/stay night\uff0cUBW\uff0cHF\u4e09\u90e8\u66f2\uff0c\u524d\u4f20ZERO\uff0c</li> <li>\u6a31\u82b1\u5e84\u7684\u5ba0\u7269\u5973\u5b69</li> <li>\u5439\u54cd\u5427\u4e0a\u4f4e\u97f3\u53f7(\u9664\u4e86\u7b2c\u4e09\u5b63\u672b)</li> <li>\u9b54\u6cd5\u7981\u4e66\u76ee\u5f55\u7b2c\u4e00\u5b63\u3001\u7b2c\u4e8c\u5b63\u3001\u5267\u573a\u7248</li> <li>\u8f7b\u97f3\u5c11\u5973</li> <li>\u6447\u66f3\u767e\u5408</li> <li>\u4e2d\u4e8c\u75c5\u4e5f\u8981\u8c08\u604b\u7231</li> <li>\u5c0f\u6797\u5bb6\u7684\u9f99\u5973\u4ec6</li> <li>\u51c9\u5bab\u6625\u65e5\u7684\u5fe7\u90c1(\u6f2b\u65e0\u6b62\u5883\u7684\u516b\u6708)\u3001\u51c9\u5bab\u6625\u65e5\u7684\u6d88\u5931</li> <li>\u53cd\u53db\u7684\u9c81\u8def\u4fee\uff0cCode Geass\u9c81\u9c81\u4fee\u7684\u590d\u6d3b</li> <li>\u65a9\u00b7\u8d64\u7ea2\u4e4b\u77b3</li> <li>\u5e72\u7269\u59b9\u5c0f\u57cb</li> <li>\u4e1c\u4eac\u55b0\u79cd</li> <li>\u5883\u754c\u7684\u5f7c\u65b9</li> <li>\u672a\u95fb\u82b1\u540d(\u6211\u4eec\u4ecd\u672a\u6307\u5bfc\u90a3\u5929\u6240\u770b\u89c1\u7684\u82b1\u7684\u540d\u5b57)</li> <li>\u6392\u7403\u5c11\u5e74</li> <li>\u6b7b\u795e\u5343\u5e74\u8840\u6218</li> <li>EVA(\u503c\u5f97\u8865\u4e00\u4e0b)</li> <li>\u540d\u4fa6\u63a2\u67ef\u5357M5\u3001M10\u3001M14</li> <li>\u5929\u6c14\u4e4b\u5b50\u3001\u5343\u4e0e\u5343\u5bfb\u3001 \u955c\u4e4b\u5b64\u57ce\u3001\u901a\u5f80\u590f\u5929\u7684\u96a7\u9053</li> <li>\u6d77\u8d3c\u738b\u5267\u573a\u7248\u7ea2\u53d1\u6b4c\u59ec\u3001Z</li> <li>\u79d2\u901f\u4e94\u5398\u7c73\uff0c\u72fc\u7684\u5b69\u5b50\u96e8\u4e0e\u96ea\u3001\u8424\u706b\u4e4b\u68ee</li> </ul>"},{"location":"favorites/cartoon/#_4","title":"\u8fd8\u884c\u5427\uff0c\u4e00\u822c\u822c","text":"<ul> <li>\u7ea6\u4f1a\u5927\u4f5c\u6218</li> <li>\u9f99\u738b\u7684\u5de5\u4f5c</li> <li>\u96f6\u4e4b\u4f7f\u9b54</li> <li>\u56fd\u738b\u6392\u540d</li> <li>\u9ad8\u8fbeseed(\u5e74\u4ee3\u4e45\u8fdcx)</li> <li>\u8fdb\u51fb\u7684\u5de8\u4eba</li> <li>\u4e00\u62f3\u8d85\u4eba</li> <li>\u8d5b\u9a6c\u5a18</li> <li>\u5de5\u4f5c\u7ec6\u80de</li> <li>Angeles of Death</li> <li>\u6b22\u8fce\u6765\u5230\u5b9e\u529b\u4e3b\u4e49\u81f3\u4e0a\u7684\u6559\u5ba4(\u5c0f\u8bf4\u597d\u770b)</li> <li>GOSICK</li> <li>\u6d77\u8d3c\u738b\u3001\u706b\u5f71\u5fcd\u8005\u3001\u540d\u4fa6\u63a2\u67ef\u5357(\u8d85\u957f\u756a\u90fd\u4e0d\u63a8\u8350)</li> <li>\u8a00\u53f6\u4e4b\u5ead</li> <li>\u672a\u6765\u65e5\u8bb0</li> </ul>"},{"location":"favorites/cartoon/#_5","title":"\u6ca1\u5565\u5370\u8c61","text":"<ul> <li>\u9b54\u6cd5\u7981\u4e66\u76ee\u5f55\u7b2c\u4e09\u5b63</li> <li>ISLAND</li> <li>\u65e0\u5f69\u9650\u7684\u602a\u7075\u4e16\u754c</li> <li>\u7eaf\u767d\u4ea4\u54cd\u66f2</li> <li>\u51b0\u5251\u7684\u9b54\u672f\u5e08\u5c06\u8981\u7edf\u4e00\u4e16\u754c</li> <li>\u6211\u63a8\u7684\u5b69\u5b50</li> <li>\u67d0\u79d1\u5b66\u7684\u4e00\u65b9\u901a\u884c</li> <li>\u602a\u602a\u5b88\u62a4\u795e</li> <li>\u61a7\u61ac\u6210\u4e3a\u9b54\u6cd5\u5c11\u5973(?)</li> </ul>"},{"location":"favorites/cartoon/#_6","title":"\u770b\u8fc7\u4f46\u4e0d\u63a8\u8350","text":"<ul> <li>\u5200\u5251\u795e\u57df\u7b2c\u4e09\u5b63(\u7231\u4e3d\u4e1d\u7bc7)</li> <li>\u5439\u54cd\u5427\u4e0a\u4f4e\u97f3\u53f7\u7b2c\u4e09\u5b63(\u7279\u522b\u662f12\u300113\u96c6)</li> <li>\u7ea6\u4f1a\u5927\u4f5c\u6218\u7b2c\u4e09\u3001\u56db\u3001\u4e94\u5b63</li> <li>\u4f60\u60f3\u6d3b\u51fa\u600e\u6837\u7684\u4eba\u751f</li> <li>\u94c3\u82bd\u6237\u7f14(\u9664\u4e86\u4e3b\u9898\u66f2\u5f88\u597d\u542c)</li> </ul>"},{"location":"favorites/markdown/","title":"Markdown\u516c\u5f0f\u8bed\u6cd5\u6536\u5f55","text":"<ul> <li>markdown\u6570\u5b66\u516c\u5f0f</li> <li>markdown\u8865\u5145</li> </ul>"},{"location":"favorites/website/","title":"\u7ad9\u70b9\u6536\u85cf","text":""},{"location":"favorites/website/#_2","title":"\u5e38\u7528\u7ad9\u70b9","text":"<ul> <li>mkdocs\u914d\u7f6e\u6307\u5357</li> <li>CC98\u8bba\u575b\uff08\u6478\u9c7c\u5fc5\u5907x\uff09</li> <li>ZJUSCT\u4e3b\u9875</li> </ul>"},{"location":"favorites/website/#_3","title":"\u77e5\u8bc6\u8bb0\u5f55","text":"<ul> <li>NP, P, NPC, NP-hard\u95ee\u9898\u8be6\u89e3</li> </ul>"},{"location":"paper/","title":"\u6249\u9875","text":"<p>\u8bb0\u5f55\u4e00\u4e9b\u8bba\u6587\u9605\u8bfb\u7b14\u8bb0..</p> <p>\u201c\u5584\u59cb\u8005\u5b9e\u7e41\uff0c\u514b\u7ec8\u8005\u76d6\u5be1\u201d</p>"},{"location":"paper/Atom/","title":"ATOM:LOW-BIT QUANTIZATION FOR EFFICIENT AND ACCURATE LLM SERVING:","text":"<p>Background:</p> <p>\u91cf\u5316\u7684\u6b65\u9aa4\uff1a</p> <ul> <li>\u786e\u5b9a\u91cf\u5316\u53c2\u6570\uff0c\u5305\u62ecscale\u548czero point</li> <li>\u8ba1\u7b97\u91cf\u5316\u540e\u7684tensor</li> </ul> <p>uniform asymmetric quantization\uff1a</p> <p>\\(s= \\dfrac{max(X)-min(X)}{2^n-1}\\cdot c, z=\\lfloor\\dfrac{-min(X)}{s}\\rceil,\\overline{X}=clamp(\\lfloor\\dfrac{X}{s}\\rceil,0,2^n-1)\\)</p> <p>\u5176\u4e2d\\(s\\)\u662fscale, \\(z\\)\u662fzero point\uff0c\\(\\overline{X}\\)\u662f\u91cf\u5316\u540e\u7684Tensor\uff0c\\(X\\)\u662fInput Tensor\uff0cclamp\u662f\u4e00\u4e2a\u9650\u5236\u51fd\u6570\uff0c\u5c06\\(\\lfloor\\frac{X}{s}\\rceil\\)\u9650\u5236\u5728\\([0,2^n-1]\\)\u4e4b\u95f4</p> <p>\u91cf\u5316\u540e\u7684\u4e58\u6cd5\uff1a\\(W\\cdot X=s_W(\\overline{W}-z_W)\\cdot s_x(\\overline{X}-z_x)\\)</p> <p>uniform symmetric quantization:</p> <p>\\(s= \\dfrac{2*max(|X|)}{2^n-1}\\cdot c,,\\overline{X}=clamp(\\lfloor\\dfrac{X}{s}\\rceil,-2^{n-1},2^{n-1}-1)\\)</p> <p>dynamic vs static: </p> <p>\u52a8\u6001\u91cf\u5316\u4f7f\u7528\u7684\u662fInference\u65f6\u5b9e\u65f6\u7edf\u8ba1\u4fe1\u606f\uff0c\u800c\u9759\u6001\u91cf\u5316\u4f7f\u7528\u7684\u662f\u6821\u51c6\u6570\u636e</p> <p>\u91cf\u5316\u7684granularity:</p> <ul> <li>Per tensor: \u5bf9\u4e8e\u6574\u4e2atensor\u505a\u91cf\u5316</li> </ul> <ul> <li>Per channel\uff1a\u5bf9\u4e8eTensor\u7684\u4e00\u884c\u6216\u4e00\u5217\u505a\u91cf\u5316</li> </ul> <ul> <li>Per group\uff1a\u5728Tensor\u7684\u4e00\u884c\u4e2d\u5206\u4e3a\u4e0d\u540c\u7684\u7ec4\uff0c\u5bf9\u8fd9\u4e9b\u7ec4\u505a\u91cf\u5316</li> </ul> <p>\u6838\u5fc3\u91cf\u5316\u8bbe\u8ba1\uff1a</p> <ul> <li>\u91c7\u7528\u6df7\u5408\u7cbe\u5ea6\u91cf\u5316\uff0c\u4fdd\u7559\u4e00\u5c0f\u90e8\u5206\u663e\u8457\u7684actiavtions\u548cweights\u6765\u7ef4\u6301\u7cbe\u5ea6</li> <li>\u7ec6\u7c92\u5ea6\u7684group quantization\u6743\u91cd\u548c\u6fc0\u6d3b</li> <li>\u52a8\u6001\u5730\u91cf\u5316activations\u7684\u53c2\u6570\u6765\u6355\u83b7\u6bcf\u4e2a\u8f93\u5165\u7684\u5206\u5e03</li> </ul> <p>\u4e3a\u4e86\u5229\u7528\u786c\u4ef6\u7279\u6027\uff1a</p> <ul> <li>\u5bf9\u4e8e\u6df7\u5408\u7cbe\u5ea6\u64cd\u4f5c\uff0c\u91cd\u65b0\u6392\u5e8f\u6743\u91cd\u548c\u6fc0\u6d3b</li> <li>\u878d\u5408\u91cf\u5316\u548c\u91cd\u6392\u5e8f\u64cd\u4f5c\u6765\u6d88\u9664overhead</li> <li>\u5c06outliers\u91cf\u5316\u4e3a8\u4f4d\uff0c\u6765\u4fdd\u6301\u7cbe\u5ea6\u548c\u6548\u7387\u4e4b\u95f4\u7684\u5e73\u8861</li> <li>\u91cf\u5316KV-cache\u5230\u4f4e\u7cbe\u5ea6\u6765\u51cf\u5c11\u5185\u5b58\u79fb\u52a8</li> </ul> <p>Atom LLama\u67b6\u6784\uff1a</p> <p></p> <p>\u91cf\u5316\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <p></p> <p>Mixed-precision quanzization</p> <p>\u91c7\u7528\u6df7\u5408\u7cbe\u5ea6\u7684\u5206\u7ec4\u91cf\u5316\uff0coutliers\u91c7\u7528INT8\u91cf\u5316\uff0c\u5176\u4f59\u91c7\u7528\u4f4e\u7cbe\u5ea6\u91cf\u5316</p> <p>\u5728\u91cf\u5316\u65f6\uff0c\u5c06\u5206\u6563\u7684outliers\u653e\u5230weight\u548cactivation\u77e9\u9635\u7684\u672b\u5c3e\u3002</p> <p>Weight matrix\u7684\u91cd\u6392\u5e8f\u4f7f\u7528\u6821\u51c6\u6570\u636e\u79bb\u7ebf\u8fdb\u884c\uff0c\u53ea\u7528\u8fdb\u884c\u4e00\u6b21\u3002Activation Matrix\u7684\u91cd\u6392\u5e8f\u9700\u8981\u5728\u7ebf\u8fdb\u884c\uff0c\u878d\u5408\u5230\u4e86\u5728\u5176\u4e4b\u524d\u7684Operator\u4e2d\u6765\u51cf\u5c0foverhead.</p> <p>Fine-grained group quantization</p> <p>\u8fdb\u4e00\u6b65\u63d0\u5347\u51c6\u786e\u7387</p> <p>Fused GEMM operator\uff1a\u9996\u5148\u5bf9\u4e8e\u6bcf\u4e2agroup\u4f7f\u7528TensorCore\u8fdb\u884c\u7684\u4f4e\u7cbe\u5ea6\u7684\u4e58\u6cd5\u8ba1\u7b97\uff0c\u7136\u540e\u5c06\u7ed3\u679c\u8fd8\u539f\u5e76\u8fdb\u884cFP16\u7684\u52a0\u6cd5\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\u3002\u5373\u5c06Dequantization\u548c\u539f\u5148\u7684MMA\u7b97\u5b50\u8fdb\u884c\u4e86\u878d\u5408\u3002</p> <p></p> <p>Dynamic quantization process </p> <p>\u5bf9\u4e8e\u6fc0\u6d3b\u77e9\u9635\uff0c\u91c7\u7528\u52a8\u6001\u91cf\u5316\uff0c\u5b9e\u73b0\u7c7b\u4f3c\u4e8eZeroQuant(?).</p> <p>\u4f7f\u7528\u5bf9\u79f0\u91cf\u5316\uff0c\u9009\u62e9\u4e86\u4e00\u4e2a\u597d\u7684clip threshold</p> <p>\u5728\u6743\u91cd\u77e9\u9635\u7684\u91cf\u5316\u65f6\u4f7f\u7528GPTQ\u6765\u63d0\u5347\u51c6\u786e\u7387</p> <p>KV-cache quantization</p> <p>\u4f7f\u7528\u975e\u5bf9\u79f0\u91cf\u5316\uff0c\u5728\u4e00\u4e2ahead\u5185\u8fdb\u884c\u91cf\u5316</p> <p>\u5728Load\u65f6\u4f7f\u7528low-bit\u7684\u91cf\u5316\uff0c\u800c\u5728\u8fdb\u884cFP16\u8ba1\u7b97\u4e4b\u524d\u8fdb\u884c\u8fd8\u539f</p>"},{"location":"paper/DEFT/","title":"DEFT: FLASH TREE-ATTENTION WITH IO-AWARENESS FOR EFFICIENT TREE-SEARCH-BASED LLM INFERENCE","text":"<p>\u603b\u7ed3\uff1a\u51cf\u5c11\u4e86KV cache\u548cpartial results\u7684IO cost</p> <ul> <li>IO-aware tree attention algorithm</li> <li>tree-search-based tasks target</li> </ul> <ul> <li>QKV Preparation and Attention Calculation(IO in KV cache, QK^T, Softmax)</li> </ul> <p>Sequenced-based decoding</p> <p>Tree-based decoding: \u540c\u65f6\u5904\u7406\u591a\u4e2a\u5177\u6709\u5171\u540cprefix\u7684\u5e8f\u5217\uff0ctree\u4e2d\u7684\u8282\u70b9\u53ef\u4ee5\u5728\u8ba1\u7b97\u548c\u5185\u5b58\u4e2d\u5171\u4eab</p> <ul> <li>\u76f4\u63a5\u5e94\u7528Sequenced-based\u5e26\u6765\u7684\u5197\u4f59: KV cache\u5e26\u6765\u7684memory storage, common prompts\u5e26\u6765\u7684computation, memory access</li> </ul> <p>Tree attention: \u7528\u6765\u5904\u7406\u5e76\u884cdecoding\u7684\u573a\u666f\uff0c\u51cf\u5c11Attention\u8ba1\u7b97\u65f6\u5185\u6838\u542f\u52a8\uff0c\u8ba1\u7b97\u548cKV cache\u5b58\u50a8\u7684overhead</p> <ul> <li>\u4e0d\u8db3\u5728partial result(QK^T)\u548cKV cache\u90fd\u4e0d\u662fIO aware\u7684</li> </ul> <p>Two Key insights:</p> <ul> <li>Query\u77e9\u9635\u7684IO workload\u548cKV cache\u76f8\u6bd4\u4e0d\u503c\u4e00\u63d0\uff0cTree\u4e2d\u6bcf\u4e2a\u8282\u70b9\u7684KV cache\u7684\u957f\u5ea6\u8fdc\u8fdc\u5927\u4e8eQuery\u7684\u957f\u5ea6<ul> <li>\u5728KV-preparation\u4e2d\uff0c\u5c06Decoding tree\u6309\u7167\u6bcf\u4e2a\u8282\u70b9\u6240\u62e5\u6709\u7684tokens\u548cKV cache\u8fdb\u884c\u62c6\u5206\uff0c\u7136\u540e\u5c06\u6bcf\u4e2a\u8282\u70b9\u7684KV cache\u4e0eDecoding tree\u4e2d\u5171\u4eab\u5b83\u7684\u6240\u6709Query\u5206\u7ec4</li> </ul> </li> <li>\u5728Tree-based attention\u4e2d\uff0c\u591a\u4e2aquery\u77e9\u9635\u53ef\u4ee5\u5728\u8ba1\u7b97\u4e2d\u5171\u4eab\u5b83\u4eecancestor\u7684KV cache\uff0c\u4ece\u800c\u4f18\u5316KV cache storage\u548c\u51cf\u5c11IO<ul> <li>fused-kernel to get partial attention and conduct the tree-topology-aware global reduction</li> </ul> </li> </ul> <p>Decoding tree definition: Decoding tree\u7684root\u8282\u70b9\u662f\u539f\u6765\u7684prompt\uff0c\u6bcf\u4e2anon-root\u8282\u70b9\u4ee3\u8868\u4e86\u751f\u6210token\u7684\u4e00\u4e2a\u5e8f\u5217\uff0c\u6bcf\u4e2aleaf node\u7684\u6700\u540e\u4e00\u4e2atoken\u662f\u4e0b\u4e00\u6b21\u89e3\u7801\u8fed\u4ee3\u7684input token</p> <p>Tree attention definition: \\(\\text{Tree-Attention}(n)=\\text{Attention}(P_{root \\rightarrow n})\\)\uff0c\u5373\u5bf9\u4e8e\u67d0\u4e2a\u8282\u70b9\\(u\\)\u4e2d\u7684token \\(n\\)\uff0c\u5b83\u7684Tree-attention\u6307\u7684\u662f\\(P_{root \\rightarrow n}\\)\u8def\u5f84\u4e0a\u7684\u6240\u6709Sequence attention output\u7684\u603b\u548c\uff0c\u800c\\(P_{root \\rightarrow n}\\)\u6307\u7684\u662f\\(P_{B_u}+s_{u,n}\\)\uff0c\u5206\u522b\u4ee3\u8868\u7684\u662f\u4ece\u6839\u8282\u70b9\u5230\u8282\u70b9u(\u4e0d\u5305\u542bu)\u5728\u5185\u7684\u6240\u6709token\u548c\u8282\u70b9u\u5185\u4ece\u7b2c\u4e00\u4e2atoken\u5230token \\(n\\)\u7684\u5e8f\u5217</p> <p>Deft Attention Kernel</p> <ul> <li> <p>\u4e09\u4e2a\u9700\u6c42\uff1a</p> <ul> <li>Query(tokens)</li> </ul> <ul> <li>KV cache of decoding tree</li> </ul> <ul> <li>Tree topo(the topology of decoding tree to map Query and KV)</li> </ul> </li> </ul> <ul> <li> <p>\u4e09\u4e2a\u90e8\u5206\uff1a</p> <ul> <li>Branch Controller</li> <li>KV cache Manager</li> <li>Sequence Tree Manger</li> </ul> </li> </ul> <p>\u4e24\u5f20\u6838\u5fc3\u56fe\uff1a</p> <ul> <li>System Overview:</li> </ul> <p></p> <ul> <li>Comparasion: \u8fd9\u5f20\u56fe\u8bb2\u7684\u5f88\u6e05\u695a</li> </ul> <p></p>"},{"location":"paper/DEFT/#algorithm","title":"Algorithm","text":"<p>QKV Preparation: load Query, Key, and Value (QKV) into shared memory and group them logically to calculate attention</p> <p>KV-Guided Tree Split strategy with tree-topology awareness: \u5373\u4ee5\u6bcf\u4e2anode\u7684KV cache\u6765\u8fdb\u884c\u5206\u7ec4\uff0c\u6d88\u9664\u4e86KV cache\u7684IO cost\uff0c\u5f15\u5165\u4e86\u989d\u5916\u7684Q\u7684IO\uff0c\u4f46\u7531\u4e8e\u5728tree decoding\u7684\u65f6\u5019\uff0cKV\u7684token length\u901a\u5e38\u8fdc\u8fdc\u5927\u4e8eQ\uff0c\u56e0\u6b64Q\u7684IO\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1\u3002\u5e76\u4e14DefT\u4e0d\u9700\u8981casual mask\u6765\u8fdb\u884c\u4e4b\u540e\u7684attention\u8ba1\u7b97.</p> <p></p> <p>Attention Calculation: apply attention algorithms to QKV groups for final attention results.</p> <p>Tree-Topology-Aware Global Reduction Strategy\uff1a\u5c06\u6bcf\u4e2aQKV group\u8fdb\u884c\u5206\u5757\uff0c\u4ece\u800c\u5229\u7528shared memory\u8fdb\u884c\u8ba1\u7b97\uff0c\u7136\u540e\u589e\u91cf\u7684\u8fdb\u884csoftmax reuction\u6765\u91cd\u5efaattention\u3002</p> <p></p> <p>\u6bcf\u4e2aQKV group\u4f1a\u4ea4\u7ed9\u4e00\u4e2a\u7ebf\u7a0b\u5757\u8fdb\u884c\u8ba1\u7b97with flash attention\uff0c\u8ba1\u7b97\u51fapartial attention\u540e\uff0c\u5c06partial attention\u548cquery\u8fdb\u884cmap\uff0c\u7136\u540e\u8fdb\u884cglobal reduction.</p> <p></p> <p>\u4e0e\u5176\u4ed6\u73b0\u6709\u65b9\u6cd5\u8fdb\u884cIO\u590d\u6742\u5ea6\u5206\u6790\u5bf9\u6bd4\uff1a</p> <p></p>"},{"location":"paper/DejaVu/","title":"De jaVu:Conditional Regenerative Learning to Enhance Dense Prediction:","text":"<p>\u6765\u81ea\u6cd5\u8bed\uff0c\u8868\u8fbe\u65e2\u89c6\u611f\u7684\u610f\u601d\uff0c\u8fd9\u4e0d\u7531\u5f97\u8ba9\u6211\u60f3\u8d77\u4e86\u77f3\u5934\u95e8(x</p> <p>Sparsity\u4e4b\u524d\u7684\u4e00\u4e9b\u7ed3\u679c\uff1a</p> <ul> <li>Iterative pruning and lottery ticket hypothesis: Lee et al., 2018,  Frankle &amp; Carbin, 2018</li> <li>Task-dependent pruning: Michel et al., 2019, Bansal et al., 2022</li> <li>zero-shot pruning: SparseGPT</li> </ul> <p>It is hard to achieve wall-clock time speed-up with unstructured sparsity</p> <p>The Hardware Lottery: \u7531Hooker\u63d0\u51fa\u7684\u4e00\u4e2a\u89c2\u70b9\uff0c\u6307\u7684\u662f\u4e00\u4e2a\u7814\u7a76\u65b9\u6848\u7684\u80dc\u51fa\u5f80\u5f80\u5e76\u4e0d\u662f\u5b83\u5168\u65b9\u9762\u4f18\u4e8e\u5176\u4ed6\u65b9\u6848\uff0c\u800c\u662f\u5b83\u4eec\u66f4\u9002\u5408\u5f53\u65f6\u7684\u8f6f\u786c\u4ef6\u73af\u5883\u3002</p> <p>Sparsity ratio\uff1a\u6307\u7684\u662f\u6743\u91cd\u77e9\u9635\u4e2d0\u5143\u7d20\u7684\u6bd4\u4f8b\uff0c\u800cpruning\u5c31\u662f\u5c06\u6743\u91cd\u77e9\u9635\u4e2d\u7684\u90e8\u5206\u503c\u820d\u53bb\uff08\u53d8\u4e3a0\uff09\uff0c\u6216\u8005\u66f4\u5f62\u8c61\u7684\u8bf4\u662f\u5c06\u6a21\u578b\u4e2d\u7684\u4e00\u4e9b\u53c2\u6570\u53bb\u6389\u6216\u8005\u67d0\u4e9b\u53c2\u6570\u4e0e\u53c2\u6570\u4e4b\u95f4\u7684\u8fde\u63a5\u53bb\u6389</p> <ul> <li>structured pruning: \u6307\u7684\u662f\u5c06\u6743\u91cd\u77e9\u9635\u8fdb\u884c\u6574\u884c\u7684\u6d88\u9664\uff0c\u76f8\u5f53\u4e8e\u76f8\u5f53\u4e8e\u51cf\u5c11\u4e86\u5168\u8fde\u63a5\u5c42\u7684\u4e00\u4e2aneuron\u6216\u8005\u4e00\u4e2a\u5377\u79ef\u5c42\u7684channel</li> <li>unstructured pruning: \u4f7f\u7528\u7684\u662fmask\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u8fdb\u884c\u6d88\u9664\u3002</li> <li>\u4e3a\u4ec0\u4e48pruning\u80fd\u591f\u51cf\u5c0f\u5185\u5b58\u4f7f\u7528\uff1a\u901a\u8fc7\u5c06\u526a\u679d\u540e\u7684\u6743\u91cd\u77e9\u9635\\(W_p\\)\u4ee5\u7279\u5b9a\u7684\u65b9\u5f0f\u5b58\u50a8\u5e76\u7ed3\u5408\u7279\u5b9a\u4f18\u5316\u540e\u7684\u8fd0\u7b97\u624d\u80fd\u51cf\u5c11\u5185\u5b58\u4f7f\u7528\u5e76\u5b9e\u73b0\u63a8\u7406\u52a0\u901f</li> </ul> <p>Lottery ticket hypothesis\uff1aAll you need is the winning tickets..... \u5728\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u59cb\u7ec8\u5b58\u5728\u4e00\u4e2a\u8f83\u5c0f\u7684\u5b50\u7f51\u7edc\uff0c\u5b83\u4eec\u91cd\u65b0\u5f00\u59cb\u8bad\u7ec3\uff0c\u5e76\u4e14\u81f3\u5c11\u4e0e\u8f83\u5927\u7684\u5b50\u7f51\u7edc\u4e00\u6837\u7684\u5b66\u4e60\uff0c\u80fd\u591f\u540c\u65f6\u8fbe\u5230\u7c7b\u4f3c\u7684\u6d4b\u8bd5\u7cbe\u5ea6\u3002\u4f46\u662f\u8fd9\u4e9b\u5b50\u7f51\u7edc\u9700\u8981\u5408\u9002\u7684\u521d\u59cb\u5316\u624d\u80fd\u8fdb\u884c\u6709\u6548\u7684\u8bad\u7ec3</p> <p>Ideal sparsity for LLMs: </p> <ol> <li>\u4e0d\u9700\u8981\u6a21\u578b\u91cd\u65b0\u8bad\u7ec3</li> <li>\u4fdd\u6301\u4e86\u6a21\u578b\u7684\u8d28\u91cf\u548c\u4e0a\u4e0b\u6587\u5b66\u4e60\u80fd\u529b</li> <li>\u5728\u73b0\u4ee3\u786c\u4ef6\u4e0a\u6709wall-clock time\u52a0\u901f(wall-clock time\u6307\u7684\u662fCPU Time+ off-CPU Time\uff0c\u4e3b\u8981\u5305\u542b\u4e86CPU\u7684\u6267\u884c\u65f6\u95f4\u548cI/O\u65f6\u95f4)</li> </ol> <p>Contextual sparsity: \u4e00\u79cd\u5c0f\u578b\u7684\uff0c\u4f9d\u8d56\u8f93\u5165\u7684\u6ce8\u610f\u529b\u5934\u548cMLP\u53c2\u6570\u96c6\u7684sparsity\uff0c\u5bf9\u4e8e\u67d0\u4e2a\u8f93\u5165\uff0c\u5b83\u53ef\u4ee5\u548c\u5b8c\u6574\u7684\u6a21\u578b\u4ea7\u751f\u8fd1\u4f3c\u7684\u8f93\u51fa\u3002</p> <ul> <li>Hidden Markov Models: \u7f29\u5199\u4e3aHMM\uff0c\u4e00\u79cd\u7edf\u8ba1\u5b66\u6a21\u578b\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u672a\u6765\u72b6\u6001\u4e0d\u4ec5\u53d6\u51b3\u4e8e\u5f53\u524d\u72b6\u6001\uff0c\u8fd8\u53d6\u51b3\u4e8e\u9690\u85cf\u72b6\u6001\u3002\u5373\u5f15\u7533\u51fa\u4e86\u89c2\u6d4b\u53d8\u91cf\u548c\u9690\u53d8\u91cf\u7684\u4e24\u4e2a\u6982\u5ff5\u3002</li> </ul> <p>\u7528\u6570\u5b66\u6a21\u578b\u6765\u8868\u793a\uff0c\u6709\u4e00\u4e2a\u7ed3\u679c\u96c6\u5408\\(X={x1, x2}\\)\uff0c\u4e00\u4e2a\u72b6\u6001\u8f6c\u6362\u77e9\u9635\uff0c\u4e00\u4e2a\\(Emission=(emission_k(b))\\)\u77e9\u9635(\u72b6\u6001k\u51fa\u73b0\u5728b\u7ed3\u679c\u7684\u53ef\u80fd\u6027)\uff0c\u4e00\u4e2ahidden path: \\(\\pi=\\pi_1 \\pi_2...\\pi_n\\)\uff0c\u6211\u4eec\u5173\u6ce8\u7684\u662f\\(Pr(x,\\pi)\\)\u5373HMM\u4e2d\u72b6\u6001\u5e8f\u5217\\(\\pi\\)\u5bf9\u5e94\u7ed3\u679c\u5e8f\u5217\u4e3a\\(x\\)\u7684\u6982\u7387\uff0c\u6216\u8005\u662f\\(Pr(x,\\pi)\\)\u5373\u5728\u72b6\u6001\u5e8f\u5217\\(\\pi\\)\u4e0b\u7684\u6761\u4ef6\u6982\u7387\uff0c\u901a\u5e38\u6211\u4eec\u5e0c\u671b\u627e\u5230\u4e00\u4e2ahidden path \\(\\pi\\)\u4f7f\u5f97\\(Pr(x,\\pi)=Pr(x|\\pi)*Pr(\\pi)\\)\u6700\u5927\uff0c\u6b64\u65f6\u7ed3\u679c\u5e8f\u5217\u662f\u5df2\u77e5\u7684\u5373\u89c2\u6d4b\u53d8\u91cf\uff0c\u800chidden path\u5219\u662f\u9690\u53d8\u91cf</p> <ul> <li>Viterbi algorithm\uff1a\u4e00\u79cd\u89e3\u51b3HMM\u95ee\u9898\u7684\u52a8\u6001\u89c4\u5212\u7b97\u6cd5(\u5b58\u50a8\u6700\u77ed+\u63d0\u524d\u526a\u679d)\uff0c\u5177\u4f53\u6ca1\u6709\u7ec6\u770b</li> </ul> <p>\u4f5c\u8005\u5173\u4e8eContextual sparsity\u89e3\u51b3\u4e86\u4e09\u4e2a\u95ee\u9898\uff1aExistence, Prediction, Efficiency</p> <ul> <li>Existence: \u4e3a\u4e86\u8fbe\u5230\u57fa\u672c\u76f8\u540c\u7684\u8f93\u51fa\uff0cContextual sparsity\u5e73\u5747\u662f 85% structured sparsity\uff0c\u5728\u4fdd\u6301\u51c6\u786e\u6027\u7684\u540c\u65f6\uff0c\u6bcf\u4e2a\u7279\u5b9a\u8f93\u5165\u53ef\u80fd\u4f1a\u5bfc\u81f4\u53c2\u6570\u51cf\u5c11 7 \u500d</li> <li>Prediction: <ul> <li>Contextual sparsity\u53d6\u51b3\u4e8e\u4e24\u65b9\u9762\uff0c\u4f9d\u8d56\u4e8eIndividual input tokens(non-contextual dynamic sparsity)\u548c\u5b83\u4eec\u4e4b\u95f4\u7684interaction(contextual dynamic sparsity)\u5373\u8db3\u591f\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002</li> <li>contextual dynamic sparsity\u53ef\u4ee5\u7531Head/MLP\u7684\u53c2\u6570\u548c\u4e0a\u4e00\u5c42output\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u6765\u9884\u6d4b\uff0coutput\u4e2d\u5e26\u6709the immediate contextual mixture of token embeddings\u3002</li> </ul> </li> <li>Efficiency:<ul> <li>\u5c06\u57fa\u4e8e\u76f8\u4f3c\u6027\u7684\u9884\u6d4b\u95ee\u9898\u5236\u5b9a\u4e3a\u4e00\u4e2aNNS\u95ee\u9898(Nearest Neighbor Search)</li> <li>Token Embeddings\u5728\u5404\u5c42\u4e4b\u95f4\u53d8\u5316\u7f13\u6162(\u7531\u4e8e\u6b8b\u5dee\u8fde\u63a5)\uff0c\u5373\u8fde\u7eed\u51e0\u5c42\u7684\u8f93\u5165\u5341\u5206\u76f8\u4f3c\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2aasynchronous lookahead predictor.</li> </ul> </li> </ul> <p>\u5bf9\u4e8e\u67d0\u4e00\u5c42\u7684\u7279\u5b9a\u8f93\u5165\uff0c\u53ef\u4ee5\u9884\u6d4b\u4e0b\u4e00\u5c42\u76f8\u5173\u7684subset of attention heads or MLP parameters\uff0c\u8fd9\u6837\u5c31\u53ea\u7528Load\u76f8\u5173\u53c2\u6570\u6765\u8ba1\u7b97</p> <p>\u5f02\u6b65\u9884\u6d4b\u5668\u53ef\u4ee5\u5728\u7406\u8bba\u4e0a\u4fdd\u8bc1sparsity prediction\u7684\u51c6\u786e\u6027</p> <p>\u6574\u5408hardware-aware\u7684\u7a00\u758f\u77e9\u9635\u4e58\u6cd5\u5b9e\u73b0</p> <p>Typical LLM procedure\uff1a</p> <ul> <li>prompt\uff1a\u6839\u636e\u8f93\u5165\u5e8f\u5217\u5728\u6bcf\u4e00\u5c42Tf layer\u4ea7\u751fKV cache</li> <li>token generation\uff1a\u4f7f\u7528KV cache\u6765\u4e00\u6b65\u4e00\u6b65\u751f\u6210token\u540c\u65f6\u66f4\u65b0KV cache<ul> <li>\u5728token generation\u4e2d\uff0c\u5360\u6bd4\u65f6\u95f4\u4e3b\u8981\u7531MLP\u3001attention\u548cGPU communication</li> </ul> </li> </ul> <p>Sparsified MLP\uff1a</p> <p>\\(MLP_{S_M(y)}=\\sigma(yW^1_{S_M})(W^2_{S_M})^T\\)\uff0c\u5176\u4e2d\\(\\sigma\\)\u662factivation function, \\(W_1\\)\u548c\\(W_2\\)\u662f\u4e24\u4e2a\u7ebf\u6027\u5c42\uff0c\\(y\\)\u662fInput\uff0c\u4e0b\u6807\\(S_M\\subseteq[4d]\\)\u6307\u7684\u662fNeuron\u7684\u5b50\u96c6\u5373\u6240\u6709\u5217\u7684\u67d0\u4e00\u4e2a\u5b50\u96c6</p> <p>Sparsified Attention\uff1a</p> <p>\\(MHA_{S_A}(y)=\\sum_{i\\in S_A}H_i(y)W_i^O\\)\uff0c\u5176\u4e2d\\(H_i(y)\\)\u662f\\(1 \\times d_h\\)\u7684\u77e9\u9635\uff0c\\(W_i^O\\)\u662f\\(d_h\\times d\\)\u7684\u77e9\u9635\u3002\u5404\u90e8\u5206\u7684\u610f\u601d\u5982\u4e0b</p> <ul> <li>\\(W_i^O\\)\u662foutput\u5728\\(i\\)-th attention head\u4e0a\u7684\u6295\u5f71\uff0c\\(W_i^K\\), \\(W_i^Q\\), \\(W_i^V\\)\u540c\u7406\u662f\\(d\\times d_h\\)\u7684</li> <li>\\(S_A\\)\u662fheads\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c \\(y\\)\u662fMHA\u5728current generation step\u7684input\uff0c\u4e00\u5171\u6709\\(h\\)\u4e2ahead</li> <li>\\(H_i(y)=D_i(y)^{-1}exp(yW_i^Q(W_i^K)^TX^T)XW_i^V\\), \u5176\u4e2d\\(D_i(y)=exp(yW_i^Q(W_i^K)^TX^T)1_n\\)\uff0c\\(H_i(y)\\)\u662f\\(1\\times d_h\\)\u7684</li> <li>\\(X\\subseteq R^{n\\times d}\\)\u662f\u4e4b\u524d\u6240\u6709token\u7684embeddings\uff0c\u5305\u542bprompts\u548c\u5148\u524d\u751f\u6210\u7684token</li> </ul> <p>\u95ee\u9898\u8f6c\u5316\u4e3a\u4e86\u627e\\(S_M\\)\u548c\\(S_A\\)\u4f7f\u5f97sparse approximation\u548cfull computation\u7684\u7ed3\u679c\u8bef\u5dee\u5728\u53ef\u63a5\u53d7\u8303\u56f4\u5185</p> <p>LLM Contextually Sparse\uff1a\u4e09\u5927\u53d1\u73b0</p> <ul> <li> <p>LLM\u4e2d\u786e\u5b9e\u5b58\u5728Contextually Sparse</p> <ul> <li>\u5bf9\u4e8eMLP block\u6765\u8bf4\uff0c\u7531\u4e8e\u5176\u4e2d\u7684activation function\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u89c2\u7684\u53d1\u73b0\u5176\u4e2d\u7684contextual sparsity\uff0c\u5373\u548c\u8f93\u5165x\u70b9\u79ef\u6700\u5927\u7684neuron</li> </ul> <ul> <li>\u5bf9\u4e8eattention block\uff0c\u5bf9\u4e8e\u4e0d\u540cInput\u6709\u4e0d\u540c\u7684contextual sparsity<ul> <li>bypass uniform heads(small output norms) and selective \u201cheavy hitter\" heads</li> </ul> </li> </ul> </li> </ul> <ul> <li> <p>self-attention\u662f\u4e00\u4e2a\u805a\u7c7b(clustering)\u7b97\u6cd5\uff1aMean-shift clustering</p> <ul> <li>Mean-shift clustering\uff1a\u4e00\u79cd\u805a\u7c7b\u7b97\u6cd5</li> </ul> <p></p> <p>\u8bc1\u660e\u8fc7\u7a0b\uff0c\u6784\u9020\u4e86\u4e00\u4e2a\u7c7b\u4f3cmean shift\u7b97\u6cd5\u4e2d\u7684\u8ba1\u7b97\u5e73\u5747\u4f4d\u79fb\u5411\u91cf\u7684\u51fd\u6570\\(m_i(y)=\\frac{\\sum_jK_i(x_j,y)x_j}{\\sum_jK_i(xj,y)}\\)\uff0c\u5176\u4e2d\u5b9a\u4e49\\(K_i(x_j,y)=exp(yW_i^Q(W_i^K)^Tx_j)\\)\u6765\u8bc4\u4f30\\(x_j\\)\u548c\\(y\\)\u7684similarity\u3002\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\\(H_i(y)=m_i(y)W_i^V\\)\uff0c\u5f53\\(W_I^V=I\\)\u7684\u65f6\u5019\uff0c\u52a0\u4e0a\u6b8b\u5dee\u8fde\u63a5\uff0c\\(H_i(y)=Norm(y+m_i(y))\\)\uff0c\u663e\u7136\u6709\u4e00\u4e2a\\(y=\\gamma m_i(y)\\)\u7684\u4e0d\u52a8\u70b9\u3002\u4e0emean shift\u4e2d\\(y_{i}^{t+1}=m(y_i^t)\\)\u7684\u4e0d\u52a8\u70b9\\(y_i=m(y_i)\\)\u5341\u5206\u7c7b\u4f3c\u3002\u6240\u4ee5self-attention\u4e00\u76f4\u5728\u505a\u7c7b\u4f3cshift\u7684\u805a\u7c7b\u64cd\u4f5c\u3002</p> </li> </ul> <ul> <li> <p>\u5728\u8fde\u7eed\u7684\u591a\u4e2alayer\u4e4b\u95f4embeddings\u5341\u5206\u76f8\u4f3c\uff0c\u53d8\u5316\u5f88\u6162\u3002\u56e0\u4e3a\u6b8b\u5dee\u8fde\u63a5\u4e2d\\(X\\)\u7684\u6b63\u5219\u9879\u8fdc\u8fdc\u5927\u4e8e\\(F(X)\\)\u5f88\u5927\uff0c\u5bfc\u81f4\\(X+F(X)\\)\u53d8\u5316\u4e0d\u5927</p> <ul> <li>\u8bc1\u660e\u4e86\u5b58\u5728\\(0&lt;\\epsilon_1&lt;\\epsilon_2&lt;1\\)\uff0c\u5bf9\u4e8e\u6b8b\u5dee\u8fde\u63a5\\(y=F(x)+x\\)\uff0c\u5f53\\(F(x)\\)\u662fMLP\u6216\u8005Attention\u65f6\uff0c\u5747\u6709\\(\\epsilon_1\\leq||y-x||_2\\leq \\epsilon_2\\)\uff0c\u5373L2\u8303\u6570\u57280-1\u4e4b\u95f4</li> </ul> </li> </ul> <p>Deja Vu Framework</p> <ul> <li>Sparsity operator for MLP\uff1a\u6240\u6709\u5c42\u7684predictor\u7528\u4e00\u7ec4\u8f93\u5165\u6765\u540c\u65f6\u8bad\u7ec3</li> </ul> <p>\u8f6c\u5316\u4e3aNNS\u95ee\u9898\uff0c\u76ee\u6807\u662f\u5bfb\u627e\u4e0eInput\u4f1a\u4ea7\u751fhigh inner-product\u7684\u795e\u7ecf\u5143\uff0c\u6240\u4ee5\u5c06MLP\u5c42\u7684Contextual sparsity predication\u516c\u5f0f\u5316\u4e3a\u5185\u79ef\u5ea6\u91cf\u4e0b\u7684\u7ecf\u5178NNS\u95ee\u9898\u3002Approximate MaxIP\uff0c\u8fd1\u4f3c\u7684\u6700\u5927\u5185\u79ef\u641c\u7d22\u95ee\u9898</p> <p>Formulation\uff1a\\(c\\in(0,1), \\gamma\\in(0,1)\\)\uff0c\u5728\u5355\u4f4d\u7403\u4e0a\u7ed9\u5b9a\u4e00\u4e2an\u7ef4\u5411\u91cf\u6570\u636e\u96c6\\(W^1\\subset S^{d-1}\\)\uff0c\u76ee\u6807\u662f\u5efa\u7acb\u4e00\u4e2a\u6570\u636e\u7ed3\u6784\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u6ee1\u8db3\\(max_{\\omega\\in W^1}&lt;y,\\omega&gt;\\geq \\gamma\\)\u7684query \\(y\\in S^{d-1}\\)\uff0c\u53ef\u4ee5\u68c0\u7d22\u5230\u4e00\u4e2a\u5411\u91cf\\(z\\in W^1\\)\uff0c\u6ee1\u8db3\\(&lt;y,z&gt;\\geq c\\cdot max_{\\omega\\in W_1}&lt;y,\\omega&gt;\\)\u3002\u7528\u4eba\u8bdd\u6765\u8bf4\u5c31\u662f\uff0c\u901a\u8fc7\u6ee1\u8db3\u6761\u4ef6\\(W^1\\)\u4e2d\u7684\u5411\u91cf\u548c\\(y\\)\u7684\u6700\u5927\u70b9\u79ef\u5927\u4e8e\u67d0\u4e2a\u503c\u65f6\uff0c\u53ef\u4ee5\u5728\\(W^1\\)\u4e2d\u627e\u5230\u548c\\(y\\)\u6709\u6700\u5927\u70b9\u79ef\u7684\\(z\\)\u3002</p> <p>\u53ef\u4ee5\u5c06\\(W^1\\)\u770b\u4f5c\u662f\u7b2c\u4e00\u4e2a\u7ebf\u6027\u5c42\uff0c\\(y\\)\u662finput embedding.</p> <p>\u6bcf\u4e00\u4e2aMLP\u7528\u4e00\u4e2a\u4e24\u5c42\u7684\u5168\u8fde\u63a5\u7f51\u7edc\u6765\u4f5c\u4e3a\u8fd1\u90bb\u641c\u7d22\u65b9\u6cd5\uff0c\u4ece\u800c\u8fdb\u884csparsity prediction\uff0c\u7136\u540e\u518d\u8fdb\u884c\u771f\u6b63\u7684\u9884\u6d4b\u5f97\u5230\u5b50\u96c6\\(S_M\\)</p> <p>\u95ee\u9898\u5982\u4f55\u8bad\u7ec3\u7684</p> <p></p> <ul> <li>Sparsity operator for Attention\uff1a\u6240\u6709\u5c42\u7684predictor\u7528\u4e00\u7ec4\u8f93\u5165\u6765\u540c\u65f6\u8bad\u7ec3</li> </ul> <p>\u540c\u6837\u8f6c\u5316\u4e3aNNS\u95ee\u9898\uff0c\u56e0\u4e3a\u6bcf\u4e2ahead\u90fd\u9488\u5bf9\u4e00\u4e2afeature\u5728\u505amean-shifting\u3002\u7531\u4e8eTransformer\u5177\u6709token-mixing\u7684\u7279\u6027\uff0c\u6240\u4ee5current token embedding\u5c31\u8db3\u591f\u4e86(\u89e3\u51b3\u4e86attention block\u5bf9\u4e4b\u524dtoken\u7684dependency)\uff0c\u901a\u8fc7Input \\(y\\)\u548chead parameters\u7684\u76f8\u4f3c\u6027\u5373\u4e4b\u524d\u7684\\(K_i(x_j,y)\\)\u6765\u505a\u9884\u6d4b\u3002</p> <p>\u5c06\u6bcf\u4e00\u4e2ahead\u770b\u4f5c\u662f\u4e00\u7c7b\uff0c\u90fd\u8fdb\u884c\u4e00\u6b21\u7c7bMLP\u7684Training\u5f97\u5230SP(\u4e00\u4e2a\u4e24\u5c42\u7684\u5168\u8fde\u63a5\u7f51\u7edc)\uff0c\u7136\u540e\u8fdb\u884c\u771f\u6b63\u7684\u9884\u6d4b\u5f97\u5230head\u7684\u5b50\u96c6\\(S_A\\)\u3002</p> <p>\u4e3a\u4e86\u89e3\u51b3\u7f3a\u5c11\u4e4b\u524dtokens KV cache\u7684\u95ee\u9898\uff0c\u5229\u7528\u4e86Generation\u662fI/O bound\u7684\u4e8b\u5b9e\u3002\u5bf9\u4e8e\u9884\u6d4b\u540e\u7684\\(S_A\\)\u548cinput \\(y\\)\uff0c\u76f4\u63a5\u8ba1\u7b97kv\u5b58\u50a8\u5230KV cache\u4e2d\uff0c\u5e76\u4e3a\u5176\u4ed6head\u4fdd\u5b58\u4e00\u4efd\\(y\\)\u7684token embedding\u526f\u672c\u3002\u4e4b\u540e\u7f3a\u5c11\u65f6\uff0c\u76f4\u63a5reload \u5df2\u7ecf\u5b58\u50a8\u7684token embeddings\u5e76\u518d\u6b21\u8ba1\u7b97kv\u5373\u53ef\u3002</p> <ul> <li>Reducing Overhead with Asynchronous Execution</li> </ul> <p>\u4e3a\u4e86\u89e3\u51b3sparsity prediction\u4ecd\u7136\u4f1a\u5e26\u6765latency\u7684\u95ee\u9898\uff0c\u63d0\u51fa\u4e86\u4e00\u4e2aasynchronous look-ahead sparse predition method\uff0c\u5229\u7528\u8fde\u7eedlayer\u4e4b\u95f4\u8f93\u5165\u76f8\u4f3c\u7684\u7279\u6027\u6765\u8fdb\u884ccross-layer prediction</p> <p>\u5c06\u4e0d\u540cTransformer Layer\u4e2d\u7684\u591a\u4e2ablock\u8fdb\u884cparallel sparse prediction\uff0c\u5728\u4e0b\u56fe\u4e2d\u5728\u8ba1\u7b97\u5f53\u524dTf layer\u7684\\(y_l\\)\u65f6\uff0c\u53ef\u4ee5\u8ba1\u7b97\u4e0b\u4e00\u5c42\u7684\\(S_A\\)\u548c\\(S_M\\)</p> <p></p> <ul> <li>Hardware-efficient Implementation<ul> <li>Kernel fusion</li> <li>Memory coalescing</li> </ul> </li> </ul>"},{"location":"paper/DistServe/","title":"DistServe: Disaggregating Prefill and Decoding for Goodput-optimized Large Language Model Serving","text":"<p>\u7b80\u4ecb\uff1a\u5c06Prefill\u548cDecoding\u8ba1\u7b97\u653e\u5230\u4e0d\u540c\u7684GPU\u4e0a\uff0c\u4ece\u800c\u6d88\u9664\u4e86prefill-decoding coupled\u7684\u63a8\u7406\uff0c\u5e76\u5355\u72ec\u4e3a\u6bcf\u4e2a\u9636\u6bb5\u4f18\u5316\u8d44\u6e90\u5206\u914d\u548c\u5e76\u884c\u7b56\u7565\uff0c\u5e76\u8003\u8651\u4e86\u4e24\u4e2a\u9636\u6bb5\u7684\u901a\u4fe1\u5f00\u9500\u3002</p> <p>\u7a0d\u5fae\u5c55\u5f00\uff0c\u7528instance\u6765\u63cf\u8ff0\u7ba1\u7406\u5b8c\u6574\u6a21\u578b\u6743\u91cd\u590d\u5236\u7684\u8d44\u6e90\u7684\u4e00\u4e2a\u5355\u5143\uff0c\u5373\u6709prefill\u548cdecoding\u4e24\u79cdinstance\uff0c\u4e24\u8005\u5206\u522b\u7ba1\u7406\u81ea\u5df1\u7684\u6743\u91cd\u5907\u4efd\u5e76\u8fdb\u884c\u5355\u72ec\u7684\u8ba1\u7b97\uff0cprefill instance\u4f1a\u5728\u751f\u6210\u7b2c\u4e00\u4e2atoken\u540e\uff0c\u628a\u4e2d\u95f4\u751f\u6210\u7684kvcache\u4f20\u9012\u7ed9decoding instance</p> <p>\u4e00\u4e2ainstance\u53ef\u80fd\u4f1a\u88ab\u5206\u914d\u5230\u591a\u4e2aGPU\u4e0a\u6267\u884c\uff0c\u6bcf\u4e2ainstance\u7684resource allocation\u548cparallelism strategy\u90fd\u4e0d\u540c\uff0c\u7531\u4e8edecoding instance\u7684GPU\u5229\u7528\u7387\u8f83\u4f4e\uff0c\u6240\u4ee5\u53ef\u80fd\u4f1a\u5c06\u591a\u4e2aprefill instance\u548c\u4e00\u4e2adecoding instance\u5206\u914d\u5728\u4e00\u8d77\u6765\u63d0\u9ad8GPU\u5229\u7528\u7387</p> <p>Motivation:</p> <ul> <li>\u5728prefill-decoding interference\u4e2d\uff0cprefill step\u901a\u5e38\u8981\u6bd4decoding step\u82b1\u8d39\u65f6\u95f4\u66f4\u591a\uff0c\u56e0\u6b64decoding\u901a\u5e38\u4f1a\u88abprefill\u6240\u5ef6\u8bef\u3002\u5373\u4f7f\u5c06\u4e24\u8005\u5206\u5f00\u6765\u8c03\u5ea6\uff0c\u7531\u4e8e\u8ba1\u7b97\u8d44\u6e90\u7684\u7ade\u4e89\uff0cdecoding task\u7531\u4e8e\u9010\u6e10\u589e\u52a0\u7684queuing delays(prefill tasks)\u4e5f\u4f1a\u53d8\u6162\u3002\u5373\u4f7f\u4f18\u5148\u8c03\u5ea6\u4e24\u8005\u4e2d\u7684\u4efb\u4f55\u4e00\u4e2a\u4e5f\u4e0d\u80fd\u5f88\u597d\u7684\u6ee1\u8db3\u4e24\u8005\u7684\u5ef6\u8fdf\u8981\u6c42</li> <li>\u7531\u4e8eprefill\u548cdecoding\u7684\u8ba1\u7b97\u7279\u6027\uff0c\u4e24\u8005\u5bf9\u4e8e\u5ef6\u8fdf\u8981\u6c42\u4e0d\u540c\uff0c\u6240\u4ee5\u53ef\u80fd\u9002\u5408\u4e0d\u540c\u7684\u5e76\u884c\u6a21\u5f0f\u3002</li> </ul> <p>LLM Serving\u5e38\u7528\u7684\u4f18\u5316\uff1a</p> <ul> <li>Batching: \u5c06new request\u7684prefill\u9636\u6bb5\u548con-going request\u7684decoding\u9636\u6bb5\u8fdb\u884c\u5e76\u884c\uff0c\u9700\u8981\u8003\u8651TTFT\u548cTPOT\u7684\u5e73\u8861\uff0c\u73b0\u5728\u7684\u4e00\u79cd\u5148\u8fdb\u7b56\u7565\u662f\u5c06Prefill\u8fdb\u884csegmenting\uff0c\u7136\u540eattaching decoding jobs\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u662f\u5c06TTFT\u7684\u90e8\u5206\u6362\u6210\u4e86TPOT\u3002</li> <li>Model parallelism: \u6a21\u578b\u5e76\u884c\u901a\u5e38\u662fintra/inter-operator parallelisms\uff0cIntra-operator parallelism\u4e3b\u8981\u6307\u7684\u662f\u5c06\u8ba1\u7b97\u5bc6\u96c6\u578b\u64cd\u4f5c\u5206\u914d\u5230\u591aGPU\u4e0a\u6267\u884c\uff0c\u964d\u4f4e\u4e86execution time\uff0c\u7f3a\u70b9\u5728\u4e8ehigh inter-GPU communication required\u3002Inter-operator parallelism\u4e3b\u8981\u6307\u7684\u662f\u5c06LLM layer\u5206\u6210\u591a\u4e2astage\uff0c\u7136\u540e\u6bcf\u4e2astage\u5206\u914d\u7ed9\u4e00\u4e2aGPU\u6267\u884c\u6765\u7ec4\u6210pipeline\uff0c\u7cfb\u7edf\u7684\u901f\u7387\u57fa\u672c\u5448\u7ebf\u6027\u62d3\u5c55\uff0c\u7f3a\u70b9\u5728\u4e8e\u589e\u52a0\u4e86execution time. \u672c\u6587\u63d0\u51faadditional benefit: \u51cf\u5c11\u4e86prefill\u548cdecoding phase\u7684queuing delay</li> </ul>"},{"location":"paper/DistServe/#tradeoff-analysis","title":"Tradeoff Analysis","text":"<p>\u653e\u5728\u6700\u524d\u9762\uff0c\u5f53model\u53ef\u4ee5\u88c5\u8fdb\u4e00\u5f20GPU\u65f6\uff0creplication\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u9009\u62e9\uff0c\u5373\u6bcf\u5f20\u5361\u6709\u4e00\u4e2a\u6a21\u578b\u7684\u526f\u672c</p> <p>Prefill Instance</p> <ul> <li>Batching: \u8fd9\u662f\u4e00\u4e2acompute-intensive\u7684\u8fc7\u7a0b\uff0c\u5f53GPU\u5df2\u7ecf\u6210\u4e3acompute-bound\u540e\uff0cbatch\u53ea\u4f1a\u589e\u52a0\u603b\u5904\u7406\u65f6\u95f4\u3002\u6240\u4ee5\u63d0\u524d\u5bf9\u7279\u5b9a\u7684LLM\u548cGPU\u8fdb\u884cprofile\uff0c\u5f97\u5230input length\u7684threshold \\(L_M\\)\uff0c\u5f53\u4f4e\u4e8e\u8fd9\u4e2a\u9608\u503c\u65f6\u624d\u4f1a\u505abatch</li> </ul> <ul> <li> <p>Parallelism: profile\u540e\u53d1\u73b0prefill phase\u8868\u73b0\u7684\u6bd4\u8f83\u50cf\u4e00\u4e2aM/D/1 queue\uff0c\u6bd4\u8f83intra\u548cinter parallelism\uff0c\u5728arrival rate\u8f83\u4f4e\u7684\u65f6\u5019\uff0cintra\u7b56\u7565\u7684TTFT\u66f4\u4f4e\uff0c\u968f\u7740rate\u548cqueuing delay\u7684\u589e\u52a0\uff0cinter\u7684TTFT\u66f4\u4f4e\u3002</p> <ul> <li> <p>\u5728single-device without parallelism\u7684\u60c5\u51b5\u4e0b\uff0c</p> <p>\\(Avg\\_TTFT=D+\\frac{RD^2}{2(1-RD)}\\)\uff0c\u5176\u4e2dD\u662f\u8bf7\u6c42\u6267\u884c\u65f6\u95f4\uff0cR\u662f\u6cca\u677e\u5230\u8fbe\u7387(\u5355\u4f4d\u65f6\u95f4\u5185\u8bf7\u6c42\u5230\u8fbe\u7684\u5e73\u5747\u6b21\u6570)\uff0c\u7b2c\u4e8c\u4e2a\u5f0f\u5b50\u4ee3\u8868\u7684\u662f\u6392\u961f\u5ef6\u65f6</p> </li> </ul> <ul> <li> <p>\u57282-way inter-op parallelism\u7684\u60c5\u51b5\u4e0b\uff0c\u5373\u4e24\u4e2a\u9636\u6bb5\u5206\u914d\u5230\u4e0d\u540c\u7684GPU\u4e0a\u8fdb\u884c\uff0c\u5047\u8bbe\u6700\u6162\u7684stage\u82b1\u8d39\\(D_m\\)\u7684\u65f6\u95f4\uff0c\u90a3\u4e48\\(D\\approx D_s\\approx 2\\times D_m\\)</p> <p>\\(Avg\\_TTFT_{inter}=D_s+\\frac{RD_m^2}{2(1-RD_m)}= D+\\frac{RD^2}{4(2-RD)}\\)</p> </li> </ul> <ul> <li> <p>\u5728intra-op parallelism\u7684\u60c5\u51b5\u4e0b\uff0c\u5373\u5c06MM\u7b49\u8ba1\u7b97\u5206\u914d\u5230\u591aGPU\u4e0a\u8fdb\u884c\uff0c\u7531\u4e8e\u901a\u4fe1\u7684overhead\uff0c\\(D\\approx D_s=\\frac{D}{K}\\)\uff0c\u5176\u4e2d\\(1&lt;K&lt;2\\)\uff0c\u8868\u793a\u5e76\u884c\u7b56\u7565\u5e26\u6765\u7684speedup coefficient</p> <p>\\(Avg\\_TTFT_{intra}=\\frac{D}{K}+\\frac{RD^2}{2K(K-RD)}\\)</p> </li> </ul> <ul> <li>\u7ed3\u8bba\uff1a\u5f53TTFT\u7684SLO\u8981\u6c42\u8f83\u9ad8\u7684\u60c5\u51b5\u4e0b\uff0cintra-op parallelism\u6bd4\u8f83\u6709\u6548\uff0c\u5e76\u4e14K\u8d8a\u4f4eTTFT\u8d8a\u4f4e\uff0c\u800cspeedup coefficient K\u4e3b\u8981\u53d7input length\uff0cmodel architecture, communication  bandwidth, placement\u7684\u5f71\u54cd</li> </ul> </li> </ul> <p>Decoding Instance</p> <ul> <li>Batching: \u8fd9\u662f\u4e00\u4e2amemory-bound\u7684\u4efb\u52a1\uff0c\u5728\u5f53\u524d\u7684colocated\u7cfb\u7edf\u4e2d\uff0c\u589e\u52a0decoding batch size\u4f1a\u5e26\u6765\u5ef6\u8fdf\u7684\u589e\u52a0\uff0c\u56e0\u4e3asharing GPUs\u4f1a\u5728\u4e24\u79cd\u4efb\u52a1\u4e4b\u95f4\u4ea7\u751f\u7ade\u4e89\uff0c\u6240\u4ee5\u901a\u5e38\u9700\u8981\u5728TTFT\u548cTPOT\u505a\u4e00\u4e2a\u6743\u8861\u3002\u800c\u5c06\u4e24\u8005\u5206\u79bb\uff0c\u5c31\u53ef\u4ee5\u5c06\u591a\u4e2aprefill instance\u5206\u914d\u7ed9\u4e00\u4e2adecoding instance\uff0c\u4ece\u800c\u53ef\u4ee5\u5728decoding phase\u4e2d\u5728\u7279\u5b9aGPU\u4e0a\u589e\u5927batch size\uff0c\u800c\u4e0d\u7528\u727a\u7272TPOT</li> <li>Parallelism: \u5728\u8fdb\u884cphase\u5206\u79bb\u540e\uff0cdecoding\u9636\u6bb5\u7684batch-size\u4e3b\u8981\u53d7\u9650\u4e8eGPU memory capacity, \u56e0\u4e3aGPU\u9700\u8981\u4e3a\u6240\u6709\u7684active requests\u4fdd\u5b58KV cache\u7b49\u4e2d\u95f4\u6fc0\u6d3b\u503c\u3002\u901a\u8fc7model parallelism\u6216\u8005 advanced memory management techniques\uff0c\u53ef\u4ee5scale the decoding batch size\uff0c\u5f53\u6269\u5c55\u5230\u4e00\u5b9a\u503c\u65f6\uff0c\u5c31\u6210\u4e86compute-bound\u7684\u4efb\u52a1\u3002<ul> <li>\u5bf9\u4e8eIntra-op parallelism\u6765\u8bf4\uff0c\u968f\u7740GPU\u6570\u91cf\u7684\u589e\u52a0\uff0c\u8003\u8651\u5230\u901a\u4fe1\u5f00\u9500\u548c\u5229\u7528\u7387\u4e0b\u964d\uff0cThroughput\u589e\u52a0\u548cLatency\u4e0b\u964d\u7684\u6536\u76ca\u9010\u6e10\u9012\u51cf</li> <li>\u5bf9\u4e8eInter-op parallelism\u6765\u8bf4\uff0cthroughput\u51e0\u4e4e\u662f\u7ebf\u6027\u589e\u52a0\uff0c\u4f46\u662fTPOP\u8f83\u9ad8</li> <li>\u7ed3\u8bba\uff1a\u5f53TPOT\u7684SLO\u8981\u6c42\u8f83\u9ad8\u7684\u60c5\u51b5\u4e0b\uff0c\u4ecd\u7136\u4f7f\u7528Intra-op parallelism\u3002</li> </ul> </li> </ul> <p>Practical Problems</p> <ul> <li>Variable prefill length\uff1a\u5728\u5b9e\u9645\u7684LLM application\u4e2d\uff0c\u6bcf\u4e2arequest\u7684prefill length\u662f\u4e0d\u540c\u7684\uff0c\u90a3\u4e48\u5728\u8fdb\u884cinter-op parallelism\u65f6\uff0cpipeline bubble\u5c31\u4f1a\u4e0d\u53ef\u907f\u514d\u7684\u4ea7\u751f\uff0c\u4ece\u800c\u5bfc\u81f4\u5ef6\u8fdf\u7684\u4e0a\u5347</li> <li>Communication overhead\uff1a\u4e3b\u8981\u662fprefill instance\u5c06KV cache\u4f20\u8f93\u7ed9decoding instance\u7684\u4f20\u8f93\u5ef6\u8fdf\uff0c\u548cInput length\u4ee5\u53caarrival rate\u6210\u6b63\u6bd4\u3002\u6240\u4ee5\u9700\u8981\u8003\u8651prefill \u548cdecoding instance\u7684placement\uff0c\u4e24\u8005\u4e4b\u95f4\u7684\u4f20\u8f93\u5ef6\u8fdf\u662f\u4e0d\u53ef\u5ffd\u7565\u7684\u3002</li> </ul>"},{"location":"paper/DistServe/#distserve-method","title":"DistServe Method","text":"<p>\u901a\u8fc7\u8003\u8651model architecture, workload characteristic, latency requirements, and SLO attainment target\uff0c\u4f1a\u786e\u5b9a\u5982\u4e0b\u4e24\u70b9</p> <ul> <li>Prefill\u548cDecoding instance\u7684\u5e76\u884c\u7b56\u7565</li> <li>\u4e24\u79cdinstance\u7684deployment number\u548cplacement on physical cluster</li> </ul> <p>High Node-Affinity Cluster</p> <p>\u5728\u88c5\u6709IB\u7684\u9ad8\u4f20\u8f93\u6027\u80fd\u96c6\u7fa4\u4e0a\uff0cKV caches\u7684\u4f20\u8f93\u5ef6\u8fdf\u5e26\u6765\u7684\u5f00\u9500\u51e0\u4e4e\u53ef\u4ee5\u5ffd\u7565\uff0c\u6240\u4ee5prefill\u548cdecoding instance\u53ef\u4ee5\u4efb\u610f\u653e\u7f6e\u800c\u6ca1\u6709\u5176\u4ed6\u7684\u9650\u5236\uff0c\u6240\u4ee5\u4f7f\u7528\u4e00\u4e2atwo-level algorithm\uff0c\u9996\u5148\u5206\u522b\u4f18\u5316prefill\u548cdecoding instance\u7684\u5e76\u884c\u914d\u7f6e\uff0c\u4ee5\u83b7\u5f97phase-level optimal\u7684per-gpu goodput\uff0c\u7136\u540e\uff0c\u4f7f\u7528replication\u6765match overall traffic rate.</p> <p>Replication\uff1a\u6307\u7684\u662f\u590d\u5236\u4e4b\u524d\u7684prefill\u548cdecoding instance\u7684\u914d\u7f6e\u5230\u6240\u6709\u8282\u70b9\u4e0a</p> <p></p> <p>\u5728\u8be5\u7b97\u6cd5\u4e2d\uff0c\u76f4\u63a5\u904d\u5386\u4e86\u6240\u6709\u7684\u5e76\u884c\u914d\u7f6e\uff0c\u6bcf\u6b21\u901a\u8fc7\u6a21\u62df\u5668\u5728\u8ba1\u7b97\u5f53\u524d\u7b56\u7565\u7684prefill\u548cdecode\u7684goodput\uff0c\u5e76\u5f97\u5230\u6700\u7ec8\u7684\u6700\u4f73\u914d\u7f6e\u3002\u590d\u6742\u5ea6\u662f\\(O(NM^2)\\)</p> <p>\u5982\u4f55Build Simulator: \u901a\u8fc7\u5206\u6790\u9884\u586b\u5145\u548c\u89e3\u7801\u9636\u6bb5\u7684FLOPs\u548c\u5185\u5b58\u8bbf\u95ee\u6b21\u6570\uff0c\u5e76\u4f7f\u7528latency model\u6765\u8fd1\u4f3c\u63a8\u7406\u6267\u884c\u65f6\u95f4</p> <p>Low Node-Affinity Cluster</p> <p></p> <p>\u5728\u7b97\u6cd52\u4e2d\uff0c\u8003\u8651\u4e86\u5355\u4e2a\u8282\u70b9\u7684GPU\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u901a\u8fc7\u5c06\u6a21\u578b\u4e2d\u4e0d\u540c\u7684Layer\u7ec4\u5408\u6210stage\uff0c\u5e76\u5c06\u6bcf\u4e2ainstance\u5207\u5206\u6210\u4e0d\u540c\u7684segment(maintaining one inter-op stage)\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u5c06Prefill\u548cdecoding\u7684segment\u5212\u5206\u5230\u540c\u4e00\u4e2a\u8282\u70b9\u5185\uff0c\u8ba9\u6fc0\u6d3b\u503c\u7684\u4f20\u8f93\u4ec5\u4f7f\u7528NVLink\u3002\u5728\u8282\u70b9\u5185\uff0c\u5bf9\u4e8e\u540c\u4e00\u4e2ainstance\u7684segment\uff0c\u91c7\u7528\u76f8\u540c\u7684\u5e76\u884c\u548c\u8d44\u6e90\u5206\u914d\u7b56\u7565\u3002</p> <p>\u5728\u8be5\u7b97\u6cd5\u4e2d\uff0c\u9996\u5148\u679a\u4e3e\u6240\u6709\u7684inter-op parallelism degree(the number of segments)\uff0c\u5bf9\u4e8e\u6bcf\u4e2asegment\uff0c\u518d\u679a\u4e3eintra-op config\uff0c\u6700\u540e\u6a21\u62df\u8ba1\u7b97\u5404\u81ea\u7684goodput\u5e76\u6700\u7ec8replicate</p> <p></p> <p>Key Enhancement in Runtime</p> <ul> <li>Reducing pipeline bubbles: \u4e3a\u4e86\u51cf\u5c11non-uniform prompt length\u6240\u5e26\u6765\u7684pipeline bubbles\uff0c\u901a\u8fc7\u6bcf\u4e2abatch\u6240\u4ea7\u751f\u7684new token\u6765\u4f30\u8ba1\u4e00\u4e2abatch\u7684\u771f\u5b9e\u8fd0\u884c\u65f6\u95f4\u3002\u5bf9\u4e8eprefill instance\uff0cprofile\u76ee\u6807\u6a21\u578b\u548cGPU\u6765\u5f97\u5230\u80fd\u6700\u5927\u9650\u5ea6\u6ee1\u8db3GPU\u7684\u5e8f\u5217\u957f\u5ea6\uff0c\u5728\u5206\u914dprefill batch\u7684\u65f6\u5019\u5c3d\u53ef\u80fd\u63a5\u8fd1\u8fd9\u4e2a\u503c\u3002\u800c\u5bf9\u4e8edecoding instance\uff0c\u5219\u76f4\u63a5\u5c06\u8be5\u5e8f\u5217\u957f\u5ea6\u4f5c\u4e3a\u6700\u5927\u7684batch size\u3002</li> </ul> <ul> <li>Combat busrtiness: \u5f53workload\u51fa\u73b0Burst\u65f6\uff0c\u4f1a\u9020\u6210\u5927\u91cf\u7684KV cache\u4f20\u8f93\uff0c\u4e3a\u4e86\u907f\u514d\u6f5c\u5728\u7684memory overload\uff0c\u91c7\u7528\u4e86\u4e00\u79cd'pull'\u7684\u65b9\u5f0f\u6765\u8fdb\u884cKV cacahe transmission\u3002\u5177\u4f53\u6765\u8bb2\uff0c\u91c7\u7528\u7684\u662fdecoding instance\u4eceprefill instance fetch kvcache as needed\u3002\u5e76\u4f7f\u7528prefill instance\u7684GPU memory\u4f5c\u4e3aqueuing buffer\u3002</li> </ul> <ul> <li>Replaning: \u91c7\u7528periodic replanning\uff0c\u5b9a\u671f\u68c0\u67e5workload pattern\u7684\u53d8\u5316\u60c5\u51b5\u5e76\u4f5c\u51fa\u8c03\u6574\u3002\u901a\u8fc7\u4e00\u4e2aworkload profiler\u6765\u76d1\u63a7Key parameters\u7684\u53d8\u5316\u60c5\u51b5\uff0c\u4f8b\u5982the average input and output length, the average arrival rate. </li> </ul>"},{"location":"paper/FastDecode/","title":"FastDecode:High-Throughput GPU-Efficient LLM Serving using Heterogeneous Pipelines","text":"<p>\u7b80\u4ecb\uff1a\u5c06Transformer\u6a21\u578b\u5206\u6210R-Part\u548cS-Part\u4e24\u4e2a\u90e8\u5206\uff0ckey insight\u662f\u5e94\u8be5\u5728CPU\u4e0a\u8ba1\u7b97near KV-cache, \u901a\u8fc7\u4f20\u9012activation tensors\u800c\u4e0d\u662fKV-cache\u6765\u51cf\u5c11data transmission\uff0c\u5b8c\u5168\u5c06KV-cache\u4eceGPU memory\u4e2d\u79fb\u9664\u3002</p> <p>\u4f46\u662f\u8fd9\u6837\u505a\u4f1a\u9762\u4e34\u4e00\u4e9b\u95ee\u9898</p> <ul> <li>\u7ed9CPU\u989d\u5916\u589e\u6dfb\u8ba1\u7b97\u4efb\u52a1\u53ef\u80fd\u4f1a\u51cf\u7f13\u6240\u6709\u4efb\u52a1\u7684\u901f\u5ea6\uff0cCPU-GPU\u4e4b\u95f4\u7684PCIE\u5e26\u5bbd\u8f83\u4f4e</li> <li>\u4e24\u4e2aPart\u4e2d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u53d8\u5316\u6a21\u5f0f\u4e0d\u540c\uff0c\u4ea4\u66ff\u4f7f\u7528CPU-GPU\u8ba1\u7b97\u65f6\uff0c\u4e24\u8005\u901f\u5ea6\u5dee\u8ddd\u5f88\u5927\uff0c\u4e0d\u80fd\u5f88\u597d\u7684\u5168\u9762\u5229\u7528CPU\u548cGPU</li> <li>\u9700\u8981\u5bf9GPU\u548cCPU\u8fdb\u884cCareful orchestration\uff0c\u9700\u8981\u4f7f\u7528\u6700\u5c11\u7684CPU\u540c\u65f6\u80fd\u591f\u6700\u5927\u5316\u7684\u4f7f\u7528GPU\u7684\u8ba1\u7b97\u80fd\u529b</li> </ul> <p>\u672c\u6587\u63d0\u51fa\u4e86\u4ee5\u4e0b\u5de5\u4f5c\uff1a</p> <ul> <li>\u5c06Transformer\u6a21\u578b\u5206\u4e3a\u4e86\u4e24\u4e2a\u90e8\u5206\u6267\u884c\u6765\u63d0\u9ad8performance</li> <li>\u63d0\u51fa\u4e86\u57fa\u4e8eKV-cache\u7684near-memory processing system, \u4f7f\u7528out-of chassis CPUs\u7684\u805a\u5408\u5185\u5b58\u5e26\u5bbd\u6765\u83b7\u5f97\u66f4\u9ad8\u7684\u541e\u5410\u91cf</li> <li>\u63d0\u51fa\u4e86\u4e00\u4e2asequence-level pipeline schedule\u6765\u5e73\u8861\u4e24\u79cd\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u6765\u66f4\u597d\u7684\u4f7f\u7528\u4e24\u79cd\u786c\u4ef6</li> <li>\u5efa\u7acb\u4e86\u4e00\u4e2a\u6027\u80fd\u6a21\u578b\u6765\u4f4d\u4e0d\u540c\u7684model\u548c\u9700\u6c42\u63d0\u4f9b\u6700\u4f73\u7684\u786c\u4ef6\u914d\u7f6e</li> </ul> <p>R-Part: \u6307\u7684\u662f\u548c\u4e4b\u524dtoken\u6709\u5173\u7684auto-regressive\u7684\u8ba1\u7b97\uff0c\u5177\u4f53\u5305\u62ec\u4e86\\(QK, softmax, O_i=\\sum_{j=1}^{i-1}A_{ij}V_j\\)\u7684\u8ba1\u7b97\uff0c\u8fd9\u4e9b\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u81ea\u5df1\u7684KV-cache\uff0c\u57fa\u672c\u4e0d\u53d7\u76ca\u4e8ebatching S-Part: \u6307\u7684\u662fmodel\u5269\u4f59\u7684\uff0c\u6240\u6709\u7684sequence\u5171\u4eab\u76f8\u540c\u53c2\u6570\u7684\u8ba1\u7b97\uff0c\u4e3b\u8981\u5305\u62ec\u4e86\u5168\u8fde\u63a5\u5c42\u7684\u8ba1\u7b97\uff0c\u5f53batch\u7684token\u6570\u589e\u5927\u65f6\uff0cGPU\u5229\u7528\u7387\u4f1a\u63d0\u9ad8</p> <p>\u7531\u4e8eR-Part\u4e3b\u8981\u662fattention\u8ba1\u7b97\uff0c\u662fmemory-bound\u7684\uff0c\u6240\u4ee5\u5e94\u8be5\u5b58\u5728CPU\u7684DRAM\u4e2d\uff0c\u5e76\u7531CPU\u5904\u7406\uff0c\u4f46\u662fCPU\u7684\u901f\u5ea6\u76f8\u5bf9\u8f83\u6162\u4ee5\u53caR-S Part\u4e4b\u95f4\u4f20\u8f93\u901f\u5ea6\u7684\u9650\u5236\u90fd\u5b58\u5728\u95ee\u9898\u3002</p>"},{"location":"paper/FastDecode/#system-overview","title":"System Overview","text":"<p>\u6709\u4e24\u79cdworker\uff0cR-worker\u548cS-worker\uff0cS-worker\u8d1f\u8d23\u5904\u7406S-part\u7684\u4efb\u52a1\uff0c\u6a21\u578b\u7684\u6240\u6709\u6743\u91cd\u90fd\u5728S-worker\u4e0a\uff0c\u5e76\u901a\u8fc7model parallelism\u5206\u5e03\u5230\u591aGPU\u4e0a\uff0c\u548c\u4e00\u822c\u7684token geneartion worker\u76f8\u6bd4\u8f83\u6765\u8bf4batch size\u66f4\u5927\uff0c\u5e76\u4e14\u4e0d\u627f\u62c5attention\u7684\u8ba1\u7b97\u3002</p> <p>\\(Q_i, K_i, V_i\\)\u5728S-part\u4ea7\u751f\u4e4b\u540e\uff0c\u4f1a\u88abS-worker\u53d1\u9001\u5230\u4e0d\u540c\u7684\u5bf9\u5e94R-worker\u4e0a\uff0c\u5e76\u83b7\u53d6\u6700\u7ec8\u7684\u8f93\u51fa\\(O_i\\)\u3002</p> <p>R-worker\u5229\u7528remote CPUs\u8fdb\u884c\u8ba1\u7b97\uff0c\u4e3b\u8981\u8d1f\u8d23\u7684\u5c31\u662f\\(QK, softmax, O_i\\)\u8ba1\u7b97, \u4fdd\u5b58\u5f53\u524d\u5e8f\u5217\u7684KV-cache\u3002\u7531\u4e8eS-worker\u4e0d\u7528\u4fdd\u5b58KV-cache, \u6240\u4ee5batch size\u53ef\u4ee5\u5927\u5e45\u589e\u52a0\uff0c\u4f46\u662f\u8fc7\u5ea6\u589e\u52a0\u4e5f\u4f1a\u8d85\u8fc7GPU\u7684\u8ba1\u7b97\u80fd\u529b\u4ece\u800c\u9020\u6210\u66f4\u5927\u7684\u5ef6\u8fdf\u3002</p> <p>\u4e24\u79cdworker\u4ea4\u66ff\u751f\u6210token(no pipeline)\uff0c\u4e00\u4e2a\u5de5\u4f5c\u5219\u53e6\u4e00\u4e2a\u505c\u6b62\u3002\u6240\u4ee5\u53ef\u4ee5\u91c7\u7528two-stage pipeline\u7684\u5f62\u5f0f\uff0c\u4f46\u662f\u7531\u4e8eworkload\u7684\u5904\u7406\u65f6\u95f4\u4e0d\u540c\uff0c\u6240\u4ee5\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u4ea7\u751fbubble\u3002</p> <p></p>"},{"location":"paper/FastDecode/#sequence-level-load-stabilizing-schedule","title":"Sequence-level Load-Stabilizing Schedule","text":"<p>\u4e3a\u4e86\u89e3\u51b3\u4e0a\u8ff0\u63d0\u5230\u7684bubble\u95ee\u9898\uff0c\u9700\u8981\u77e5\u9053S-part\u7684latency\u8ddfbatch size\u6210\u6b63\u6bd4\uff0cR-part\u7684latency\u8ddf\u603b\u5e8f\u5217\u957f\u5ea6\u6210\u6b63\u6bd4\u3002\u6240\u4ee5\u968f\u7740\u751f\u6210token\u6570\u7684\u589e\u52a0\uff0cR-part\u7684latency\u4e00\u76f4\u5728\u589e\u52a0\u800cS-part\u6ca1\u6709\u53d8\u5316\u3002</p> <p>\u56e0\u6b64\u4e00\u5f00\u59cbS-part\u7684latency\u8f83\u9ad8\u65f6\uff0cR-workers idling, \u5f53\u8fbe\u5230\u67d0\u4e2apoint\u65f6\uff0c\u5c31\u53d8\u6210\u4e86R-part\u7684latency\u8f83\u9ad8\uff0cS-workers idling</p> <p></p> <p>\u5982\u8be5\u56fe\u6240\u793a\uff0c\u76f8\u8f83\u4e8e\u56fa\u5b9a\u7684batch size\uff0c\u4f7f\u7528\u8f83\u5c0f\u7684micro-batches\u6765\u5468\u671f\u6027\u7684\u5904\u7406(F steps)\u3002\u8fd9\u6837\u76f8\u8f83\u4e8e\u539f\u59cb\u7684R-part\uff0c\u540c\u4e00\u65f6\u523b\u7684\u751f\u6210\u7684token\u6570\u66f4\u5c11\uff0c\u56e0\u6b64\u8d1f\u8f7d\u66f4\u5c0f\uff0c\u5e76\u4e14\u8d1f\u8f7d\u4f1a\u9010\u6e10\u589e\u5927\u4fdd\u6301\u7a33\u5b9a</p> <p>B\u4e3a\u539fsequence\u6570\u76ee\uff0cS\u4e3asequence\u957f\u5ea6\uff0cF\u662fstep</p> <p>\u6b64\u65f6\u6700\u5927total sequence length = \\(\\sum_{k=1}^{S/F}MkF=\\frac{B(S+F)}{2}\\approx \\frac{BS}{2}=\\frac{W_{max}}{2}\\)</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u8bf7\u6c42\u5904\u7406\u6765\u8bf4\uff0c\u539f\u5148\u9700\u8981\u7b49\u5f85S steps\u6765\u5904\u7406\uff0c\u73b0\u5728\u53ea\u9700\u8981\u7b49\u5f85F steps.</p> <p>load control algorithm</p> <p></p> <p>\u5728\u8fd9\u4e2a\u7b97\u6cd5\u4e2d\u6709\u4e24\u4e2a\u51fd\u6570\uff0cADDMICROBATCH\u6240\u505a\u7684\u4e8b\u60c5\u662f\u589e\u52a0\u4e00\u4e2a\u65b0\u7684MICROBATCH\u65f6\uff0c\u7ef4\u62a4current micro-batches\u7684\u603bbatch size, ending step index array\u4ee5\u53caworkload array\u3002</p> <p>GETEARILIESTSTEP\u4ee3\u8868\u7684\u662f\u6700\u65e9\u53ef\u4ee5\u542f\u52a8\u8d1f\u8f7d\u7684\u7d22\u5f15\uff0cmicro-batch\u5904\u7406\u5b8c\u6210\u65f6\u523btotal sequence length\u6700\u5927\uff0c\u5373workload\u6b64\u65f6\u8fbe\u5230\u6700\u5927\u3002\u6240\u4ee5\u6bd4\u8f83\u6570\u662f\\(E[i]-x+1\\)\uff0c\u5b83\u7684\u542b\u4e49\u662f\u6700\u5927\u8d1f\u8f7d\u548c\\(W_limit\\)\u7684\u5dee\u8ddd\u9664\u4ee5\\(m\\)\uff0c\u5373\u5728\\(E[i]\\)\u7684\u57fa\u7840\u4e0a\u63d0\u524d\u51e0\u4e2a\u65f6\u523b\u6765\u5f00\u59cbbatch.</p> <p>\u4e3a\u4e86\u9632\u6b62step 0\u65f6\u51fa\u73b0\u8d1f\u8f7d\u5cf0\u503c\uff0c\u5e94\u8be5\u9010\u6e10\u589e\u52a0\\(W_{lim}\\)\u6216\u8005\u4f7f\u7528\u4e00\u4e2afixed \\(F\\)</p>"},{"location":"paper/FastDecode/#workload-balanced-hardware-selection","title":"Workload-balanced Hardware Selection","text":"<p>\u4e3a\u4e86\u5145\u5206\u5229\u7528GPU\u548cCPU\uff0c\u9700\u8981\u786e\u5b9aCPU\u7684\u5177\u4f53\u6570\u91cf\uff0c\u4e0d\u4ea7\u751f\u6d6a\u8d39\u3002</p> <p>\\(B\\)\u4ee3\u8868batch size,\\(P\\)\u4ee3\u8868CPU\u7684\u6570\u91cf\uff0c\\(T(B)\\)\u4ee3\u8868\u4e00\u4e2atransformer block\u5728GPU\u4e0a\u8ba1\u7b97S-part\u7684\u65f6\u95f4\uff0cS\u4ee3\u8868\u7528\u6237\u8bbe\u5b9a\u7684\u6700\u5927\u5e8f\u5217\u957f\u5ea6\uff0cL\u4ee3\u8868\u751f\u6210\u5e8f\u5217\u7684\u9884\u671f\u5ef6\u8fdf</p> <p>\u5047\u8bbepipeline\u4e2dR-part\u7684\u6700\u5927\u5ef6\u8fdf\u548cS-part\u76f8\u7b49\uff0c\u90a3\u4e48\\(N\\) layers\u4e0b\u751f\u6210\u4e00\u4e2atoken\u7684latency\u4e3a\uff1a</p> \\[2NS\\cdot T(B)\\leq L\\] <p>\u5f53Batch size\u8d8a\u5927\u65f6\uff0cthroughput\u8d8a\u5927\uff0c\u4f46\u662f\\(T(B)\\)\u4e5f\u4f1a\u8d8a\u5927\u3002\u800c\u4e14\u5f53B\u8db3\u591f\u5927\u65f6\uff0c\u5e26\u6765\u7684throughput\u5c31\u4f1a\u8d8a\u6765\u8d8a\u5c11\uff0c\u56e0\u6b64\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u5408\u9002\u7684B\u3002</p> <p>\\(E(B)\\)\u662fGPU\u7684throughput efficiency\uff0c\u5f53B\u5f88\u5c0f\u65f6\uff0c\\(E(B)\\)\u589e\u52a0\u7684\u5f88\u5feb\u3002\u5f53B\u8db3\u591f\u5927\u65f6\uff0c\\(E(B)\\)\u589e\u52a0\u4fbf\u4f1a\u51cf\u5c0f\u3002</p> \\[E(B) = \\frac{B}{T(B)}\\] <p>\u7b2c\u4e09\u4e2a\u7ea6\u675f\u6761\u4ef6\u662fCPU\u7684host-side memory capacity\uff0c\u9700\u8981\u8003\u8651\u5230KV cache\u7684\u5927\u5c0f\uff0cC\u662f\u6bcf\u4e2aCPU\u5904\u7406\u7684\u6700\u5927token\u6570\uff0c\u5373\u6ee1\u8db3\uff1a\uff081/2\u6307\u7684\u662f\u4e0a\u8ff0pipeline\u51cf\u5c0f\u5230\u7684\u6700\u5927workload\uff09</p> \\[\\frac{1}{2}BS\\leq CP\\] <p>\u90a3\u5982\u4f55\u786e\u5b9aP\u5462\uff0c\u5047\u8bbe\u4e00\u4e2aCPU\u5904\u7406\u4e00\u4e2atoken\u7684R-part\u7684\u65f6\u95f4\u662fR\uff0c\u9700\u8981\u6ee1\u8db3\uff1a</p> \\[\\frac{BSR}{2P}\\approx T(B) \\Rightarrow P\\approx \\frac{BSR}{2T(B)}=\\frac{1}{2}SRE(B)\\] <p>\u4e00\u4e2a\u7b80\u5355\u5206\u6790\uff0cS-part\u548cfeature\u7ef4\u5ea6h\u6210\u5e73\u65b9\u6b63\u6bd4\uff0cR-part\u548ch\u6210\u6b63\u6bd4\uff0c\u56e0\u6b64P\u548c\\(1/h\\)\u6210\u6b63\u6bd4\uff0c\u5f53\u6a21\u578b\u7279\u5f81\u7ef4\u5ea6\u8f83\u5927\u65f6\uff0cP\u901a\u5e38\u4f1a\u66f4\u5c0f\u3002</p>"},{"location":"paper/GEAR/","title":"GEAR:An Efficient KV Cache Compression Recipe for Near-Lossless Generative Inference of LLM:","text":"<p>Generative Inference with Approximation Error Reduction</p> <p>\u4e09\u4e2a\u6838\u5fc3\u90e8\u5206\uff1a</p> <ul> <li>\u4f7f\u7528uniform quantization\u6765\u91cf\u5316\u5177\u6709similar magnitude\u7684\u4e3b\u8981\u90e8\u5206(outliers\u4ee5\u5916\u7684\u90e8\u5206)\uff0c4 bit</li> <li>\u4f7f\u7528\u4f4e\u79e9\u77e9\u9635\u6765\u8fd1\u4f3c\u91cf\u5316\u6b8b\u5dee</li> <li>\u5f15\u5165\u4e00\u4e2a\u7a00\u758f\u77e9\u9635\uff0c\u8be5\u77e9\u9635\u7531\u53ef\u5ffd\u7565\u4e0d\u8ba1\u7684large magnitude\u6761\u76ee\u7ec4\u6210\uff0c\u4ee5\u5f25\u8865\u8fd9\u4e9b\u5f02\u5e38\u503c\u5f15\u8d77\u7684\u5355\u4e2a\u8bef\u5dee</li> </ul> <p>Minimize\u5982\u4e0b\u7684\u8bef\u5dee\uff1a</p> <p>\\(min_{\\hat D,L,S}||X-\\hat D-L-S||_F\\), \u5176\u4e2d\\(X\\)\u662f\\(K_t,V_t\\)\u4e2d\u7684\u4e00\u4e2atensor\uff0c\\(\\hat D\\)\u662fquantized matrix\uff0c\\(L\\)\u662f\u4f4e\u79e9\u77e9\u9635\uff0c\\(S\\)\u662f\u7a00\u758f\u77e9\u9635\u3002</p> <p>\u90a3\u4e48\u5982\u4f55\u786e\u5b9a\u5404\u4e2a\u77e9\u9635\u5462\uff1a</p> <p>Outlier-reduced quantization</p> <p>\u5728\u8fdb\u884c\u5bf9\\(X\\)\u7684\u91cf\u5316\u524d\uff0c\u53d6\\(\\frac{s}{2}\\%\\)\u7684\u6700\u5927\u548c\u6700\u5c0f\u503c\u51fa\u6765\uff0c\u4ee5full precision\u7684\u5f62\u5f0f\u52a0\u5165\u7a00\u758f\u77e9\u9635\\(S=Filter_s(X)\\)\uff0c\u6240\u4ee5\\(S\\)\u548c\\(\\hat D\\)\u53ef\u4ee5\u5982\u4e0b\u8868\u793a\uff1a</p> <p>\\(Filters(X)_{ij} = \\begin{cases}    X_{ij} &amp; \\text{if } X_{ij} \\text{ in top or bottom} \\\\    0 &amp; \\text{otherwise} \\end{cases}\\)</p> <p>\\(\\hat D=Quant_b(X-S)\\)</p> <p>Low-rank approximation</p> <p>\u7ebf\u6027\u4ee3\u6570</p> <p>SVD\u5206\u89e3\uff1a\u77e9\u9635\u7684\u5947\u5f02\u503c\u5206\u89e3</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u79e9\u4e3a r \u7684\u77e9\u9635 $\\pmb{A}{m \\times n} $\uff0c\u5fc5\u5b58\u5728 m \\times m \u7684\u6b63\u4ea4\u77e9\u9635 \\(\\pmb{U}_{m \\times m}\\) \uff0c $n \\times n $\u7684\u6b63\u4ea4\u77e9\u9635 $\\pmb{V} \\(\uff0c\\) m\\times n $\u7684\u77e9\u9635 $\\pmb{\\Sigma}_{m \\times n} $\uff0c\u4f7f\u5f97 </p> <p>\\(\\pmb{A}_{m \\times n} = \\pmb{U}_{m \\times m} \\pmb{\\Sigma}_{m \\times n} \\pmb{V}^T_{n \\times n} = \\pmb{U}_{m \\times m} \\begin{pmatrix} \\pmb{D}_{r \\times r} &amp; \\pmb{O} \\\\ \\pmb{O} &amp; \\pmb{O} \\end{pmatrix}_{m \\times n} \\pmb{V}^T_{n \\times n} \\\\\\\\ \\tag{9}\\)</p> <p>\u5176\u4e2d\uff0c $\\pmb{D}{r \\times r} = \\begin{pmatrix} \\sqrt{\\lambda_1} \\ &amp; \\sqrt{\\lambda_2} \\ &amp; &amp; \\ddots \\ &amp; &amp; &amp; \\sqrt{\\lambda_r} \\end{pmatrix} $\uff0c $\\lambda_1 \\geq \\lambda_2 \\geq... \\geq \\lambda_r &gt;0 $\u4e3a \\(\\pmb{A}^T\\pmb{A}\\) \u7684 r \u4e2a\u975e\u96f6\u7279\u5f81\u503c\uff08\u4ece\u5927\u5230\u5c0f\u6392\u5217\uff09\u3002 \\(\\pmb{A}^T\\pmb{A}\\) \u7684 r \u4e2a\u975e\u96f6\u7279\u5f81\u503c\u5f00\u6839\u53f7 $\\sqrt{\\lambda_1}, \\sqrt{\\lambda_2} , \\cdots, \\sqrt{\\lambda_r} $\uff08\u4ece\u5927\u5230\u5c0f\u6392\u5217\uff09\u79f0\u4e3a \\(\\pmb{A} \\(\u7684**\u6b63\u5947\u5f02\u503c**\uff0c\\)\\pmb{A}^T\\pmb{A}\\)\u7684 n \u4e2a\u7279\u5f81\u503c\u5f00\u6839\u53f7 \\(\\sqrt{\\lambda_1}, \\sqrt{\\lambda_2} , \\cdots, \\sqrt{\\lambda_r},0_1,0_2, \\cdots,0_{n-r} \\(\uff08\u4ece\u5927\u5230\u5c0f\u6392\u5217\uff09\u79f0\u4e3a\\) \\pmb{A}\\) \u7684\u5947\u5f02\u503c\u3002</p> <p>QR\u5206\u89e3\uff1a\u77e9\u9635\u7684\u6b63\u4ea4\u4e09\u89d2\u5206\u89e3</p> <p>\u8bbe$ \\pmb{A}_{m \\times n} $\u7684\u79e9\u4e3a n \uff0c\u5219 $\\pmb{A} $\u53ef\u4ee5\u552f\u4e00\u5730\u5206\u89e3\u4e3a</p> <p>\\(\\pmb{A}_{m \\times n} = \\pmb{Q}_{m \\times n} \\pmb{R}_{n \\times n} \\\\\\\\ \\tag{8}\\)</p> <p>\u5176\u4e2d\uff0c $\\pmb{Q}{m \\times n} \\(\u662f**\u6807\u51c6\u6b63\u4ea4\u5411\u91cf\u7ec4\u77e9\u9635**\uff0c\\) \\pmb{R} $\u662f\u6b63\u7ebf\u4e0a\u4e09\u89d2\u9635\u3002</p> <p>\u5bf9\u4e8eresidual \\(R=X-(\\hat D+S)\\)\uff0c\u901a\u8fc7\u89c2\u5bdf\u5230\u6b8b\u5dee\u77e9\u9635\u7684\u503c\u5728\u5947\u5f02\u503c\u7684index\u589e\u5927\u7684\u65f6\u5019\u6709\u660e\u663e\u7684\u4e0b\u964d\uff0c\u53ef\u4ee5\u63a8\u6d4b\u51fa\u6b8b\u5dee\u4e2d\u5b58\u5728coherent component\uff0c\u5e76\u7531top singular values/vectors\u7ec4\u6210\u3002\u901a\u8fc7\u8fd9\u4e9b\u90e8\u5206\uff0c\u53ef\u4ee5\u6709\u6548\u7684\u5bf9\u6b8b\u5dee\\(R\\)\u8fdb\u884c\u8fd1\u4f3c\uff0c\u4e5f\u5c31\u662f\uff1a</p> <p>\\(L=AB^T=SVDSolver_r(R)\\)\uff0c\u5176\u4e2d\\(A\\in R^{n\\times r},B \\in R^{d\\times r}\\)\uff0c\u901a\u8fc7\u4e00\u4e2a\u7b97\u6cd5\u6765\u5f97\u5230top-r singular values/vectors \\(\\sum^{k}_{i=1}\\sigma_iu_im_i^T\\)\uff0c\u5176\u4e2d\\(\\sigma_i\\)\u662f\\(R\\)\u7684\u5947\u5f02\u503c\uff0c\\(u_i\\), \\(m_i\\)\u662f\u5bf9\u5e94\u7684\u5947\u5f02\u5411\u91cf\u3002</p> <p></p> <p>GEAR Algorithm Overriew</p> <p></p> <p>Hyper-param Choice</p> <ul> <li> <p>outlier-reduced quantization</p> <p>\u5728\u539f\u6587\u4e2dsparsity ratio \\(s\\in \\{5\\%,10\\%\\}\\)\uff0ccompression ratio \\(r = \\dfrac{1}{\\frac{b}{16}+3s}\\)</p> </li> </ul> <ul> <li> <p>low rank approximation</p> <p>\u4f46\u662f\u5728GEAR\u4e2dsparsity ratio \\(s\\in \\{1\\%,2\\%\\}\\), \u56e0\u4e3a\u6709\\(L\\)\u77e9\u9635\u51cf\u5c11\u4e86\u8bef\u5dee\u3002low-rank ratio \\(\\rho \\in \\{2\\%,5\\%\\}\\), rank \\(L=\\dfrac{1}{\\frac{b}{16}+3s+\\frac{n+d}{max(n,d)}\\rho}\\)</p> </li> </ul>"},{"location":"paper/LUT-NN/","title":"LUT-NN: Empower Efficient Neural Network Inference with Centroid Learning and Table Lookup","text":"<p>\u5177\u4f53\u5305\u62ec\u4e24\u4e2a\u65b9\u9762\uff1a</p> <ul> <li>\u901a\u8fc7\u53cd\u5411\u4f20\u64ad\u7684\u53ef\u5fae\u8d28\u5fc3\u5b66\u4e60\uff0c\u91c7\u7528\u4e09\u4e2a\u8fd1\u4f3c\u7ea7\u522b\u6765\u51cf\u5c11\u7cbe\u5ea6\u5f71\u54cd</li> <li>Table Lookup Inference Execuation\uff0c\u8003\u8651\u4e0d\u540c\u7ea7\u522b\u7684\u5e76\u884c\u6027\uff0c\u5185\u5b58\u8bbf\u95ee\u548c\u4e13\u7528\u786c\u4ef6</li> </ul> <p>\u5b58\u5728\u7684\u95ee\u9898\uff1a\u7cbe\u5ea6\u4e0b\u964d\u6bd4\u8f83\u4e25\u91cd\uff0c\u539f\u56e0\u5728\u4e8e\u91c7\u7528\u7684PQ(Product Quantization)\u548cDNN\u7684\u4f18\u5316\u76ee\u6807\u4e0d\u540c\uff0c\u524d\u8005\u5728\u4e8e\u6700\u5c0f\u5316centroid\u548cvector\u4e4b\u95f4\u7684error\uff0c\u800c\u540e\u8005\u5728\u4e8e\u6700\u5c0f\u5316final loss function\uff0c\u4e24\u8005\u4e4b\u95f4\u6ca1\u6709\u76f4\u63a5\u8054\u7cfb\u3002</p> <p>\u5173\u952e\u5728\u4e8e\u5c06model loss\u53cd\u5411\u4f20\u64ad\u4f20\u9012\u7ed9\u6bcf\u4e2aoperator\uff0c\u7136\u540e\u901a\u8fc7\u4f20\u6765\u7684\u68af\u5ea6\u8c03\u6574centroid\u6765\u964d\u4f4emodel loss\u3002\u4f46\u662f\u627ecentroid\u7684\u8fc7\u7a0b\u662f\u4e0d\u53ef\u5fae\u7684\uff0c\u672c\u6587\u63d0\u51fa\u7684\u89e3\u51b3\u65b9\u6cd5\u662f\uff1athree levels approximation by centroids to inference by three methods</p> <ul> <li>\u4f7f\u7528soft-PQ\u6765\u5141\u8bb8\u68af\u5ea6\u8ba1\u7b97\u548c\u8fed\u4ee3\u8c03\u6574centroid\uff0c\u5373\u5bf9\u4e8eargmax\u505a\u4e86\u8fd1\u4f3c\u66ff\u6362\uff1a\u5728\u53cd\u5411\u4f20\u64ad\u65f6\u4f7f\u7528softmax\u6765\u66ff\u6362\uff0c\u524d\u5411\u4f20\u64ad\u4f9d\u65e7\u4e0d\u53d8(argmin)</li> <li>\u4f7f\u7528learned temperature method\u6765\u5b66\u4e60\u6bcf\u4e2aoperator\u4e2dargmax\u7684\u8d85\u53c2\u6570\uff0c\u5e73\u8861\u7cbe\u5ea6\u4e0b\u964d\u548c\u6536\u655b\u901f\u5ea6</li> <li>\u4f7f\u7528scalar quantization\uff0c\u5bf9\u4e8ePre-computed lookup tables\uff0c\u4f7f\u7528\u6807\u91cf\u91cf\u5316\u6765\u51cf\u5c11\u5b58\u50a8\u9700\u6c42\uff0c\u5728\u524d\u5411\u4f20\u64ad\u4e2d\u4f7f\u7528quantized tables\uff0c\u53cd\u5411\u4f20\u64ad\u4e2d\u4f7f\u7528\u771f\u5b9etable</li> </ul> <p>Product Quantization: \u76f8\u8f83\u4e8e\u4e0a\u6587\uff0c\u8fd9\u91cc\u63d0\u4f9b\u4e86\u4e00\u4e9b\u8868\u8fbe\u5f0f</p> <ul> <li>Centroid learning\uff1a \u76ee\u6807\u662f\u6700\u5c0f\u5316\\(argmin \\sum_c \\sum_i ||\\hat A_i^c-P_k^c||^2\\)\uff0c</li> <li>Sub-vector Decoding: \\(g^c(a^c)=argmin_k||a^c-P_k^c||^2\\)\uff0c\u8fd9\u5c31\u662f\u5bf9\u4e8e\u67d0\u4e2asub_vector\u7684\u7f16\u7801\u51fd\u6570\uff0c\u5b9e\u9645\u5728\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u5c06\u4e00\u4e2asub-vector\u7528\u6700\u8fd1\u7684centroid\u8fdb\u884c\u4e86\u7f16\u7801<ul> <li>Hash based encoding: \u4e3a\u4e86\u51cf\u5c0fencoding\u7684cost\uff0c\u91c7\u7528hashing\u65b9\u5f0f\u6765\u7f16\u7801\uff0c\u5c06\u67d0\u4e2asub-vector\u4e22\u5230one of K buckets\u4e2d</li> </ul> </li> </ul> <p>Construct lookup Table:</p> <ul> <li>\u5373element-wise multiplication\uff0cCodebook\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u548c\u5bf9\u5e94Weights\u4e2d\u7684\u503c\u76f8\u4e58\u5f97\u5230\u6700\u7ec8\u7684table</li> <li>\u5bf9\u4e8eWeight\u4e2d\u7684\u67d0\u4e2a\u5143\u7d20\\(b^c\\): \\(h^c(b^c)=[P_0^c\\cdot b^c,P_1^c\\cdot b^c, \\cdots,P^c_{K-1}\\cdot b^c ]\\)</li> <li>MM\u8fd1\u4f3c\uff1a\\(a\\cdot b=\\sum_ca^cb^c\\approx\\sum_cg^c(a^c)\\cdot h^c(b^c)\\),  \\(g^c(a^c)=onehot(argmin_k||a^c-P_k^c||^2)=(0,...,0,1,...,0)\\)</li> </ul> <p></p> <p>\u91cf\u5316\u7d22\u5f15\uff1aScalar Quantization\u6807\u91cf\u91cf\u5316 </p> <p>eLUT-NN: \u5728PIM-DL\u4e2d\u662f\u91c7\u53d6\u4e86Reconstruction Loss\uff0c\u6536\u96c6\u4e86\u6240\u6709\u88ab\u66ff\u6362Layer\u7684error\u548c\u539f\u59cb\u7684model loss\u6765\u6784\u5efaLUT-NN's \u6821\u51c6\u635f\u5931\\(L\\), \u76f8\u8f83\u4e8e\u672c\u6587\u7b97\u6cd5\u4f7f\u7528\u7684calibration dataset\u66f4\u5c11\u5e76\u4e14\u53ef\u4ee5\u66ff\u6362\u6240\u6709\u7684Layers.</p> <p>\\(L=\\text{Model Loss}+\\beta\\sum_{l\\in L}||\\hat{A_l}W-A_lW||^2\\)\uff0c\u5e76\u901a\u8fc7STE\u6765\u8fdb\u884c\u68af\u5ea6\u4f20\u64ad\uff0c\u907f\u514d\u4e86K-means\u4e0d\u53ef\u5fae\u7684\u95ee\u9898</p>"},{"location":"paper/LUT-NN/#differentiable-centroid-learning","title":"Differentiable Centroid Learning","text":"<p>Backpropagation through soft-PQ</p> <p>\u672c\u6765\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0cencoding\u4f7f\u7528\u7684\u662fargmax\uff0c\u6539\u7528\u53ef\u5fae\u7684softmax\uff0c\\(\\hat g^c(a^c)=softmax(-||a^c-P_k^c||^2/t)\\)</p> <p>encoding\u7684\u5b9e\u8d28\u8fc7\u7a0b\u5c31\u662f\u5c06\u4e00\u4e2a\u786e\u5b9a\u7684onehot sub-vector\u8f6c\u6362\u4e3aprobability vector\uff0c\u6700\u5927\u7684\u6982\u7387\u4ee3\u8868\u6700\u8fd1\u7684centroid</p> <p>\u5bf9\u4e8e\u4e00\u4e2aVector\uff0csoftmax\u4f1a\u8ba1\u7b97K\u4e2adistance\uff0cdistance\u8d8a\u5c0f\uff0csoftmax\u8ba1\u7b97\u51fa\u7684\u53ef\u80fd\u6027\u5c31\u8d8a\u5927\uff08\u52a0\u4e86\u8d1f\u53f7\uff09\u3002</p> <p>\u6b64\u65f6\\(a^cb^c=\\hat g^c(a^c)\\cdot h^c(b^c)-sg(\\hat g^c(a^c)\\cdot h^c(b^c)- g^c(a^c)\\cdot h^c(b^c))\\), \\(sg\\)\u7684\u4f5c\u7528\u662f\u9009\u62e9\u4f7f\u7528softmax\u8fd8\u662fargmin, \u4f7f\u7528argmin\u65f6\u91c7\u7528onehot\uff0c\u5373\u5728\u8ba1\u7b97\u539f\u59cb\u77e9\u9635\u548ccodebooks\u4e4b\u95f4\u7684\u8ddd\u79bb\u65f6\u9009\u53d6distance\u6700\u5c0f\u7684centroid\u7f6e\u4e3a1\uff0c\u7136\u540e\u4eceLUT\u4e2d\u9009\u53d6\u5217\u4e2d\u5bf9\u5e94\u8303\u56f4\u5185\u503c\u4e3a1\u5bf9\u5e94\u7684\u90a3\u4e2a\u5143\u7d20\u4f5c\u4e3a\u7ed3\u679c\uff0c\u5373\u5bf9\u4e8e\u4e00\u4e2a\\(V\\times1\\)\u7684tile\uff0c\u9700\u8981\u5728\u5217\u4e2d\u95f4\u65ad\u7684\u9009\u53d6F\u4e2a\u5143\u7d20\uff0cF\u662fWeight matrix\u7684row\u7ef4\u5ea6</p> <p>Learned Temperature  Method</p> <p>\\(softmax(x)_i=\\dfrac{exp(x_i/t)}{\\sum_{k=1}^Kexp(x_k/t)}\\)\uff0ct\u8d8a\u8d8b\u8fd1\u4e8e0\uff0c\u7ed3\u679c\u8d8a\u8d8b\u5411\u4e8eonehot(argmax(x))\uff0ct\u8d8a\u8d8b\u8fd1\u4e8e1\uff0c\u7ed3\u679c\u8d8a\u8d8b\u5411\u4e8e\\(1/K\\)\u5373\u5747\u5300\u5206\u5e03\uff0ct\u8d8a\u5927\u65b9\u5dee\u8d8a\u5c0f\uff0c\u4f46\u662fapproximation error\u8d8a\u5927\uff0c\u6240\u4ee5\u9700\u8981\u4e00\u4e2a\u5408\u7406\u7684\\(t\\), \u8fd9\u4e2at\u4e5f\u4f1a\u5728\u53cd\u5411\u4f20\u64ad\u4e2d\u901a\u8fc7\u5b66\u4e60\u5f97\u5230</p> <p>Scalar quantized lookup table</p> <p>\u524d\u5411\u4f20\u64ad\u65f6\u4f7f\u7528quantized value\uff0c\u53cd\u5411\u4f20\u64ad\u65f6\u4f7f\u7528real value\uff0c\u4ece\u800c\u53ef\u4ee5\u5728\u53cd\u5411\u4f20\u64ad\u65f6\u5bf9LUT\u8fdb\u884c\u8c03\u6574</p>"},{"location":"paper/LUT-NN/#table-lookup-inference-design","title":"TABLE LOOKUP INFERENCE DESIGN","text":"<p>\u5177\u4f53\u5206\u4e3a\u4e09\u4e2a\u90e8\u5206\uff1aClosed Centroid Search, Table read and Accumation</p> <p>Closed Centroid Search</p> <p>\u5728CCS\u4e2d\uff0c\u7531\u4e8einput sensor\u7684\u884c\u6570\u901a\u5e38\u8fdc\u8fdc\u5927\u4e8e\u5217\u6570\uff0c\u56e0\u6b64\\(N\\gg V \\ \\text{and}\\ N\\gg K\\), V\u548cK\u5206\u522b\u662fsub-vector length\u548ccodebook number\uff0c\u6240\u6709\\(operation \\ intensity = \\frac{2NVK}{NV+VK+NK}=\\frac{2}{1/K+1/V}\\)\uff0c\u800c\u6b63\u5e38\u60c5\u51b5\u4e0bK\u548cV\u90fd\u5f88\u5c0f\uff0c\u56e0\u6b64operation intensity\u5f88\u5c0f\uff0c\u90a3\u4e48distance computation\u5c31\u53d8\u6210\u4e86\u4e00\u4e2amemory-bound\u7684\u95ee\u9898\u3002</p> <p>\u8bbe\u8ba1\u4e86\u4e00\u4e2acentroid-stationary algorithm\uff0c\u4f5c\u7528\u662f\u5c06centroid matrices\u5c3d\u53ef\u80fd\u957f\u65f6\u95f4\u7684\u4fdd\u5b58\u5728register\u548ccache\u4e2d\uff0c\u901a\u8fc7\u4e3a\u6bcf\u4e2acodebook\u5728cache\u4e2d\u4fdd\u5b58K\u4e2acentroid\u5728inner loop\u4e2d\uff0c\u4f7f\u5f97\u53ea\u7528\u4eceDRAM\u4e2d\u8bfb\u53d6\u8fd9\u4e9bcentroid\u4e00\u6b21\u3002</p> <p>\u7531\u4e8e\u5728codebook\u4e2d\u6bd4\u8f83\u627e\u51fanearest centroid\u662f\u4e00\u4e2adata-dependency\u7684\u8fc7\u7a0b\uff0c\u56e0\u6b64\u96be\u4ee5\u5e76\u884c\u3002\u4f46\u662f\u53ef\u4ee5\u5c06codebook\u5212\u5206\u4e3a\u591a\u4e2asub-codebook\uff0c\u7136\u540e\u5728\u6bcf\u4e2asub-codebook\u5185\u4ee5\u53casub-codebook\u4e4b\u95f4\u8fdb\u884c\u6bd4\u8f83\uff0c\u5c31\u53ef\u4ee5\u505a\u5230\u5e76\u884c\u3002</p> <p>Table Read and Accumulation</p> <p>\u4f7f\u7528\u5411\u91cf\u5316\u6307\u4ee4\u52a0\u901ftable read(SIMD SHUFFLE)\uff0c\u6765\u51cf\u5c11table read\u7684overhead</p> <p>\u4e3a\u4e86\u5c3d\u53ef\u80fd\u7684\u4f7f\u7528SIMD lanes(\u5373SIMD instruction\u4e2d\u5e76\u884c\u5904\u7406\u5355\u5143\u7684\u6570\u91cf)\uff0cK=16\uff0c\u5e76\u4e14\u9996\u5148\u7528INT16\u5bf9\u7ed3\u679c\u8fdb\u884caccumulate\uff0c\u7136\u540e\u518d\u4f7f\u7528INT32\u907f\u514d\u6ea2\u51fa  </p>"},{"location":"paper/Mooncake/","title":"Mooncake: A KVCache-centric Disaggregated Architecture for LLM Serving","text":"<p>\u7b80\u4ecb\uff1a</p>"},{"location":"paper/PIM_DL/","title":"PIM-DL: Expanding the Applicability of Commodity DRAM-PIMs for Deep Learning via Algorithm-System Co-Optimization","text":"<p>\u4e09\u70b9\u6838\u5fc3\u8d21\u732e\uff1a</p> <ul> <li>PIM-DL: \u63d0\u51fa\u4e86\u7b2c\u4e00\u4e2a\u5728DRAM-PIMS\u4e0a\u7684DL\u6846\u67b6\uff0c\u4f7f\u7528 LUT-based deep-learning paradigm</li> </ul> <ul> <li>\u63d0\u51fa\u4e86\u589e\u5f3a\u7684LUT-NN\u7b97\u6cd5\u6765\u8fdb\u884c\u6a21\u578b\u6821\u51c6</li> <li>\u8bbe\u8ba1\u4e86LUT-NN\u5728DRAM-PIM\u4e0a\u7684\u6620\u5c04\uff0c\u5e76\u5bf9\u6570\u636e\u6d41\u8fdb\u884c\u5b9a\u91cf\u5efa\u6a21\u3002\u63d0\u51fa\u4e86\u4e00\u4e2aAuto-tuning\u6846\u67b6\u6765\u4f18\u5316\u5728\u4e0d\u540cDRAM-PIM\u5e73\u53f0\u4e0a\u7684\u6620\u5c04</li> </ul>"},{"location":"paper/PIM_DL/#elut-nn","title":"eLUT-NN:","text":"<p>\u5bf9\u4e8e\u67d0\u4e00\u5c42\uff0cdifferent input activation matrices\u7684features\u5177\u6709\u5757\u8bed\u4e49\u76f8\u4f3c\u6027\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u8fd9\u4e9b\u79f0\u4e3acentroids\u7684\u7279\u5f81\u6765\u8fd1\u4f3c\u6574\u4e2a\u77e9\u9635\uff0c\u800c\u539f\u672c\u7684GEMM\u64cd\u4f5c\u53ef\u4ee5\u8f6c\u5316\u4e3acentroids\u548cweight\u7684\u4e58\u6cd5\u3002</p> <p>\u901a\u8fc7\u63d0\u524d\u5f97\u5230centroids\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u63d0\u524d\u8ba1\u7b97\u51facentroid\u548c\u5bf9\u5e94weight\u7684\u503c(\u79f0\u4e3apartial-sums)\u5e76\u5b58\u5165\u5230_look-up tables_\u3002\u5728Inference\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u4ec5\u9700\u6839\u636e\u548c\u5f53\u524dInput\u6700\u63a5\u8fd1\u7684centroids' indices\u4eceLUTs\u4e2d\u53d6\u51faPre-computed data\uff0c\u518d\u8fdb\u884creduction\u5c31\u53ef\u4ee5\u5f97\u5230\u539f\u5148GEMM\u7684\u7ed3\u679c\u3002</p>"},{"location":"paper/PIM_DL/#lut-nn-conversion","title":"LUT-NN Conversion","text":"<p>\u5047\u8bbeActivation Matrices\u5927\u5c0f\u662f\\(M\\times H\\)\u3002</p> <ol> <li>\u6cbf\u7740\\(H\\)\u7ef4\u5ea6\uff0c\u6211\u4eec\u5c06\u5176\u5206\u6210\\(1\\times V\\)\u7684\u5b50\u5411\u91cf\uff0c\u56e0\u6b64\u6bcf\u4e00\u884c\u4f1a\u5f97\u5230\\(\\frac{H}{V}\\)\u4e2a\u5b50\u5411\u91cf\u3002\u7136\u540e\uff0c\u5bf9\u8fd9M\u4e2a\u5411\u91cf(within the column, then what's mean across activation matrices)\u6267\u884cK-means\u7b97\u6cd5\uff0c\u5f97\u5230\u56db\u4e2acentroid\u5411\u91cf\uff0c\u79f0\u4f5ccodebook\u3002</li> <li>\u5c06Weight matrix(\\(F\\times H\\))\u6cbf\u7740\\(H\\)\u7ef4\u5ea6\u5206\u89e3\u6210\\(F\\times V\\)\u7684\u5b50\u5411\u91cf\uff0c\u7136\u540e\u4e0e\u5bf9\u5e94\u7684codebook\u4e2d\u7684\u5411\u91cf\u8fdb\u884cinner-products(\u5411\u91cf\u70b9\u4e58)\uff0c\u56db\u4e2a\u5411\u91cf\u4f1a\u4ea7\u751f\u56db\u4e2aLUT\uff0c\u5927\u5c0f\u662f\\(F\\times \\frac{H}{V}\\)</li> </ol>"},{"location":"paper/PIM_DL/#lut-nn-inference","title":"LUT-NN Inference","text":"<ol> <li>Inference\u8fc7\u7a0b\u4e2d\uff0c\u5bf9\u4e8eInput activation matrix\uff0c\u5c06\u5176\u5206\u89e3\u6210\\(\\frac{H}{V}\\)\u4e2a\\(1\\times V\\)\u7684tiles\uff0c\u5c06\u6bcf\u4e2atile\u4e2d\u7684vector\u4e0e\u5bf9\u5e94\u7684codebook\u4e2d\u7684centroid\u8fdb\u884c\u70b9\u4e58\u5e76\u627e\u5230\u6700\u5c0f\u503c(closest L2-distance with inner products)\u3002</li> <li>\u6839\u636e\u6700\u5c0f\u503c\u5bf9\u5e94\u7684centroid\u7684index\uff0c\u4ece\u5bf9\u5e94\u7684LUT(codebook\u4e2d\u6bcf\u4e2acentroid\u5bf9\u5e94\u4e00\u4e2aLUT)\u4e2d\u8bfb\u51fa\u4e00\u5217\u6570\u636e\u3002</li> <li>\u5bf9\u4e8e\u77e9\u9635\u7684\u6bcf\u4e00\u884c\uff0c\u4eceLUT\u4e2d\u627e\u5230\u7684\\(F\\times 1\\)\u7684\u5411\u91cf\u8fdb\u884caccumulate\u5f97\u5230\u672c\u884c\u6700\u7ec8\u8ba1\u7b97\u7ed3\u679c\u3002\u904d\u5386\u6240\u6709\u884c\u5c06\u6240\u6709\u884c\u7684\u7ed3\u679c\u62fc\u63a5\u8d77\u6765\uff0c\u5c31\u5f97\u5230\u4e86\\(F\\times M(N)\\)\u7684\u7ed3\u679c</li> </ol> <p>\u8ba1\u7b97\u53d8\u5316\uff1a</p> <ul> <li>GEMM: \\(N\\times H\\)\u7684\u77e9\u9635\u548c\\(H\\times F\\)\u7684\u77e9\u9635\u76f8\u4e58\uff0c\u9700\u8981\\(2NHF\\)\u7684\u8ba1\u7b97\uff0c\\(NHF\\)\u662f\u4e58\u6cd5\uff0c\\(NHF\\)\u662f\u52a0\u6cd5</li> <li>LUT-NN: <ul> <li>Index Calculation: \\(3\\times N\\times \\frac{H}{V} \\times V \\times CT=3NH\\times CT\\)\uff0c\u52a0\u6cd5\u4e58\u6cd5\u548cMin</li> <li>Result Accumulation: \\(N \\times \\frac{H}{V}\\times F\\), \u52a0\u6cd5\u64cd\u4f5c</li> </ul> </li> </ul>"},{"location":"paper/PIM_DL/#pim-dl-framework","title":"PIM-DL Framework","text":"<p>\u4ece\u4e0b\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\uff0cPIM-DL Framework\u7531\u4e09\u90e8\u5206\u7ec4\u6210\uff0cLUT-NN Converter\uff0cAuto-tuner\u548cInference Engine\u7ec4\u6210\u3002\u89e3\u51b3\u4e86\u5f53\u524d\u7684LUT-NN\u66ff\u6362\u7cbe\u5ea6\u4e0d\u9ad8\uff0c\u4e0d\u540c\u786c\u4ef6\u7279\u6027\u4e0d\u540c\u4ee5\u53ca\u6ca1\u6709\u540c\u65f6\u652f\u6301CPU/GPU\u548cDRAM-PIM DL serving\u6846\u67b6\u7684\u95ee\u9898</p> <p></p>"},{"location":"paper/PIM_DL/#lut-nn-converter","title":"LUT-NN Converter","text":"<p>eLUT-NN\u6821\u51c6\u7b97\u6cd5: High data efficiency and High model accuracy\uff0c\u4f7f\u7528\u4e24\u4e2a\u6280\u672f\u6765\u8fdb\u884c\u6a21\u578b\u6821\u51c6\uff0cHigh data efficiency and  High model accuracy</p> <ul> <li>Reconstruction Loss for computation approximation</li> <li>Straight Through Estimator for gradient propagation.</li> </ul> <p>Reconstruction Loss for computation approximation</p> <p>Reconstruction Loss\u6536\u96c6\u4e86\u6240\u6709\u88ab\u66ff\u6362Layer\u7684error\u548c\u539f\u59cb\u7684model loss\u6765\u6784\u5efaLUT-NN's \u6821\u51c6\u635f\u5931L: </p> <p>\\(L=\\text{Model Loss}+\\beta\\sum_{l\\in L}||\\hat{A_l}W-A_lW||^2\\)\uff0c\u5176\u4e2d\\(A\\)\u4ee3\u8868\u539f\u59cb\u77e9\u9635\uff0c\\(\\hat{A}\\)\u4ee3\u8868\u7528centroid\u66ff\u6362\u540e\u7684\u77e9\u9635\uff0c\\(l\\)\u4ee3\u8868layer \\(l\\).</p> <ul> <li>Enable direct gradient propagation</li> <li>Enable the centroids to learn accurate representations of activations</li> </ul> <p>Straight Through Estimator for gradient propagation</p> <p>\u7531\u4e8ecentroid clustering and table-lookup operators\u4e0d\u53ef\u5fae\uff0c\u6240\u4ee5\u4f7f\u7528STE\u6765\u4f30\u8ba1\u68af\u5ea6\u548c\u53cd\u5411\u4f20\u64ad\uff0cF\u662fLayer Input\u7684\u751f\u6210\u51fd\u6570\u3002</p> <p>STE\uff1a\u8fd1\u4f3c\u5730\u5904\u7406\u79bb\u6563\u53d8\u91cf\u7684\u68af\u5ea6\uff0c\u5728\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u79bb\u6563\u53d8\u91cf\u7684\u503c\uff0c\u5728\u53cd\u5411\u4f20\u64ad\u7684\u8fc7\u7a0b\u4e2d\u5c06\u79bb\u6563\u53d8\u91cf\u7684\u68af\u5ea6\u8bbe\u7f6e\u4e3a\u5355\u4f4d\u77e9\u9635\u3002\u8fd9\u6837\u5728\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u68af\u5ea6\u4f1a\u88ab\u65e0\u4fee\u6539\u7684\u4f20\u9012\u5230\u4e0a\u4e00\u5c42\u3002</p> <p>\\(\\dfrac{\\partial L}{\\partial F}=\\dfrac{\\partial L}{\\partial \\hat{y}} \\cdot\\dfrac{\\partial \\hat{y}}{\\hat{A}}\\cdot \\dfrac{\\partial\\hat{A}}{\\partial A} \\cdot\\dfrac{\\partial A}{\\partial F}\\approx \\dfrac{\\partial L}{\\partial \\hat{y}} \\cdot\\dfrac{\\partial \\hat{y}}{ \\hat{A}}\\cdot\\dfrac{\\partial A}{\\partial F}\\)\uff0c\u5176\u4e2d\\(\\hat{y}=\\hat{A}\\cdot W\\)\uff0c\u662f\u672c\u5c42\u7684\u8f93\u51fa\u3002</p>"},{"location":"paper/PIM_DL/#pim-dl-engine","title":"PIM-DL Engine","text":"<p>PIM Operators:</p> <ul> <li>PIM Kernel: \u5728host\u4e0a\u89e6\u53d1PIM module\u6765\u6267\u884cworkload</li> <li>PIM Binary: \u5728PIM module\u4e2ddescribe offloaded workload</li> </ul> <p>Host Processor\u901a\u8fc7PIM Driver\u6765\u63a7\u5236DRAM-PIMs\u7684\u6267\u884c\uff0c\u5728Transformer\u7684\u6267\u884c\u8fc7\u7a0b\u4e2d\uff0c\u5c06QKV Projection\uff0cO Projection\uff0c FFN\u8fd9\u4e9b\u7ebf\u6027\u5c42\u90fd\u66ff\u6362\u4e3aLUTs\u3002Attention\u5728host\u4e0a\u6267\u884c\uff0c\u5176\u4f59\u7684Add,Norm, GeLU\u90fd\u5728PIM\u4e0a\u6267\u884c</p>"},{"location":"paper/PIM_DL/#hardware-mapping-and-optimization","title":"Hardware Mapping and Optimization","text":"<p>LUT-NN's mapping strategy and PIM-DL Auto-Tuner: \u4ea7\u751finput LUT-NN\u548ctarget hardware platform\u7684best mapping parameters</p> <p>DRAM-PIM\u67b6\u6784\u56fe\uff1a\u5728\u6bcf\u4e2aPIM module\u4e2d\uff0c\u6709\u5f88\u591a\u5206\u5e03\u5f0f\u7684\u8ba1\u7b97\u8282\u70b9\u3002\u6bcf\u4e2a\u8282\u70b9\u7531\u4e00\u4e2aProcessing Engine\u548clocal memory banks\u7ec4\u6210\u3002\u6838\u5fc3\u5728\u4e8e\u6240\u6709\u7684PE\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u5185\u5b58\u8bbf\u95ee\uff0c\u6240\u4ee5\u5185\u5b58\u5e26\u5bbd\u5f88\u9ad8\uff0c\u76f8\u8f83\u4e8e\u4e00\u822c\u7684\u8ba1\u7b97\u5bc6\u96c6\u578b\u8bbe\u5907</p> <p>\u6267\u884cPIM workload\u5206\u4e3a\u4e09\u6b65\uff1ahost processor\u51c6\u5907\u8f93\u5165\u6570\u636e\u5e76\u53d1\u9001\u5230PIM modules\uff0c\u51c6\u5907\u597d\u540ehost\u4f1a\u542f\u52a8PIM kernel\uff0c\u5f53\u6240\u6709\u7684PE\u6267\u884c\u5b8cKernel execution\u540e\uff0chost\u4f1a\u4ece\u6240\u6709\u7684PIM module\u83b7\u53d6\u7ed3\u679c\u3002</p> <p>\u4e0d\u8fc7DRAM-PIM\u6709\u4e00\u4e9b\u7f3a\u70b9\uff1a</p> <ul> <li>Constrained Host-PIM communication\uff1a\u6240\u6709\u7684PE\u5171\u4eab\u4e00\u6761\u6570\u636e\u603b\u7ebf\uff0c\u6240\u4ee5\u6bcf\u4e2aPE\u7684\u4f20\u8f93\u901f\u7387\u6709\u9650\uff0c\u6240\u4ee5\u5c3d\u53ef\u80fd\u7684\u4f7f\u7528broadcast</li> <li>No direct inter-PE datapath: \u7531\u4e8eon-chip\u7684routing resources\u6709\u9650\uff0c\u6240\u4ee5inter-PE\u4e4b\u95f4\u6ca1\u6709\u76f4\u63a5\u7684\u6570\u636e\u901a\u8def\uff0c\u6240\u4ee5\u5f97\u5c3d\u91cf\u907f\u514dinter-PE communication</li> <li>Load-balancing problem: \u77ed\u677f\u6548\u5e94</li> <li></li> </ul> <p>LUT-NN\u7684\u4e24\u4e2aoperator: CCS(closet centroid search)\u548cLUT(table lookup operator)\uff0cCCS\u5728host\u4e0a\u8ba1\u7b97\uff0cLUT\u5728PIM\u4e0a\u8ba1\u7b97</p> <ul> <li> <p>LUT: \u5206\u4e3a\u4e24\u6b65\uff0c\u7b2c\u4e00\u6b65\u662f\u5c06LUT\u5212\u5206\u4e3asub-LUT workloads\uff0c\u7b2c\u4e8c\u6b65\u662f\u5728\u6240\u6709\u7684PE\u4e0a\u5e76\u53d1\u7684\u542f\u52a8\u6240\u6709\u7684kernel</p> <ul> <li> <p>Sub-LUT Partition:  \u6ce8\u610f\u56fe\u4e2dLookup Table\u7684CB\u548cCT\u8fdb\u884c\u4e86Transpose\uff0c\u5728\u56fe\u4e2d\uff0c\u5bf9\u4e8eCCS\u83b7\u5f97\u7684Index matrix\u548cPre-computed LUT\uff0c\u5206\u522b\u6cbf\u7740N\u548cF\u4e24\u4e2a\u7ef4\u5ea6\u8fdb\u884cPE group\u4e4b\u95f4\u7684\u5747\u5206\u3002\\(i\\)-th PE group\u8d1f\u8d23\u8ba1\u7b97\\(i\\)-th index tile\uff0c\u5373\u56fe\u4e2d\u7684\u7ea2\u8272\u90e8\u5206\u3002PE group\u4e2d\u7684\\(j\\)-th PE\u8d1f\u8d23\u8ba1\u7b97\u5bf9\u5e94index tile\u548c\\(j\\)-th LUT tile\u7684table lookup\u3002</p> <p>\\(t_{sub-lut}=t_{index}+t_{lut}+t_{output}\\)</p> <p>\u8fd9\u6837\u505a\u6709\u4e00\u4e9b\u597d\u5904\uff1a</p> <ul> <li>\u5728\u540c\u4e00\u4e2aPE group\u4e2d\u7684\u6240\u6709PE\u5171\u4eab\u540c\u4e00\u4e2aindex tile\uff0c\u6240\u6709\u7684group\u4e2d\u7684\\(j\\)-th PE\u5171\u4eab\u540c\u4e00\u4e2aLUT tile\uff0c\u5145\u5206\u4e86\u5229\u7528\u4e86host-PIM\u5e26\u5bbd</li> <li>CT\u7ef4\u5ea6\u6ca1\u6709\u5206\u5272\uff0c\u907f\u514d\u4e86inter-PE communication</li> <li>\u5747\u5300\u5206\u5272\u4fdd\u8bc1\u4e86workload\u7684\u5747\u8861</li> </ul> <p></p> </li> </ul> <ul> <li> <p>Micro Kernel Execution: \u5bf9\u4e8eOutput\u4e2d\u7684\u6bcf\u4e2a\\(N_{s-tile}\\times F_{s-tile}\\)\u7684tile\uff0c\u4e3a\u4e86\u5229\u7528PIM\u4e0a\u7684on-chip buffer\uff0c\u7ee7\u7eed\u8fdb\u884c\u5206\u5757\uff0c\u5bf9\u4e8e\\(N_{s-tile}\\times CB\\)\u7684index matrix\uff0c\u5728\u4e24\u4e2a\u7ef4\u5ea6\u4e0a\u7ee7\u7eed\u8fdb\u884c\u5206\u5757\uff0c\u79f0\u4e3aM-tile\u3002\u6bcf\u4e2aPE\u52a0\u8f7d\u4e00\u4e2aindex Mtile\uff0c\u7136\u540e\u901a\u8fc7LUT\u4ea7\u751f\u4e00\u4e2aoutput Mtile\uff0c\u5bf9\u4e8e\u6bcf\u4e2aMtile, \u9700\u8981\u5c06\u6240\u6709\u540c\u884c\u7684\\(N_{m-tile}\\)\u52a0\u8d77\u6765\u5f97\u5230\u6700\u7ec8\u7684output Mtile</p> <p>\\(t_{micro-kernel}=t_{transfer}+t_{reduce}\\)</p> <p></p> </li> </ul> </li> </ul> <p>PIM-DL Auto-Tuner</p> <p>\u4e3b\u8981\u627e\u7684\u662f\u56db\u7c7b\u53c2\u6570\uff1a</p> <ul> <li>Sub-LUT Tiling Factors: \\(N_{s-tile}\\)\u548c\\(F_{s-tile}\\)</li> <li>Micro Kernel Tiling Factors: \\(N_{m-tile}\\), \\(CB_{m-tile}\\), \\(F_{m-tile}\\)</li> <li>Tile Traversal Order: \u5373\u4e0a\u8ff0\u7684\u4e09\u4e2aMtile factors\u7684\u904d\u5386\u987a\u5e8f</li> <li>LUT load scheme\uff1a\u4e09\u79cdLUT matrix\u7684load scheme<ul> <li>Static Load\uff1a\u5f53LUT\u7684Mtile\u5c0f\u4e8eon-chip buffer size\u65f6\uff0c\u5c31\u5c06\u6574\u4e2aLookup Table tile(\\(CB_{s-tile}\\times CT \\times F_{s-tile}\\))\u52a0\u8f7d\u5230buffer\u4e2d</li> <li>Coarse-grained load: \u8003\u8651\u5230\u6bcf\u4e2aIndex\u4f1a\u4ece\\(CT\\) candidates\u4e2d\u9009\u53d6\u4e00\u4e2a\uff0c\u6240\u4ee5\u6bcf\u6b21\u52a0\u8f7d\\(CB_{load-tile}\\times CT \\times F_{load-tile}\\)\u5927\u5c0f\u7684LUT tile\u5230buffer\u4e2d</li> <li>Fine-grained load: \u5728\u8fd9\u79cd\u65b9\u6cd5\u4e2d\u91c7\u53d6on-demand\u7684\u65b9\u6cd5\uff0c\u5177\u4f53\u662f\u6bcf\u5f53\u5904\u7406\u4e00\u4e2a\u65b0\u7684index\u65f6\uff0c\u5c31\u6cbf\u7740F\u7ef4\u5ea6\u52a0\u8f7d\\(F_{load-tile}\\)\u7684elements\uff0c\u5f53\u5e76\u884c\u5904\u7406\u591a\u4e2aread-request\u65f6\uff0c\u53ef\u4ee5\u4e3a\u6bcf\u4e2a\u7ebf\u7a0bkeep\u4e00\u4e2a\\(F_{load-tile}\\)\u5927\u5c0f\u7684Buffer</li> </ul> </li> </ul> <p></p>"},{"location":"paper/PowerInfer/","title":"PowerInfer:Fast Large Language Model Serving with a Consumer-grade GPU","text":"<p>\u89e3\u51b3\u6a21\u578b\u53c2\u6570\u8fc7\u5927\u7684\u95ee\u9898\uff1a </p> <ul> <li>Compression\uff1aquantization, distillation, pruning</li> <li>Offload\uff1a\u5c06\u6a21\u578b\u5728Transformer\u8fd9\u4e00\u5c42\u5206\u5230GPU\u548cCPU\u4e4b\u95f4\uff0c\u540c\u65f6\u5229\u7528CPU\u7684\u80fd\u529b\u8fdb\u884c\u8ba1\u7b97(llama.cpp)</li> </ul> <p>Locality mismatch\uff1a\u786c\u4ef6\u548cLLM\u7279\u6027\u4e4b\u95f4\u7684\u5c40\u90e8\u6027\u4e0d\u5339\u914d\uff0c\u6307\u7684\u662f\u53c2\u6570\u8fc7\u591a\u5bfc\u81f4\u5355\u5f20GPU\u4e0d\u80fd\u88c5\u4e0b\u4ece\u800c\u5229\u7528\u81ea\u8eab(\u4f4e\u5bb9\u91cf)\u7684\u9ad8\u5e26\u5bbd</p> <p>\u505a\u4e86\u54ea\u4e9b\u5de5\u4f5c\uff1a\u57fa\u4e8ePower-law Activation\u548cFast In-CPU Computation</p> <ol> <li>PowerInfer \u63d0\u51fa\u4e86\u4e00\u79cd\u81ea\u9002\u5e94\u65b9\u6cd5\uff0c\u7528\u4e8e\u6784\u5efa\u9488\u5bf9\u5177\u6709\u66f4\u9ad8\u6fc0\u6d3b\u7a00\u758f\u6027\u548c\u504f\u659c\u5ea6\u5c42\u7684\u5c0f\u578b\u9884\u6d4b\u5668\u3002\u8fd9\u8ba9\u539f\u672c\u5360\u7528\u5927\u91cfGPU\u5185\u5b58\u7684online predictor\u7684size\u51cf\u5c0f\u540c\u65f6\u4fdd\u6301\u7cbe\u51c6\u5ea6</li> <li>PowerInfer\u8bbe\u8ba1\u4e86neuron-aware\u7684\u7a00\u758f\u8fd0\u7b97\u7b26\uff0c \u8be5operator\u53ef\u4ee5\u548c\u5355\u4e2aneuron\u76f4\u63a5\u4ea4\u4e92\uff0c\u4ece\u800c\u907f\u514d\u64cd\u4f5c\u6574\u4e2a\u77e9\u9635\uff0c\u4ee5\u53ca\u7279\u5b9a\u7a00\u758f\u683c\u5f0f\u7684\u8f6c\u5316</li> <li>PowerInfer \u5728offline\u9636\u6bb5\u751f\u6210\u4e86neuron placement policy\uff0c\u901a\u8fc7\u4e00\u4e2a\u8bc4\u4f30\u6807\u51c6\u5c06\u95ee\u9898\u53d8\u4e3a\u6574\u6570\u7ebf\u6027\u89c4\u5212\u95ee\u9898\uff0c\u6807\u51c6\u8003\u8651\u4e86\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u9891\u7387\u8fd8\u6709CPU/GPU\u7684\u5e26\u5bbd\u67b6\u6784\u5c42\u6b21</li> </ol> <p>Background:</p> <ul> <li>Activation Sparsity\uff1aLLM\u7684\u63a8\u7406\u8fc7\u7a0b\u4e2d\uff0c\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u6709\u5f88\u5927\u7684\u7a00\u758f\u6027\uff0c\u65e0\u8bba\u662f\u5728Attention\u8fd8\u662f\u5728MLP\u4e2d\u3002\u53ef\u4ee5\u5728\u6a21\u578b\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u63d0\u524d\u57fa\u5c42\u9884\u6d4b\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u60c5\u51b5\u3002</li> </ul> <ul> <li>GPU-centric offloading: \u4f7f\u7528CPU\u5185\u5b58\u5b58\u50a8\u8d85\u8fc7GPU\u5185\u5b58\u9650\u5236\u7684\u6a21\u578b\u53c2\u6570\uff0c\u4f1a\u6709\u6781\u9ad8\u7684Latency\uff0c\u56e0\u4e3aCPU\u548cGPU\u4e4b\u95f4\u7684PCIE\u4f20\u8f93\u6bd4\u8f83\u6162</li> </ul> <ul> <li>Hybrid offloading: \u540c\u6837\u662f\u5728CPU\u548cGPU\u4e4b\u95f4\u5206\u5e03\u6a21\u578b\u53c2\u6570\uff0c\u9996\u5148\u8ba9CPU\u8fdb\u884c\u8ba1\u7b97\uff0c\u518d\u5c06\u7ed3\u679c\u53d1\u9001\u5230GPU\u53bb\u8fdb\u884ctoken\u751f\u6210\uff0c\u4ece\u800c\u6700\u5c0f\u5316\u6570\u636e\u4f20\u8f93\uff0c\u4f46\u662fCPU\u5360\u636e\u4e86\u5927\u91cf\u7684\u6570\u636e\u5904\u7406\u8d1f\u8f7d\uff0c\u5bfc\u81f4\u7ed3\u679c\u5f88\u6162</li> </ul> <ul> <li>DejaVu\uff1a\u901a\u8fc7\u4f7f\u7528\u9009\u62e9\u6027\u5904\u7406\u6fc0\u6d3b\u795e\u7ecf\u5143\u7684\u65b9\u6cd5\u6765\u52a0\u901f\u63a8\u7406\uff0c\u4f46\u662fbottleneck\u5728\u4e8e\u5728\u8fd0\u884c\u65f6\u9700\u8981\u9891\u7e41\u7684\u5c06\u6fc0\u6d3b\u7684\u795e\u7ecf\u5143\u4eceCPU\u4f20\u8f93\u5230GPU\uff0c\u540c\u6837\u53d7\u5230\u4f20\u8f93\u901f\u7387\u7684\u9650\u5236\uff0c\u6709\u6781\u9ad8\u7684Latency</li> </ul> <p>PowerInfer OverView\uff1a</p> <p>\u5c06\u9891\u7e41\u6fc0\u6d3b\u795e\u7ecf\u5143\u7684\u6743\u91cd\u77e9\u9635\u9884\u5148\u52a0\u8f7d\u5230GPU\u4e0a\uff0c\u5176\u4f59\u4fdd\u5b58\u5728CPU\u4e0a\u3002\u5728\u63a8\u7406\u8fc7\u7a0b\u4e2d\uff0cPowerInfer\u4f1a\u8df3\u8fc7\u5927\u591a\u6570\u4e0d\u6d3b\u8dc3\u7684\u795e\u7ecf\u5143\uff0c\u4ec5\u4ec5\u8ba1\u7b97\u7531\u5728\u7ebf\u9884\u6d4b\u5668\u9884\u6d4b\u4e3a\u6d3b\u8dc3\u7684\u795e\u7ecf\u5143\u3002\u7531\u4e8e\u9884\u52a0\u8f7d\u7b56\u7565\uff0c\u5df2\u52a0\u8f7d\u5230GPU\u4e0a\u7684hot-activated neurons\u5360\u603b\u6fc0\u6d3b\u7684\u4e3b\u8981\u90e8\u5206\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u5927\u90e8\u5206\u7684\u8ba1\u7b97\u4efb\u52a1\u5206\u914d\u5230GPU\u4e0a\uff0c\u800c\u90a3\u4e9bcold-activated neurons\uff0c\u5219\u7531CPU\u8ba1\u7b97\uff0c\u907f\u514d\u6743\u91cd\u77e9\u9635\u7684\u4f20\u9012\u3002</p> <ul> <li>Offline phase(Profiler &amp; Solver) -&gt; Online(CPU executor and GPU executor)<ul> <li>Step1: Profiler\u4f1a\u5148\u4eceGeneral dataset\u6536\u96c6\u795e\u7ecf\u5143\u5728\u6240\u6709\u5c42\u4e0a\u7684\u6fc0\u6d3b\u6570\u636e\uff0c\u5e76\u7531Policy Solver\u51b3\u5b9a\u5b83\u662fhot\u8fd8\u662fcold</li> <li>Step2: Policy Solver\u4f1a\u6839\u636e\u795e\u7ecf\u5143\u7684Impact\u548c\u5177\u4f53\u786c\u4ef6\u60c5\u51b5\u6765\u5e73\u8861workload\uff0c\u4f7f\u7528Integer linear programming\u6765\u6700\u5927\u5316GPU\u4e0a\u795e\u7ecf\u5143\u7684\u5bf9\u7ed3\u679c\u7684\u603bImpact</li> <li>Step3: Engine\u5728\u5904\u7406\u7528\u6237\u8bf7\u6c42\u4e4b\u524d\uff0c\u4f1a\u6839\u636eoffline solver\u7684\u8f93\u51fa\u5c06\u4e24\u79cd\u4e0d\u540c\u7684\u795e\u7ecf\u5143\u5206\u914d\u7ed9\u5404\u81ea\u7684\u8ba1\u7b97\u5355\u5143</li> <li>Step4: \u8fd0\u884c\u65f6Engine\u4f1a\u521b\u5efaCPU\u548cGPU Executor\uff0c\u53bb\u7ba1\u7406CPU\u548cGPU\u8ba1\u7b97\uff0c\u540c\u65f6\u8fdb\u884conline prediction\u5e76\u7ed5\u8fc7\u90a3\u4e9b\u4e0d\u6fc0\u6d3b\u7684\u795e\u7ecf\u5143</li> </ul> </li> </ul> <p>Adaptive Sparsity Predictors:</p> <ul> <li>DejaVu\u4f7f\u7528\u4e24\u4e2a\u5206\u9694\u7684Predictor\u6765\u9884\u6d4bself-attention\u548cMLP blocks\u4e2d\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b</li> <li>Accuracy\u53d7\u4e24\u4e2a\u56e0\u7d20\u5f71\u54cd\uff1aActivation sparsity\u548cinternal skewness\uff0c\u5728transformer layer\u6709\u9ad8\u6fc0\u6d3b\u7a00\u758f\u6027\u548c\u9ad8\u5185\u90e8\u504f\u659c\u5ea6\u7684\u60c5\u51b5\u4e0b\uff0c\u5c0f\u89c4\u6a21\u7684\u9884\u6d4b\u5176\u4e5f\u80fd\u6709\u5f88\u597d\u7684\u7cbe\u51c6\u5ea6</li> <li>PowerInfer\u8bbe\u8ba1\u4e86non-fixed-size predictors\u7684\u8fed\u4ee3\u8bad\u7ec3\u65b9\u6cd5\uff0c\u5bf9\u4e8e\u6bcf\u4e2aTransformer layer\uff0c\u9996\u5148\u6839\u636e\u8be5layer\u7684sparsity profile\u7ed3\u679c\u5efa\u7acb\u57fa\u7840\u7684baseline model size\uff0c\u7136\u540e\u6839\u636e\u8be5\u5c42\u5185Activation skewness\u5bf9\u51c6\u786e\u6027\u5f71\u54cd\u8fdb\u884csize\u7684\u8c03\u6574\u3002\u5bf9\u4e8eMLP Layer\uff0c\u4e3b\u8981\u6839\u636eskewness\u5bf9\u9690\u85cf\u5c42\u7684dimension\u8fdb\u884c\u8c03\u6574\uff0c\u9ad8skewness\u5c31\u51cf\u5c0f\u9690\u85cf\u5c42\u7ef4\u5ea6\uff0c\u4f4e\u5c31\u589e\u52a0\u5c06\u7cbe\u51c6\u5ea6\u4fdd\u6301\u572895%\u3002</li> </ul> <p>Neuron Placement and Management</p> <ul> <li>\u5bf9\u4e8e\u6bcf\u5c42\u6765\u8bf4\uff0c\u6709\u5f88\u591a\u6743\u91cd\u77e9\u9635\uff0cPowerInfer\u4f1a\u628a\u5bf9\u5e94\u7684Neuron\u653e\u5230GPU\u6216\u8005CPU\u4e0a</li> <li>CPU\u548cGPU\u4e0a\u90fd\u6709\u4e00\u4e2aNeuron Map\uff0c\u8bb0\u5f55\u4e86Neuron\u5728\u77e9\u9635\u4e2d\u7684\u539f\u59cb\u4f4d\u7f6e\uff0c\u4fbf\u4e8e\u8ba1\u7b97\u65f6\u627e\u5230\u76f8\u5e94\u4f4d\u7f6e</li> </ul> <p>Hybrid Execuation Model:</p> <ul> <li>\u5728\u8fdb\u884cInference\u4e4b\u524d\uff0c\u5efa\u7acb\u4e86\u4e00\u4e2a\u8ba1\u7b97\u56fe\u5e76\u5b58\u50a8\u5230CPU memory\u4e2d\u7684global queue\u4e0a\uff0c\u8ba1\u7b97\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u4ee3\u8868LLM\u63a8\u7406\u4e2d\u7684\u4e00\u4e2aoperator\u3002</li> <li>\u7531\u4e3b\u673a\u4e0a\u7684\u7ebf\u7a0b\u6267\u884cCPU executor\u548cGPU executor\uff0c\u5b83\u4eec\u4ece\u5168\u5c40\u961f\u5217\u4e2d\u83b7\u53d6operator\u68c0\u67e5\u4f9d\u8d56\u5173\u7cfb\uff0c\u5e76\u5c06operator\u8fdb\u884c\u5206\u914d\u3002\u8ba1\u7b97\u7ed3\u679c\u7684\u5408\u5e76\u5728GPU\u4e0a\u8fdb\u884c</li> <li>\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0cCPU\u548cGPU\u4e0a\u90fd\u6709\u6fc0\u6d3b\u795e\u7ecf\u5143\u65f6\u7ed3\u679c\u9700\u8981\u540c\u6b65\uff0c\u4f46\u5f53CPU\u4e0a\u6ca1\u6709\u65f6\uff0c\u5c31\u4e0d\u7528\u540c\u6b65\u4e86</li> </ul> <p>Neuron-aware Operators:</p> <ul> <li>\u9996\u5148\u786e\u5b9a\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u72b6\u6001\uff0c\u5982\u679c\u9884\u6d4b\u662f\u6fc0\u6d3b\u90a3\u4e48\u5c31\u4e0e\u53c2\u6570\u77e9\u9635\u7684\u76f8\u5e94\u884c/\u5217\u4e00\u8d77\u5904\u7406</li> <li>\u5728GPU\u4e0a\uff0c\u6240\u6709\u7684\u7ebf\u7a0b\u5757\u53ef\u4ee5\u540c\u65f6\u68c0\u67e5\u795e\u7ecf\u5143\u7684\u6fc0\u6d3b\u72b6\u6001\uff0c\u5e76\u5728\u6fc0\u6d3b\u65f6\u8fdb\u884c\u8ba1\u7b97\u3002\u5728CPU\u4e0a\uff0c\u5c06operator\u5206\u6210\u591a\u4e2a\u5c0f\u6279\u6b21\u8fdb\u884c\u5e76\u53d1\u6fc0\u6d3b\u68c0\u67e5\uff0c\u6bcf\u4e2a\u6838\u5fc3\u4ec5\u4ec5\u5904\u7406\u5176\u5bf9\u5e94\u6279\u6b21\u4e2d\u7684\u6fc0\u6d3b\u795e\u7ecf\u5143\u3002</li> </ul> <p>Neuron Placement Policy:</p> <ul> <li>\u8003\u8651\u4e86Neuron\u7684\u6fc0\u6d3b\u9891\u7387\uff0c\u901a\u4fe1\u5f00\u9500\uff0c\u8ba1\u7b97\u5355\u5143\u7684\u8ba1\u7b97\u80fd\u529b(\u5185\u5b58\u548c\u5e26\u5bbd\u7b49\uff0c\u4e4b\u540e\u518dIntegrate)\uff0c\u5efa\u7acb\u4e86Neuron Impact\u4ece\u800c\u5bf9Neuron\u7684\u6fc0\u6d3b\u4fe1\u606f\u8fdb\u884c\u4e86\u5efa\u6a21</li> </ul> <ul> <li>Offline Profiling: \u4ece\u591a\u4e2a\u5e38\u7528\u6570\u636e\u96c6\u4e0a\u83b7\u53d6LLM\u4e2d\u5404\u4e2a\u795e\u7ecf\u5143\u7684runtime inference data\uff0c\u5728\u6bcf\u4e2aTransformer Layer\u540e\u6dfb\u52a0\u4e00\u4e2aMonitor kernel\u6765\u7cbe\u51c6\u8bc4\u4f30\u6fc0\u6d3b\u4fe1\u606f\uff0c\u5e76\u5728GPU\u4e0a\u5efa\u7acb\u4e00\u4e2aneuron information table\u6765\u8bb0\u5f55\u6bcf\u4e2aneuron\u7684activation count.</li> </ul> <ul> <li>Impact Metric: \u7528\u6fc0\u6d3b\u9891\u7387\u6765\u4f5c\u4e3aImpact Metric\uff0c\u56e0\u4e3afrequency\u53cd\u5e94\u4e86runtime behavior</li> </ul> <ul> <li> <p>Model of Placement: </p> <ul> <li>cumulative impact:   \\(t_i=\\sum_{e \\in N}a_{ie}*v_e, \\forall i\\in{GPU}\\), \\(\\sum_{i\\in  U}a_{in}=1, \\forall n \\in N\\)</li> </ul> <ul> <li>\u76ee\u7684\u662f\u8981Maximize\u524d\u4e00\u4e2a\u5f0f\u5b50\uff0c\u5176\u4e2d\\(a_{ie}\\)\u6307\u7684\u662f\u5728GPU i\u4e0a\u7684\u6240\u6709\u795e\u7ecf\u5143\uff0c\u540e\u9762\u90a3\u4e2a\u5f0f\u5b50\u7684\u610f\u601d\u662f\u5bf9\u4e8e\u67d0\u4e2an\u6765\u8bf4\uff0c\u5728\u6240\u6709\u8bbe\u5907i\u4e0a\u5b58\u5728\u7684\u6982\u7387\u548c\u4e3a1\u3002\u9664\u4e86Maximize\u524d\u4e00\u4e2a\u5f0f\u5b50\u8fd8\u8981\u8003\u8651\u4e4b\u524d\u6240\u8bf4\u7684\u901a\u4fe1\u5f00\u9500\u548c\u786c\u4ef6\u60c5\u51b5</li> </ul> <ul> <li> <p>Communication constraint: </p> <p>\u4e3a\u4e86\u51cf\u5c11\u901a\u4fe1\u5f00\u9500\uff0cGPU\u4e0a\u795e\u7ecf\u5143\u7684preload\u9700\u8981\u6709\u4e00\u4e2aminimum\uff08\u6bcf\u4e00\u5c42\u7684\\(C_l\\)\uff09\uff0c\u786e\u4fdd\u4e86\\(C_l*T_l^{GPU}+T_{sync}\\leq C_l *T_L^{CPU}\\)\uff0c\u7528\u8bbf\u95ee\u4e00\u6b21\u795e\u7ecf\u5143\u7684\u6240\u6709\u6743\u91cd\u7684\u65f6\u95f4\u6765\u4f30\u8ba1\u795e\u7ecf\u5143\u7684\u8ba1\u7b97\u65f6\u95f4\\(T_{ij} = M_i/Bandwidth_j\\)\uff0c\u800c\u5728batch size\u8f83\u5c0f\u7684\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u5c42\u5185\u6570\u636e\u4f20\u8f93\u8303\u56f4\u4fdd\u6301\u4e00\u81f4\uff0c\u6240\u4ee5\u540c\u6b65\u6210\u672c\u76f8\u540c\uff0c\u6240\u4ee5\u7528\u5c06Tsync\u63cf\u8ff0\u4e3a\u5355\u4e2a\u5c42\u5185\u901a\u4fe1\u5b9e\u4f8b\u7684profiled overhead</p> </li> </ul> <ul> <li> <p>Memory Constraint: </p> <p>\\(\\sum_{n \\in N}a_{jn}\u00b7M_n&lt;MCap_j, \\forall j\\in U\\)\uff0c\u6307\u7684\u662f\u5bf9\u4e8eCPU\u548cGPU\u6765\u8bf4\uff0c\u5176\u4e0a\u9762\u7684\u795e\u7ecf\u5143\u6240\u5360memory\u5927\u5c0f\u9700\u8981\u5c0f\u4e8e\u5bf9\u5e94\u7684\u5904\u7406\u5355\u5143\u3002\u6b64\u65f6\u5bf9\u4e8e\u67d0\u5c42l\u6765\u8bf4\uff0c\u4e5f\u9700\u8981\u6ee1\u8db3GPU\u4e0a\u7684\u795e\u7ecf\u5143\u4e2a\u6570\u5927\u4e8e\\(C_l\\)\u6216\u8005\u4e3a0</p> </li> </ul> </li> </ul> <ul> <li> <p>Integer Linear Programming:</p> <ul> <li>\u5c06\u6bcf\u4e00\u5c42\u7684\u795e\u7ecf\u5143\u805a\u5408\u6210batch\u5e76\u8fdb\u884ccollective placement analysis\uff0c\u4e5f\u5c31\u662f\u5c06\u5177\u6709\u76f8\u4f3cimpact\u7684neuron\u5c01\u88c5\u6210\u4e00\u4e2agroup\uff0c\u4ee5group\u4e3a\u5355\u4f4d\u6765\u8fdb\u884cILP</li> </ul> </li> </ul> <p>\u76f8\u5173\u7814\u7a76\uff1a</p> <ul> <li>LLM Activation Sparsity:  DejaVu, PIT, brainstorm</li> <li>LLM Weight Sparsity: Model Pruning(SparseGPT, Wanda), SparTA, FLash-LLM</li> <li>Speculative LLM Inference: Speculative inference, Speculative decoding, SpecInfer</li> <li>LLM-Specific Serving Optimizations: vLLM, Orca</li> </ul>"},{"location":"paper/Preble/","title":"Preble","text":""},{"location":"paper/Preble/#preble","title":"Preble","text":"<p>The first distributed LLM serving platform that targets and optimizes for prompt sharing. computation reuse and load balancing</p> <ul> <li>\u9762\u5bf9\u7684\u662fLong prompts and shorter generation\u7684\u60c5\u51b5\uff0cprefill\u9636\u6bb5\u66f4\u52a0\u91cd\u8981</li> <li>Prompt\u5728\u8bf7\u6c42\u4e4b\u524d\u6709\u90e8\u5206\u5171\u4eab</li> </ul> <p>Reuse the computation of shared prompt prefixes: \u5728\u5904\u7406\u5206\u5e03\u5f0f\u670d\u52a1\u7684\u65f6\u5019\uff0c\u9700\u8981\u6709state. \u4f20\u7edf\u7684\u65b9\u6cd5\u5b58\u5728\u4e00\u4e9b\u95ee\u9898\uff1a</p> <ul> <li>\u4f20\u7edf\u5206\u5e03\u5f0f\u7cfb\u7edf\u901a\u5e38\u5c06computation\u548cstate\u4fdd\u5b58\u5728\u5355\u72ec\u7684cluster\u4e2d\uff0c\u4ece\u800c\u5141\u8bb8\u72ec\u7acb\u7684\u653e\u7f6ecomputation\u548cdata\u3002\u4f46\u662f\u63a8\u7406\u4e2d\u7684\u6ce8\u610f\u529b\u8ba1\u7b97\u9700\u8981\u76f4\u63a5\u7684\u8bbf\u95eeKVs(State)\uff0c\u6240\u4ee5State placement\u9700\u8981\u548ccomputation\u653e\u5728\u4e00\u8d77\u3002</li> <li>\u4f20\u7edf\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u53ef\u5b58\u50a8\u7684\u5bf9\u8c61\u7684\u4efb\u4f55\u90e8\u5206\u53ef\u4ee5\u88ab\u7f13\u5b58\u5e76\u88ab\u5e7f\u64ad\u5230\u6240\u6709\u670d\u52a1\u5668\u4e0a\u3002\u4f46\u662f\u63a8\u7406\u4e2d\u53ea\u6709matched prefixes\u80fd\u591f\u88ab\u5171\u4eab\u5e76\u88ab\u7f13\u5b58\uff0c\u5e76\u4e14\u5b8c\u6574\u7684prefix\u5fc5\u987b\u5728\u540c\u4e00\u4e2aGPU\u4e0a\u6765\u8fdb\u884c\u9ad8\u6548\u7684\u77e9\u9635\u8ba1\u7b97</li> </ul> <ul> <li>\u4e0d\u540c\u7684Prompt\u80fd\u591f\u5f62\u6210\u9759\u6001\u7684sharing-based prefix tree\uff0c\u4f46\u662f\u5728online\u573a\u666f\u4e2d\uff0c\u968f\u7740\u8bf7\u6c42\u7684\u5230\u8fbe\u548c\u79bb\u5f00\uff0cprefix tree\u7684\u7ed3\u6784\u548c\u6bcf\u4e2a\u6811\u8282\u70b9\u7684load\u90fd\u5728\u5feb\u901f\u53d8\u5316\u3002LLM serving\u7cfb\u7edf\u7684\u6027\u80fd\u9664\u4e86\u8bf7\u6c42\u8d1f\u8f7d\u8fd8\u548cprefill-decoding\u548c\u5e73\u8861\u6709\u5173</li> </ul> <p>key portion: \u5206\u6790\u4e86\u73b0\u6709\u7684\u4e94\u4e2aLLM-workload\u548cdata-center LLM request\u5f97\u5230\u7684\u4e00\u4e2a\u7ed3\u8bba\uff0c\u5927\u591a\u6570\u7684\u8bf7\u6c42\u7684prompt\u4e2d\u6709\u4e00\u90e8\u5206\u548c\u524d\u4e00\u4e2a\u8bf7\u6c42\u5177\u6709\u4e0d\u540c\u7684sharing features\uff0c\u5e76\u4e14\u6bd4\u524d\u4e00\u4e2a\u8bf7\u6c42\u7684\u603b\u957f\u5ea6\u8981\u957f\uff0c\u8fd9\u4e2a\u90e8\u5206\u79f0\u4e3akey portion</p> <ul> <li>\u5728\u524d\u7f00\u6811\u4e2d\u5b9a\u4e49\u4e3a\u4e00\u6761\u8def\u5f84\u4e0a\u6df1\u5ea6\u6700\u6df1\u7684\uff0c\u6ee1\u8db3token\u6570\u6bd4\u5b83\u6240\u6709predecessors' token\u6570\u90fd\u591a\u7684\u8282\u70b9\uff0c\u5373the tree node with the longest tokens)</li> </ul> <p>load cost: \u4e3a\u6bcf\u5f20GPU\u8ba1\u7b97\u957f\u671fGPU load\u548c\u7279\u5b9a\u7684\u8bf7\u6c42\u8d1f\u8f7d\uff0c\u57fa\u4e8etoken count, sharing features, and request count\u6765\u8ba1\u7b97</p> <ul> <li>GPU\u5728\u8fd0\u884c\u5f53\u524dscheduled\u8bf7\u6c42\u548c\u4e0d\u4e45\u540e\u7684\u9884\u671f\u8d1f\u8f7d\uff1a<ul> <li>\u4f7f\u7528\u6700\u8fd1\u7684\u8bf7\u6c42\u4e2d\u7684non-cached prompt prefill and decoding time\u6765\u4f30\u8ba1</li> </ul> </li> <li>GPU\u5173\u4e8e\u91cd\u65b0\u8ba1\u7b97\u7684\u8d1f\u8f7d<ul> <li>GPU\u9700\u8981\u817e\u51fa\u5185\u5b58\u6765\u6267\u884c\u5f53\u524d\u8bf7\u6c42</li> </ul> </li> <li>GPU\u4e0a\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u8bf7\u6c42\u8d1f\u8f7d</li> </ul> <p>E2(Exploitation and Exploration): \u63d0\u51fa\u7684\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u8bf7\u6c42\u8c03\u5ea6\u7b97\u6cd5\uff0c\u80fd\u591f\u57fa\u4e8eGPU\u8d1f\u8f7d\u548cprompt\u5171\u4eab\u7279\u6027\u52a8\u6001\u8c03\u6574\u8bf7\u6c42\u548c\u72b6\u6001(prefix)\u8c03\u5ea6. </p> <ul> <li>\u5f53shared prefix\u6bd4\u5269\u4f59\u7684token\u6570\u66f4\u957f\u65f6\uff0c\u4f1a\u9009\u62e9exploitation\uff0c\u5373\u53d1\u9001\u8bf7\u6c42\u7ed9\u7f13\u5b58\u6709prefix\u7684key portion\u7684GPU\u5e76\u91cd\u7528\u8ba1\u7b97\u7ed3\u679c\uff0c\u5426\u5219\u4f1a\u9009\u62e9Exploration\uff0c\u5373\u57fa\u4e8e\u8d1f\u8f7d\u6210\u672c\u8ba1\u7b97\u4ece\u6240\u6709\u7684GPU\u4e2d\u9009\u51fa\u6700\u4f73\u9009\u9879\u6765\u8fdb\u884cprompt\u8ba1\u7b97\u3002</li> </ul> <ul> <li>\u57fa\u4e8e\u8d2a\u5fc3\u7684\u8c03\u5ea6\u7b97\u6cd5\uff0c\u4ec5\u8003\u8651\u4f18\u5316key-portion\uff0c\u800c\u4e0d\u662f\u6574\u4e2aprompt\u3002</li> <li>\u57fa\u4e8evLLM\u548cSGLang</li> <li>\u4e0d\u4f1a\u66f4\u6539\u521d\u59cbassignment\u540eprefix\u7684\u4f4d\u7f6e\uff0cPreble\u4f1a\u68c0\u6d4bload\u7684\u53d8\u5316\u4ece\u800c\u5c06request\u8fdb\u884c\u91cd\u5b9a\u5411\u5230\u8d1f\u8f7d\u8f7b\u7684GPU\u4e0a\uff0cPreble also supports autoscaling by replicating a key portion and its prefix on multiple GPUs\uff1fwhat is autoscaling</li> <li>\u57fa\u4e8e\u4ee5\u4e0b\u8bbe\u60f3\uff1a\u547d\u4e2dcached prefix\u7684prompt\u5f53\u4f5c\u89e3\u7801\u9636\u6bb5\u7684\u8ba1\u7b97\uff0cmissed prompt\u5f53\u4f5cprefill\u7684\u8ba1\u7b97\uff0cbecause of the high prompt-to-decoding token length ratio\uff1f\u6240\u4ee5\u5c06missed request\u53d1\u7ed9\u90a3\u4e9bheavily hit request GPUs\u6765\u5e73\u8861prefill\u548cdecoding\u7684\u8ba1\u7b97\u8d1f\u8f7d</li> <li>\u4f7f\u7528\u4f18\u5148\u7ea7\u8c03\u5ea6\u7b97\u6cd5\uff0c\u4f18\u5148\u7ea7\u57fa\u4e8e\u6bcf\u4e2a\u7b49\u5f85\u8bf7\u6c42\u7684prefix cache hit ratio\uff0c\u4e3a\u6bcf\u4e2a\u4f18\u5148\u7ea7\u5206\u914d\u5404\u81ea\u7684\u8bf7\u6c42\u914d\u989d\u3002</li> </ul> <p>\u76ee\u524dLLM serving\u7684\u4e00\u4e9b\u5de5\u4f5c\uff1a</p> <ul> <li>Decoding-centric LLM serving: \u4f18\u5316scheduling, memory usage, GPU utilization\uff0cdata parallelism\u548cModel parallelism for multiple GPUs\u3002<ul> <li>Orca, vLLM, AlpaServe</li> </ul> </li> <li>Prompt-Aware LLM Serving: \u5e73\u8861prefill\u548cdecode\u4e4b\u95f4\u7684\u65f6\u95f4\u4e0d\u5e73\u8861\u95ee\u9898\uff0cchunked prefill\u662f\u5c06prompt\u5206\u5757\uff0c\u5c06\u8fd9\u4e2a\u5757\u548cdecoding request\u5728\u4e00\u4e2aiteration\u4e2d\u7684\u4e00\u4e2abatch\u8fdb\u884c\u8ba1\u7b97\u3002separate prefill and decoding\u6307\u7684\u5c06\u4e24\u4e2a\u8fc7\u7a0b\u5206\u5e03\u5230\u4e0d\u540c\u7684GPU\u4e0a\u8fdb\u884c\u8ba1\u7b97\u3002<ul> <li>SGLang, Hydragen</li> </ul> </li> </ul> <p>\u4e94\u79cdworkload: Tool Use, Embodied Agents, Program Generation, Video Question and Answer, Long Document Question and Answer</p> <p>\u56db\u4e2aImplication:</p> <ul> <li>Optimizing prefill compu-tation can largely improve overall application performance, and imbalanced prefill and decoding computation features should be considered in LLM serving. </li> <li>Reuse computa-tion across shared prefixes can largely improve real work-loads\u2019 performance and should be efficiently supported by distributed LLM serving systems. </li> <li>Identify-ing the key portion of prompts and optimizing the placement of requests according to their key portions is a viable way of reducing the complexity of scheduling while achieving good performance. </li> <li>An efficient LLM serv-ing system should consider complex, mixed-usage scenarios and factor in both load and prompt sharing variations.</li> </ul>"},{"location":"paper/Preble/#preble-design","title":"Preble Design","text":"<p>Preble: \u57fa\u4e8eE2\u7b97\u6cd5\u7684\u5206\u5e03\u5f0f\u8c03\u5ea6\u7cfb\u7edf\u3002\u7531\u4e24\u4e2a\u8c03\u5ea6\u5668\u7ec4\u6210\uff0c\u4e00\u4e2a\u662frequest-level global scheduler\uff0c\u53e6\u4e00\u4e2a\u662fper-model-instance iteration-level scheduler\u3002\u524d\u8005\u7528\u4e8e\u8c03\u5ea6\u8bf7\u6c42\u5230GPU\u4e0a\uff0c\u540e\u8005\u7528\u4e8e\u5df2\u7ecf\u8c03\u5ea6\u5230GPU\u4e0a\u7684\u8bf7\u6c42</p> <ul> <li>Prompt-Aware</li> <li>model parallelism(Standard Tensor parallelism) and data parallelism</li> </ul>"},{"location":"paper/Preble/#e2-global-scheduler","title":"E2 Global Scheduler","text":"<p>Global scheduler data structures: </p> <ul> <li>global prefix trees(radix tree)\uff0c\u6bcf\u4e2atree\u6709\u4e00\u4e2a\u4e0d\u540c\u7684root(prompt\u7684\u5f00\u5934\u90e8\u5206)\uff0c\u6bcf\u4e2atree node\u662f\u5f53\u524drequests\u4e2d\u7684\u5177\u6709\u76f8\u540csharing property\u7684a sequence of tokens\uff0c\u672b\u5c3e\u7684leaf node\u662f\u672a\u5339\u914d\u5230\u7684\u5269\u4f59tokens.</li> <li>tree node: \u7ef4\u62a4\u8282\u70b9\u5185\u7684token\u6570\uff0c\u5b58\u50a8\u5f53\u524dnode(KVs for the tokens in tree node)\u7684GPU set\uff0c\u5728\u5386\u53f2\u7a97\u53e3W\u4e2d\u5171\u4eab\u8be5\u8282\u70b9\u7684\u6bcf\u4e2aGPU\u7684\u8bf7\u6c42\u6570\u3002</li> </ul> <p></p> <p>Per-request scheduling policy</p> <p>\u5bf9\u4e8e\u4e00\u4e2arequest\uff0c\u6211\u4eec\u9996\u5148\u5728radix tree\u4e2d\u8fdb\u884cprompt\u5339\u914d\uff0c\u7136\u540e\u53ef\u4ee5\u5f97\u5230matched prefix\u7684token\u6570(re-computation)\uff0c\u548cnon-matched remaining prompt\u7684token\u6570(new computation)\uff0c\u4e24\u8005\u8fdb\u884c\u5bf9\u6bd4\uff0c\u524d\u8005\u5927\u5c31exploitation\uff0c\u5426\u5219\u5c31exploration. Exploitation\u7684\u64cd\u4f5c\u662f\u5c06request\u5206\u914d\u7ed9\u5b58\u6709\u5bf9\u5e94key portion\u7684GPU\uff0c\u591a\u4e2acache\u65f6\u9009\u62e9\u8d1f\u8f7d\u6700\u8f7b\u7684GPU. Exploration\u7684\u5177\u4f53\u8fc7\u7a0b\u662f\u4f7f\u7528\u4e09\u79cdcost\u6765\u8ba1\u7b97per-GPU cost\uff0c\u9009\u62e9lowest load costs\u7684GPU\u6765\u6267\u884c\u3002</p> <p>GPU Load Cost Calculation: \u5206\u4e3a\u4e09\u90e8\u5206\uff0cL\u662f\u4e0d\u8003\u8651\u5f53\u524d\u8bf7\u6c42\u7684GPU\u2019s overall load\uff0cM\u662f\u4fdd\u8bc1\u5f53\u524d\u8bf7\u6c42k\u80fd\u591f\u8fd0\u884c\u7684GPU\u9700\u8981\u91ca\u653e\u5185\u5b58\u7684potential cost\uff0c R\u4ee3\u8868actual cost</p> <ul> <li> <p>L Estimated: \\(L_i=\\sum_{r\\in W}(PT_r+DT_r)\\)</p> <p>\u5bf9\u4e8e\u6bcf\u4e2aGPU\uff0c\u9009\u53d6\u6700\u8fd1\u7684H\u4e2a\u8def\u7531\u5230\u8be5GPU\u7684\u8bf7\u6c42\uff0c\u5bf9\u4e8eH\u4e2a\u8bf7\u6c42\u4e2d\u7684\u6bcf\u4e00\u4e2arequest r\uff0c\u7528\u4e00\u4e2a\u56de\u5f52\u51fd\u6570\u548c\u4e0d\u5339\u914d\u7684token\u6570\u4f30\u8ba1\\(PT_r\\), \u7528\u53e6\u5916\u4e00\u4e2a\u56de\u5f52\u51fd\u6570\u548cH\u4e2a\u8bf7\u6c42\u5185\u5e73\u5747Decoding\u65f6\u95f4\u4f30\u8ba1\\(DT_r\\)\u3002\u56de\u5f52\u51fd\u6570\u7684\u83b7\u5f97\u662foffline\u7684\uff0cprofiling for GPU type. \u5e76\u4e14\u4e00\u4e2aworkload\u4e2drequest\u7684\u751f\u6210token\u6570\u8f83\u5c11\u800c\u4e14\u6bd4\u8f83\u76f8\u4f3c\uff0c\u56e0\u6b64\u65b0request\u7684decoding time\u548c\u4e4b\u524d\u4e5f\u6bd4\u8f83\u7c7b\u4f3c\u3002 </p> </li> </ul> <ul> <li>M Estimated: \\(M_i=PT_j\\times N_j\\), \u524d\u8005\u662f\u91cd\u65b0prefill evicted tokens\u6240\u82b1\u7684\u65f6\u95f4\uff0c\u540e\u8005\u662f\u5171\u4eabnode j\u7684\u8bf7\u6c42\u6570\u76ee.</li> </ul> <ul> <li>R Estimated: \\(R_i\\)\u4ee3\u8868\u5728\u6bcf\u4e2aGPU\u4e0a\u5b9e\u9645\u8fd0\u884c\u5f53\u524d\u8bf7\u6c42k\u7684cost\uff0c\u53ea\u5305\u62ecprefill time\uff0c\u56e0\u4e3adecoding cost\u5df2\u7ecf\u5728L\u4e2d\u5305\u542b\u4e86</li> </ul> <p></p> <p>Post-assignment load adjustment</p> <p>\u4f5c\u7528\uff1a\u5904\u7406\u5bf9\u4e8e\u67d0\u4e2aprefix\u6765\u8bf4\uff0cload\u548ckey portion\u53d1\u751f\u53d8\u5316\u7684\u60c5\u51b5</p> <ul> <li>\u5728GPU\u4e4b\u95f4\u8f6c\u79fb\u8d1f\u8f7d\uff0c\u5373\u5f53\u6700heavy\u7684GPU\u7684\u8d1f\u8f7d\u6bd4\u6700\u4f4e\u591a\u4e8e\u4e00\u5b9a\u500d\u6570\u65f6(Google File System)\u5c31\u8fdb\u884c\u8d1f\u8f7d\u8f6c\u79fb\uff0c\u8fd9\u4e2a\\(Th_{bal}\\)\u53ef\u4ee5offline\u4eceGPU\u548cLLM types\u4e2d\u5f97\u51fa\uff0c\u8fd9\u4e2a\u8f6c\u79fb\u7684\u65f6\u523b\u662f\u5728\u5206\u914d\u524d\uff0c\u5373\u6839\u636eE2\u7b97\u6cd5\u6267\u884c\u7684\u7ed3\u679c\u8fdb\u884c\u4fee\u6539</li> <li>\u5728GPU\u4e4b\u95f4\u5c06\u67d0\u4e2aPrefix\u590d\u5236\u6216\u8005\u5c06\u5176subtree\u8fdb\u884csplit(\u8bf7\u6c42\u7684\u5e73\u5747\u6392\u961f\u65f6\u95f4\u9ad8\u4e8e\u4e00\u4e2a\u503c\u65f6)</li> </ul> <p>Prefill-decoding balancing</p> <p>\u57fa\u4e8e\u4ee5\u4e0b\u8bbe\u60f3\uff1a\u547d\u4e2dcached prefix\u7684prompt\u5f53\u4f5c\u89e3\u7801\u9636\u6bb5\u7684\u8ba1\u7b97\uff0cmissed prompt\u5f53\u4f5cprefill\u7684\u8ba1\u7b97\uff0c\u6240\u4ee5\u4e00\u4e2arequest\u7684\u6240\u6709prompt\u90fd\u547d\u4e2d\u7684\u8bdd\u5c31\u770b\u505a\u662fDecoding\uff0c\u6709\u5f88\u957f\u7684prompt\u672a\u547d\u4e2d\u7684\u8bdd\u5c31\u770b\u505aPrefill. </p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u9700\u8981Exploration\u7684\u8bf7\u6c42\uff0c\u5982\u679c\u4e00\u4e2aGPU\u7684Decoding-phase\u7684\u8d1f\u8f7d\u975e\u5e38\u91cd\uff0c\u5c31\u76f4\u63a5\u628a\u8fd9\u4e2a\u8bf7\u6c42\u7ed9\u5b83\u3002\u5982\u679c\u6240\u6709GPU\u7684decoding-prefill balance\u90fd\u76f8\u8fd1\u7684\u8bdd\uff0c\u5c31\u8ba1\u7b97load-cost. </p> <p>Global scheduler scalability</p> <ul> <li>\u8bf7\u6c42\u9996\u5148\u7531\u5e76\u884c\u7684\u6807\u8bb0\u5c42\u8fdb\u884c\u6807\u8bb0\uff0c\u7136\u540e\u5168\u5c40\u8c03\u5ea6\u5668\u751f\u6210\u5f02\u6b65\u8bf7\u6c42\u5904\u7406\u7a0b\u5e8f\u6765\u5904\u7406\u548c\u8c03\u5ea6\u8bf7\u6c42</li> <li>\u8bf7\u6c42\u5904\u7406\u4e2d\u5bf9radix tree\u7684\u8bbf\u95ee\u662f\u4e0d\u52a0\u9501\u7684\uff0c\u66f4\u65b0tree node\u5bf9\u5e94\u7684GPU\u548crequest hit number\u65f6\u4f7f\u7528\u539f\u5b50\u64cd\u4f5c</li> <li>\u5168\u5c40\u8c03\u5ea6\u5668\u7ef4\u62a4\u6bcf\u4e2aGPU\u7684\u5f53\u524d\u8d1f\u8f7d\uff0c\u65b9\u4fbf\u8bf7\u6c42\u5230\u8fbe\u65f6\u66f4\u65b0</li> <li>rebalance\u548ceviction\u7531\u989d\u5916\u7684\u72ec\u7acb\u7ebf\u7a0b\u6765\u8fdb\u884c\uff0c\u4e0d\u5f71\u54cd\u4e3b\u7ebf\u7a0b\u6027\u80fd</li> </ul>"},{"location":"paper/Preble/#local-scheduler","title":"Local Scheduler","text":"<p>Local scheduler mechanism</p> <p>\u6bcf\u4e2aGPU\u4e0a\u7ef4\u62a4a request wait queue,a prefix radix tree, \u4ee5\u53ca\u6bcf\u4e2atree node\u5f53\u524d\u88ab\u5171\u4eab\u7684active request\u6570\u76ee\u3002\u8bf7\u6c42\u5230\u6765\u65f6\uff0c\u5c31\u5339\u914dlocal prefix tree\u5e76\u5bf9\u5bf9\u5e94\u7684tree\u8fdb\u884c\u66f4\u65b0\uff0c\u5e76\u5c06\u8bf7\u6c42\u52a0\u5165\u5230\u7b49\u5f85\u961f\u5217\u3002\u6bcf\u6b21iteration\u7684batch\uff0c\u662f\u901a\u8fc7priority-based algorithm\u4ece\u7b49\u5f85\u961f\u5217\u4e2d\u9009\u62e9\uff0c\u5e76\u5bf9\u90a3\u4e9blong and non-shared prompt\u8fdb\u884cchunk\u3002\u5982\u679c\u5f53\u524dGPU\u5185\u5b58\u4e0d\u591f\uff0c\u5c31\u9009\u53d6\u4e00\u4e9btree node\u8fdb\u884c\u4e22\u5f03\uff0c\u57fa\u4e8erequest access time(LRU)</p> <p>Waiting queue request ordering</p> <p>Priority-based wait queue scheduling policy: \u521b\u5efaP\u4e2a\u4f18\u5148\u7ea7\u7ec4\uff0c\u6839\u636e\u6bcf\u4e2a\u8bf7\u6c42\u7684cached token\u767e\u5206\u6bd4\u5c06\u8bf7\u6c42\u5212\u5206\u5230\u4e0d\u540c\u7684\u7ec4\u91cc\uff0cscheduler\u4f1a\u6309\u7167\u6bd4\u4f8b\u4ece\u5404\u4e2a\u4f18\u5148\u7ea7\u7ec4\u9009\u62e9\u3002</p> <p>\u4f7f\u7528\u4e09\u4e2a\u6307\u6807\u8bc4\u4f30\uff1arequest per second, average request latency,  p99 request latency</p>"},{"location":"paper/SHEARED%20LLama/","title":"Sheared LLAMA:Accelerating Language Model Pre-training via Structured Pruning","text":"<p>Pruning\u57fa\u7840\u77e5\u8bc6\uff1a</p> <ul> <li>Structured vs Unstructured: \u975e\u7ed3\u6784\u5316\u526a\u679d\u901a\u5e38\u4ee5mask\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u901a\u5e38\u9488\u5bf9\u5355\u4e2a\u53c2\u6570\u800c\u4e0d\u6539\u53d8\u5b9e\u9645\u53c2\u6570\u91cf\uff0c\u5bf9\u6a21\u578b\u6027\u80fd\u635f\u4f24\u5c11\u3002\u7ed3\u6784\u5316\u526a\u679d\u662f\u7269\u7406\u7684\u79fb\u9664\u57fa\u4e8e\u7279\u5b9a\u89c4\u5219\u7684\u7f51\u7edc\u4e2d\u7684\u5b50\u7ed3\u6784\uff0c\u4ece\u800c\u964d\u4f4e\u7f51\u7edc\u53c2\u6570\u4ee5\u53ca\u63a8\u7406\u6210\u672c</li> <li>What is pruned: \u526a\u679d\u5b9e\u9645\u4e0a\u662f\u5bf9\u7f51\u7edc\u4e2d\u7684\u6a21\u578b\u53c2\u6570\u8fdb\u884cmask\u6216\u8005\u7269\u7406pruning\uff0c\u4ece\u800c\u964d\u4f4e\u901a\u9053\u6570/\u6743\u91cd\u77e9\u9635\u89c4\u6a21</li> <li>Stage: \u526a\u679d\u5206\u4e3a\u4e24\u90e8\u5206\uff0c\u7b2c\u4e00\u90e8\u5206\u662f\u5bf9\u6a21\u578b\u8fdb\u884c\u4fee\u526a\u6765\u51cf\u5c11\u53c2\u6570\uff0c\u7b2c\u4e8c\u90e8\u5206\u662f\u6839\u636e\u5efa\u6a21\u76ee\u6807\u5bf9\u6a21\u578b\u8fdb\u884c\u9884\u8bad\u7ec3\u6765\u8fbe\u5230\u6307\u5b9a\u6027\u80fd</li> </ul> <p>\u6b63\u5219\u5316\uff1a</p> <ul> <li>\u8303\u6570\uff1aL0\u8303\u6570\u6307\u5411\u91cf\u4e2d\u975e0\u5143\u7d20\u4e2a\u6570\uff0cL1\u8303\u6570\u6307\u5411\u91cf\u4e2d\u5404\u4e2a\u5143\u7d20\u7edd\u5bf9\u503c\u4e4b\u548c\uff0cL2\u8303\u6570\u6307\u5411\u91cf\u5404\u5143\u7d20\u7684\u5e73\u65b9\u548c\u6c42\u5e73\u65b9\u6839</li> <li>\u53c2\u6570\u7a00\u758f\u7684\u597d\u5904\uff1a\u80fd\u5b9e\u73b0\u7279\u5f81\u7684\u81ea\u52a8\u9009\u62e9\uff0c\u5b83\u4f1a\u5b66\u4e60\u5730\u53bb\u9664\u6389\\(xi\\)\u4e2d\u5927\u90e8\u5206\u548c\u6700\u7ec8\u8f93\u51fa\\(yi\\)\u6ca1\u6709\u5173\u7cfb\u7684\u7279\u5f81(\u5c06\u7279\u5f81\u5bf9\u5e94\u6743\u91cd\u7f6e\u4e3a0)\uff0c\u4ece\u800c\u4e0d\u4f1a\u5e72\u6270\u5bf9\\(yi\\)\u7684\u6b63\u786e\u9884\u6d4b</li> <li>\u6b63\u5219\u5316\u4e5f\u5c31\u662f\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u7ed9Loss\u52a0\u4e0a\u5bf9\u5e94\u7684\u8303\u6570\uff0c\u5373\\(L(W)=\\frac{1}{N}\\sum L_i+\\lambda R(W)\\)</li> </ul> <p>Relaxation\u64cd\u4f5c\uff1a\u677e\u5f1b\u64cd\u4f5c\uff0c\u5b57\u9762\u610f\u601d\u5c31\u662f\u5c06\u67d0\u4e2a\u7ea6\u675f\u6761\u4ef6\u51cf\u5f31\u3002\u4ee5Dijstra\u7b97\u6cd5\u66f4\u65b0\u6700\u77ed\u8def\u5f84\u4e3a\u4f8b\uff0c\u5f53\\(dist(v)\\leq dist(u)+w(u,v)\\)\u7ea6\u675f\u6761\u4ef6\u4e0d\u6ee1\u8db3\u65f6\uff0c\u5bf9\\(dist(v)\\)\u8fdb\u884c\u66f4\u65b0\uff0c\u90a3\u4e48\u539f\u6765\u7684\u7ea6\u675f\u6761\u4ef6\u5c31\u5df2\u7ecf\u88ab\u6ee1\u8db3\u4e86\uff0c\u76f8\u5f53\u4e8e\u51cf\u5f31\u4e86\uff0c\u56e0\u4e3a\u6b64\u65f6\u8fd9\u4e2a\u7ea6\u675f\u6761\u4ef6\u9650\u5236\u4e0d\u4e86\\(dist(v)\\)\u4e86\u3002</p> <p>\u63d0\u51fa\u8bba\u70b9\uff1a\u5bf9\u73b0\u6709\u7684LLM\u8fdb\u884cstructured pruning\u6bd4\u6784\u5efa\u66f4\u5c0f\u89c4\u6a21\u7684LLM\u66f4\u52a0\u6709\u6548\u3002\u63d0\u51faLLM-shearing\u7b97\u6cd5\uff0c\u6765\u89e3\u51b3\u4e24\u4e2a\u95ee\u9898</p> <p>\u5982\u4f55\u786e\u5b9afinal pruned model\u662f\u6027\u80fd\u5f3a\u5927\u4e14\u63a8\u7406\u9ad8\u6548\u7684</p> <p>\u5982\u4f55\u7ee7\u7eed\u5bf9pruned model\u7ee7\u7eed\u8fdb\u884c\u9884\u8bad\u7ec3\u6765\u8fbe\u5230\u671f\u671b\u7684\u6027\u80fd</p> <p>\u5305\u542b\u4e24\u90e8\u5206\uff1a</p> <ol> <li>A novel pruning algorithm\uff1a\u7528\u4e8e\u5c06\u539f\u6a21\u578b\u4fee\u5efa\u5230specified target architecture\uff0c\u8fd9\u4e2a\u76ee\u6807\u67b6\u6784\u662f\u7531\u5df2\u5b58\u5728\u7684\u9884\u8bad\u7ec3\u6a21\u578b\u7684\u914d\u7f6e\u6765\u786e\u5b9a\u7684\u3002\u4fee\u5efa\u8fc7\u7a0b\u4e2d\uff0c\u80fd\u591f\u4fdd\u6301\u6027\u80fd\u5e76\u9075\u5faa\u7ed9\u5b9a\u7684\u7ea6\u675f\u6761\u4ef6(\u975e\u7ed3\u6784\u5316\u526a\u679d)</li> <li>\u52a8\u6001batch loading\u7b97\u6cd5\uff1a\u7528\u4e8e\u5728\u5bf9pruned model\u8fdb\u884cpre-train\u7684\u65f6\u5019\uff0c\u6839\u636e\u6bcf\u4e2adomain loss\u51cf\u5c11\u7684\u901f\u7387\uff0c\u6309\u6bd4\u4f8b\u52a0\u8f7d\u8bad\u7ec3\u6570\u636e\uff0c\u4ece\u800c\u6709\u6548\u5229\u7528\u6570\u636e\u5e76\u52a0\u901f\u6574\u4f53\u6027\u80fd\u6539\u8fdb\u3002</li> </ol> <p>Targeted Structured Pruning</p> <p>\u5047\u8bbesource model\u4e3a\\(M_s\\)\uff0c\u6709\\(L_s\\)\u4e2aLayer\uff0c\u6bcf\u4e00\u4e2alayer\u7684MHA\u6709\\(H_s\\)heads\uff0cFFN\u7684intermidiate dimension\u662f\\(m_S\\), \u6a21\u578b\u7684hidden state dimension\u662f\\(d_S\\)</p> <p>\u9488\u5bf9\u4e0d\u540c\u7c92\u5ea6(\u4eceglobal \u5230 local)\u6709\u56db\u4e2amask: \\(z^{layer}\\in R^{L_S}, \\ z^{hidden}\\in R^{d_S},\\ z^{head}\\in R^{H_S}(\\times L_S), z^{int}\\in R^{m_S}(\\times L_S)\\)</p> <p></p> <p>\u5c06pruning\u63cf\u8ff0\u4e3a\u9650\u5236\u6761\u4ef6\u4e0b\u7684\u4f18\u5316\u95ee\u9898\uff1a\u901a\u8fc7\u5b66\u4e60pruning masks\u6765\u627e\u5230\u6ee1\u8db3\u5148\u524d\u6307\u5b9a\u67b6\u6784\u7684subnetwork\uff0c\u540c\u65f6\u6700\u5927\u5316\u6027\u80fd\u3002</p> <p>\u5bf9mask\u7528Hard concrete distribution\u8fdb\u884c\u53c2\u6570\u5316\uff1a</p> <ul> <li>Hard concrete distribution: \u5206\u5e03\u5728\\([0,1]\\)\u4e0a\uff0c\u4f46\u6982\u7387\u96c6\u4e2d\u57280\u62161\u4e0a\uff0c\u4ece\u800c\u5b9e\u73b0\u79bb\u6563\u7684pruning\u6216retaining\u3002</li> </ul> <p></p> <ul> <li>mask\u5177\u4f53\u5e94\u7528\u5728\u5404\u5c42\u7684output\uff0ctransformer\u4e2dmlp\u548cattention\u7684output\u90fd\u6709mask</li> </ul> <p>\u4f7f\u7528\u4e00\u5bf9\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u76f4\u63a5\u5bf9\u4fee\u526a\u540e\u7684\u6a21\u578b\u5f62\u72b6\u65bd\u52a0\u7ea6\u675f</p> <p>\u4f8b\u5982\\(H_\\gamma\\)\u9650\u5236\uff1a\\(L^{head}(\\lambda,\\phi,z)=\\lambda^{head}\\cdot(\\sum z^{head}-H_{\\gamma})+\\phi^{head}\\cdot (\\sum z^{head}-H_\\gamma)^2\\)\uff0c\u5176\u4e2d\\(H_\\gamma\\)\u8868\u793atargeted number of heads\uff0c\u5bf9\u4e8e\u5176\u4ed6\u7684target\u4e5f\u662f\u7c7b\u4f3c</p> <p>\u6700\u7ec8\u4f18\u5316objective function\uff1a\\(L_{prune}(\\theta,z,\\lambda,\\phi)=L(\\theta,z)+\\sum_{j=1}^{L_S}L_j^{head}+\\sum_{j=1}^{L_S}L_j^{int}+L^{layer}+L^{hidden}\\)\uff0c\u5176\u4e2d\\(L(\\theta,z)\\)\u662f\u4f7f\u7528masked model weight\u8ba1\u7b97\u540e\u7684loss\u3002\u9700\u8981\u6700\u5c0f\u5316\u6a21\u578b\u6743\u91cd\\(\\theta\\)\u548c\u4fee\u526a\u63a9\u7801\\(z\\)\uff0c\u5e76\u627e\u5230\\(\\lambda\\)\u548c\\(\\phi\\)\u6ee1\u8db3\u5bf9\u5e94\u7684\u9650\u5236\u51fd\u6570\u3002</p> <p>\u7531\u4e8emask\u4f1a\u5feb\u901f\u6536\u655b\uff0c\u5e76\u4e14pruning\u8017\u65f6\u5f88\u957f\uff0c\u6240\u4ee5\u5bf9pruning budget\u8fdb\u884c\u9650\u5236\u3002pruning\u4e4b\u540e\uff0c\u4fdd\u7559\u6bcf\u4e2a\u5b50\u7ed3\u6784\u4e2dthe highest-scoring components associated with the mask variables\uff0c\u7136\u540e\u5728\u7ee7\u7eed\u8fdb\u884cpre-training.</p> <p>Dynamic Batch Loading</p> <ul> <li>\u5b9e\u65f6\u6839\u636eloss\u52a8\u6001\u8c03\u6574domain proportion.</li> </ul> <p>\u5047\u8bbe\u4e00\u4e2a\u9884\u8bad\u7ec3\u96c6\u7531\\(D_1,...D_n\\)\u7ec4\u6210\uff0c\u5bf9\u4e8e\u6bcf\u4e2adomain\u9a8c\u8bc1\u96c6\u662f\\(D_i^{val}\\)\uff0c\u6bcf\u4e2astep\uff0c\\(D_i\\)\u6709\u4e00\u4e2aproportion \\(\\omega_t[i]\\)\uff0c\u4e00\u4e2areference loss \\(l_{ref}D_i\\)\u3002</p> <p>\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\uff1a\u7b80\u5355\u6765\u8bf4\uff0c\u9996\u5148\u5728\u6bcf\u4e2aDomain\u4e0a\u5f97\u5230\u4e00\u4e2a\u53c2\u8003loss\uff0c\u7136\u540e\u6bcf\u8bad\u7ec3m\u6b65\uff0c\u5c31\u9488\u5bf9\u6bcf\u4e2aDomain\u8ba1\u7b97\u5f97\u5230\u4e00\u4e2aloss\uff0c\u7136\u540e\u7528\u8fd9\u4e2aloss\u6765\u5bf9proportion\u8fdb\u884c\u66f4\u65b0\u3002\u6839\u636e\u5bf9\u5e94\u7684proportion\u5728\u6bcf\u4e2aDomain\u4e0a\u53d6\u6837\uff0c\u7136\u540e\u6839\u636e\u4e4b\u524d\u7684Objective function\u5bf9\u6a21\u578b\u53c2\u6570\uff0cmask\uff0c\u4ee5\u53ca\u4e00\u7ec4\u62c9\u683c\u6717\u65e5\u53c2\u6570\u8fdb\u884c\u66f4\u65b0\u3002</p> <p>Reference\u7684\u9009\u62e9\uff1aSource reference\u548cScaling reference</p> <ul> <li>Source model\u2019s domain validation loss</li> <li>Fitted scaling function\uff08\u7528\u4e00\u4e2a\u73b0\u6709\u6a21\u578b\u7684loss\u6765\u62df\u5408\u51fd\u6570\uff09</li> </ul> <ul> <li>Reference loss of Scaling laws:</li> </ul> <p>\\(L(N,D)=E+\\dfrac{A}{N^\\alpha}+\\dfrac{B}{D^\\beta}\\)\uff0c\u5176\u4e2d\\(N\\)\u662f\u6a21\u578b\u5927\u5c0f\uff0c\\(D\\)\u662f\u6570\u636e\u96c6\u5927\u5c0f\uff0c\\(E\\)\u662f\u7406\u60f3\u751f\u6210\u8fc7\u7a0b\u4e2d\u7684loss\uff0c\u5176\u4ed6\u90fd\u662f\u7f29\u653e\u56e0\u5b50\u3002\u5bf9\u4e8e\u4e00\u7c7b\u7684Model\uff0c\u6bcf\u4e2aDomain\u7684scaling factors\u90fd\u662f\u4e0d\u540c\u7684\uff0c\u9700\u8981\u5355\u72ec\u4f30\u8ba1\uff0c\u5e76\u4e14\u9700\u8981\u591a\u4e2a\u4e0d\u540c\u5927\u5c0f\u7684\u6a21\u578b\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u4f7f\u7528\u591a\u4e2a\u6a21\u578b\u7684checkpoints\uff0c\u5728\u6bcf\u4e2aDomain\u7684\u9a8c\u8bc1\u96c6\u4e0a\u8fdb\u884cevaluate\u6765\u62df\u5408scaling factors\u3002</p>"},{"location":"paper/SpGETT/","title":"SpGETT","text":""},{"location":"paper/SpGETT/#efficient-parallel-sparse-tensor-contraction","title":"Efficient Parallel Sparse Tensor Contraction","text":"<p>\u603b\u7ed3\uff1a\u5728\u8c03\u7814\u73b0\u6709\u7684SpGETT\u64cd\u4f5c\u7684\u5b9e\u73b0\u57fa\u7840\u4e0a\uff0c\u63d0\u51fa\u4e86\u57fa\u4e8ehashing\u7684\u65b0SpGETT\u8ba1\u7b97\u65b9\u6cd5\uff0c\u5e76\u5bf9well-known SpGEMM\u7b97\u6cd5\u8fdb\u884c\u4e86\u9002\u914d(main contribution)</p>"},{"location":"paper/SpGETT/#background","title":"Background:","text":"<p>Tensor Contraction: \u8be5\u64cd\u4f5c\u6307\u7684\u662f\u5bf9\u4e8e\u4e00\u4e2a\u591a\u7ef4\u7684Tensor\uff0c\u901a\u8fc7\u5bf9\u4e00\u4e2a\u6216\u591a\u4e2a\u7d22\u5f15\u8fdb\u884c\u6c42\u548c\u6765\u51cf\u5c11\u5f20\u91cf\u7684\u7ef4\u5ea6\uff0c\u800c\u4e0d\u6539\u53d8\u5176\u4ed6\u7ef4\u5ea6\uff0c\u79f0\u4e3aGETT\u64cd\u4f5c\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5047\u8bbeTensor \\(A\\in R^{I\\times J\\times P \\times Q}, B\\in R^{P\\times Q\\times L}\\)\uff0c\u90a3\u4e48\u5c06A\u548cB\u5728P\u548cQ\u7ef4\u5ea6\u4e0a\u8fdb\u884ccontraction\uff0c\u6700\u7ec8\u4f1a\u5f97\u5230Tensor \\(C\\in R^{I\\times J  \\times L}\uff0c\\text{\u5176\u4e2d}c_{ijl}=\\sum_{p=1}^{p=P}\\sum_{q=1}^{q=Q}a_{ijpq}\\cdot b_{pql}\\)</p> <p>\u73b0\u5728\u7684SpGETT\u64cd\u4f5c\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a + \u5c06input tensors\u8f6c\u6362\u4e3amatrices\uff0c\u7136\u540e\u5229\u7528SpGEMM\u7684\u9ad8\u6027\u80fd\u5b9e\u73b0\uff0c\u6700\u7ec8\u5c06\u7ed3\u679c\u77e9\u9635\u8f6c\u6362\u56detensor + \u5728tensor\u8fd9\u4e2a\u7ed3\u6784\u4e2d\u76f4\u63a5\u6267\u884c\u6807\u91cf\u8fd0\u7b97\uff0c\u4e0d\u9700\u8981\u8f6c\u6362\u56de\u77e9\u9635\u3002</p> <p>\u5bf9\u4e8e\u7b2c\u4e00\u79cd\u65b9\u5f0f\uff0c\u4ee5\u4e0a\u8ff0\u7684\u4e24\u4e2aTensor\u4e3a\u4f8b\uff0c\u5bf9\u4e8e\\(c_{ijl}=\\sum_{p=1}^{p=P}\\sum_{q=1}^{q=Q}a_{ijpq}\\cdot b_{pql}\\)\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5c06Tensor A\u91cd\u6392\u4e3a\\(IJ\\times PQ\\)\u7684\u77e9\u9635\uff0cB\u91cd\u6392\u4e3a\\(PQ \\times L\\)\u7684\u77e9\u9635\uff0c\u90a3\u4e48Tensor C\u7684\u8ba1\u7b97\u7ed3\u679c\u5c31\u662f\\(C = AB \\in R^{IJ \\times L}\\)\u7684\u77e9\u9635.</p> <p>\u5b58\u5728\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u5728Sparse\u7684\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u77e9\u9635\u7ef4\u5ea6\u8fc7\u5927\uff0c\u90a3\u4e48\u5c06tuples of contraction indices\u76f4\u63a5\u653e\u5728AB\u77e9\u9635\u4e2d\u662f\u4e0d\u73b0\u5b9e\u7684\uff0c\u6240\u4ee5\u5e94\u8be5\u76f4\u63a5\u4f7f\u7528AB\u4e2d\u542b\u6709\u975e\u96f6\u5143\u7d20\u7684tuples of contraction indices\uff0c\u5728\u4e0a\u8ff0\u4f8b\u5b50\u4e2d\u5c31\u662f\u627e\u5230\u975e\u96f6\u7684(p, q)</p> <p>\u5bf9\u4e8e\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff0c\u5b58\u5728\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u4e24\u4e2aTensor\u9700\u8981\u6267\u884c\u5fc5\u8981\u7684multiply-add operations\uff0c\u4f46\u662f\u9700\u8981\u77e5\u9053\u54ea\u4e9b\u5143\u7d20\u9700\u8981\u76f8\u4e58\u4ee5\u53ca\u5728\u54ea\u91cc\u8fdb\u884cresult adding\u3002</p> <p>Hashing scheme\u5728\u4e24\u79cd\u65b9\u6cd5\u4e2d\u56fa\u6709\u5b58\u5728\u7684\u95ee\u9898\uff0c\u5728SpGETT\u4e2d\u4e0d\u7ecf\u8fc7\u9884\u5904\u7406\uff0c\u8981hash\u7684\u5143\u7d20\u662f\u672a\u77e5\u7684\uff0c\u5e76\u4e14\u53ef\u80fd\u5b58\u5728\u91cd\u590d\u7684\u952e\u503c\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u4e0d\u540c\u7684\u975e\u96f6\u5143\u7d20\u5728A\u4e2d\u53ef\u80fd\u5728\u540c\u4e00\u5217\u6216\u8005\u662fC\u4e2d\u7684\u8f93\u51fa\u5143\u7d20\u65e0\u6cd5\u8bbf\u95ee...\u6240\u4ee5static hashing\u662f\u4e0d\u53ef\u884c\u7684\uff0c\u56e0\u6b64\u4f5c\u8005\u63d0\u51fa\u4e86\u4e00\u79cdparallel dynamic hashing method</p> <p>\u4e00\u4e9bterm\u548cnotation\uff1aTensor\u7684\u6bcf\u4e00\u4e2a\u7ef4\u5ea6\u79f0\u4e3a\u4e00\u4e2amode\uff0c\u5728Tensor Contraction\u64cd\u4f5c\u4e2d\uff0cinput tensors\u4e2d\u7684indices\u79f0\u4e3acontraction indices\uff0coutput tensors\u4e2d\u7684indices\u79f0\u4e3aexternal indices. \\(c_A\\)\u4ee3\u8868A\u4e2d\u7684contration modes, \\(e_A\\)\u4ee3\u8868A\u4e2d\u7684external modes. </p> <p>\u5728\u8fdb\u884crearrange\u65f6\uff0c\u5bf9\u4e8eTensor \\(A \\in R^{n_1\\times n_2 \\times \\cdots \\times n_d}\\)\uff0c\u53ef\u4ee5\u91cd\u6392\u4e3a\u77e9\u9635\\(A \\in R^{{n_{r_1}\\times ... n_{r_p}}\\times {n_{c_1}\\times ... n_{c_{d-p}}} = A_{S_R \\times S_C}}\\), \u524d\u8005\u4ee3\u8868\u77e9\u9635\\(A\\)\u7684\u884cmodes\uff0c\u540e\u8005\u4ee3\u8868\u77e9\u9635\\(A\\)\u7684\u5217modes\uff0c\u5373\u5c06A\u7684modes\u5212\u5206\u4e3a\\(S_R\\)\u548c\\(S_C\\)\u4e24\u90e8\u5206\u3002\u5728\u8fd9\u79cd\u91cd\u6392\u60c5\u51b5\u4e0b\uff0ctensor\u4e2d\u7684\u4e00\u4e2anonzero element \\(a_{i1,...,id}\\)\u5bf9\u5e94\u4e8e\u77e9\u9635\u4e2d\u7684element \\(a_{rc}\\)\uff0cr\u5bf9\u5e94\u4e8e\\(S_R\\)\u4e2d\u7684\u6240\u6709Indices\uff0cc\u5bf9\u5e94\u4e8e\\(S_C\\)\u4e2d\u7684\u6240\u6709Indices. \u4f46\u662f\u663e\u7136\u7684\u662f\uff0c\\(S_R\\)\u548c\\(S_C\\)\u4e2d\u8bb8\u591amodes\u5bf9\u5e94\u7684\u5143\u7d20\u5168\u4e3azero\uff0c\u56e0\u6b64\u9020\u6210\u4e86\u5de8\u5927\u7684\u6d6a\u8d39\u3002</p> <p>\u5728\u8fdb\u884cSpGETT\u64cd\u4f5c\u65f6\uff0cA\u4e2d\u7684external indices\u5bf9\u5e94\u4e8eA\u4e2d\u7684\u884c\uff0ccontraction indices\u5bf9\u5e94\u4e8eA\u4e2d\u7684\u5217\uff0c\u800cB\u5219\u76f8\u53cd\uff0c\u90a3\u4e48\\(c_{ij,kl}=\\sum_{p,q}a_{ij,pq}\\cdot b_{pq,kl}\\).</p> <p>Sparse Tensor\u7684\u5e38\u7528\u5b58\u50a8\u683c\u5f0f\uff1aCOO, F-COO, HiCOO, CSF... COO\u6307\u7684\u662f\u5c06\u4e00\u4e2anonzero\u7684indices in all dimensions\u548cvalue\u5206\u5f00\u5b58\u50a8\u3002</p> <p>Gustavson\u2019s algorithm: SpGEMM\u5e7f\u6cdb\u91c7\u7528\u7684\u6838\u5fc3\u7b97\u6cd5</p> <p></p> <p>\u5728\u8fd9\u4e2a\u7b97\u6cd5\u4e2d\uff0c\u6bcf\u6b21\u53ef\u4ee5\u8ba1\u7b97\u51faOutput Matrix \\(C\\)\u4e2d\u7684\u4e00\u884c\u7ed3\u679c\uff0c\u56e0\u6b64\\(C\\)\u4e2d\u7684\u6bcf\u4e00\u884c\u7684\u5efa\u7acb\u662f\u72ec\u7acb\u7684\uff0c\u56e0\u6b64\u5728\u8fd9\u4e2a\u7ef4\u5ea6\u4e0a\u53ef\u4ee5\u5e76\u884c\u8ba1\u7b97\u3002\u4f46\u662f\u5b58\u5728\u7684\u95ee\u9898\u662f\uff0c\u5bf9\u4e8eSparse Matrix\u6765\u8bf4\uff0c\u6bcf\u4e00\u884c\u7684operation\u6b21\u6570\u662f\u975e\u5e38\u4e0d\u540c\u7684\uff0c\u5982\u679c\u4e0d\u5bf9Input Matrix\u8fdb\u884c\u68c0\u67e5\uff0c\u5c31\u65e0\u6cd5\u5f97\u77e5Output Matrix\u7684\u7a00\u758f\u6027\u60c5\u51b5\u3002</p> <p>\u6240\u4ee5\u5728SpGEMM\u7684\u5b9e\u73b0\u4e2d\uff0c\u5b9e\u73b0\u4e86SPA(Sparse Accumulator)\u6765\u5904\u7406\u5feb\u901f\u5bfb\u627e\u6dfb\u52a0\u5230C\u4e2dexisting entry\u7684\u6807\u91cf\u8ba1\u7b97\u6216\u8005\u662f\u521b\u5efa\u8be5existing entry\uff0c\u5b83\u4f1a\u5728C\u4e2d\u4e00\u884c\u7684\u6240\u6709nonzeros\u8ba1\u7b97\u51fa\u6765\u540e\u8fdb\u884cefficient accumulation. SPA\u7684\u5b9e\u73b0\u4e3b\u8981\u6709\u56db\u79cd\u5f62\u5f0f\uff1aheap, hashing, sorting, dense array.</p> <p>\u73b0\u6709\u7684dynamic perfect hashing method: Cuckoo hashing</p> <ul> <li>\u5728\u8be5\u54c8\u5e0c\u65b9\u6cd5\u4e2d\uff0c\u4f7f\u7528\\(l\\)\u4e2a\u54c8\u5e0c\u51fd\u6570\uff0c\u5047\u8bbe\u4f7f\u7528\u4e24\u4e2a\u54c8\u5e0c\u51fd\u6570\u3002\u5bf9\u4e8e\u4e00\u4e2aarriving item \\(x\\)\uff0c\u4f1a\u8ba1\u7b97\u4e24\u4e2a\u54c8\u5e0c\u503c\u4f5c\u4e3a\u7d22\u5f15\u4f4d\u7f6e\uff0c\u7136\u540e\u5c06\u8fd9\u4e2aItem\u653e\u7f6e\u5230\u5176\u4e2d\u7684\u4e00\u4e2a\u4f4d\u7f6e\u3002\u5728\u67e5\u8be2\u65f6\uff0c\u53ea\u9700\u8981\u68c0\u67e5\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u3002\u5f53\u4e24\u4e2a\u4f4d\u7f6e\u90fd\u5df2\u7ecf\u88ab\u5360\u636e\u65f6\uff0c\u90a3\u4e48\u4f1a\u4ece\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\u4e2d\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u4f4d\u7f6e\u653e\u7f6eitem \\(x\\)\uff0c\u5c06\u539f\u672c\u7684item \\(y\\)\u79fb\u52a8\u5230\u539f\u5148\u4e24\u4e2a\u4f4d\u7f6e\u4e2d\u5269\u4f59\u7684\u4f4d\u7f6e\u3002\u5982\u679citem \\(y\\)\u7684\u5269\u4f59\u4f4d\u7f6e\u5df2\u7ecf\u88ab\u5360\u636e\u4e86\uff0c\u90a3\u4e48\u5c31\u5faa\u73af\u8be5\u8fc7\u7a0b\uff0c\u76f4\u5230item \\(z\\)\u88ab\u632a\u5230\u5b83\u5bf9\u5e94\u7684\u5269\u4f59\u4f4d\u7f6e\u6216\u8005\u9700\u8981rehash.</li> </ul>"},{"location":"paper/SpGETT/#spgfett-to-spgemm","title":"SpGFETT to SpGEMM","text":"<p>\u5bf9\u4e8eTensor \\(A, B\\)\uff0c\u5c06\u5176\u8f6c\u6362\u4e3a\u77e9\u9635\\(A_{e_A\\times c_A}, B_{c_B\\times e_B}\\)\u3002\u4f46\u662f matricization_\u540e\uff0cA\u548cB\u4e2d\u4f1a\u6709\u5f88\u591a\u7684\u7a7a\u884c\u548c\u7a7a\u5217\uff0c\u6240\u4ee5\u9700\u8981\u53ea\u4fdd\u7559nonempty rows and columns. \u90a3\u4e48\u5bf9\u4e8enonempty subtensors \\(A_{e_A,:}, B_{:,e_B}\\), \u5206\u522b\u4ee3\u8868A\u4e2d\u7684\u975e\u96f6\u5217\u548cB\u4e2d\u7684\u975e\u96f6\u884c\uff0c\u8ba1\u7b97\\(C=AB\\)\u65f6\u9700\u8981\u6ee1\u8db3_consistency condition.</p> <p>\u5177\u4f53\u6307\u7684\u662f\uff0c\u5bf9\u4e8eA\u4e2d\u7684\u4e00\u4e2anonzero \\(a_{i,j}\\)\uff0c\u5982\u679c\u6574\u6570j\u4f5c\u4e3a\u4e86\u8fd9\u4e2a\u5143\u7d20\u7684column index\uff0c\u90a3\u4e48B\u4e2d\u7684\u6240\u6709nonzero \\(b_{j,k}\\)\u9700\u8981\u5c06\u6574\u6570j\u4f5c\u4e3arow index.</p> <p>\u5728\u5c06\u8ba1\u7b97\u540e\u7684\u7ed3\u679c\u77e9\u9635\\(C\\)\u8f6c\u6362\u6210Tensor \\(C\\)\u65f6\uff0c\u9700\u8981\u5c06\u7ed3\u679c\u77e9\u9635\\(C\\)\u7684\u975e\u7a7arow index\u548ccolumn index\u8f6c\u6362\u4e3a\u539f\u59cb\u7684|e_A|-tuple i\u548c|e_B|-tuple j\uff0c\u79f0\u4e3a_tensorization_\u3002\u56e0\u6b64\u9700\u8981\u5c06|e_A|-tuple i\u6620\u5c04\u5230integer i\uff0c\u5e76\u9700\u8981inverse of this map\u6765\u8fdb\u884ctensorization.</p> <p>\u901a\u5e38\u4f7f\u7528sorting\u6216\u8005hashing\u6765\u5904\u7406\u7c7b\u4f3c\u7684\u77e9\u9635A\u548cB\u7684consistent matricization\uff0c\u4ee5\u53caC\u7684coupled tensorization</p> <p>SB-Smat \u5728\u8be5\u7b97\u6cd5\u4e2d\uff0c\u5c06A\u548cB\u7684contraction modes\u4e2d\u7684nonzeros\u7684index\u8fdb\u884csort\uff0c\u4ece\u800c\u5f97\u5230A\u4e2d\u5217\u548cB\u4e2d\u884c\u7684consistent numbering.\u7136\u540e\uff0c\u6bcf\u4e2atensor\u5bf9\u5e94external modes\u4e2dnonzeros\u7684indices\u4e5f\u4f1a\u8fdb\u884csort\uff0c\u4e3a|e_A|-tuple \u548c|e_B|-tuple\u5f97\u5230interger id. \u5e76\u4e14\u9700\u8981\u7ef4\u62a4\u4e00\u4e2areverse map\u6765\u6620\u5c04\u77e9\u9635C\u4e2d\u7684row\u548ccolumn id\u5230\u539f\u6765\u7684tensor tupl e_A|e_B.</p> <p></p> <p>SB-Hmat \u5728\u8fdb\u884cconsistent matricization\u65f6\uff0c\u5c06A\u548cB\u7684contraction indices\u52a0\u5165\u5230\u4e00\u4e2ahash table\u4e2d\uff0c\u4f7f\u7528dynamic hashing method. \u7ef4\u62a4\u4e86\u4e00\u4e2aindirection array(A and B combined)\u6765\u5b58\u50a8unique contraction indices \\(c_A\\)\u5df2\u5206\u914d\u7684\u8fde\u7eedid. </p> <p>\u5728\u8fdb\u884chash\u65f6\uff0c\u5c06contraction indices\u4f5c\u4e3akey\uff0c\u5f53\\(c_A\\)\u4e0d\u5b58\u5728\u5728hash_table\u65f6\uff0c\u5c06\\(c_A\\)\u52a0\u5165\u5230hash table\u4e2d\uff0c\u5e76\u5c06new id\u5b58\u50a8\u5230indirection array\u4e2d\\(c_A\\)\u5bf9\u5e94\u7684\u4f4d\u7f6e\u3002</p> <p>\u800c\u5bf9\u4e8eexternal indices\u7684id\uff0c\u4e3aA\u548cB\u5206\u522b\u521b\u5efa\u4e00\u4e2ahash table\uff0c\u5f53\\(e_A\\)\u5728hash table\u4e2d\u4e0d\u5b58\u5728\u65f6\uff0c\u5c06\\(e_A\\)\u52a0\u5165\u5230hash table\u4e2d\uff0c\u5e76\u628a\u751f\u6210\u7684id\u4f5c\u4e3aCOO_A\u4e2d\u7684row-id. \u5e76\u5c06\\(c_A\\)\u7684id\u4f5c\u4e3aCOO_A\u7684column-id. \u540c\u7406\u4e5f\u7ef4\u62a4\u4e00\u4e2areverse map\u5b58\u50a8external indices\u5230\u5176id\u7684\u6620\u5c04\u3002</p> <p></p>"},{"location":"paper/SpGETT/#sb-tc","title":"SB-TC","text":"<p>\u672c\u6587\u63d0\u51fa\u7684parallel SpGETT\u65b9\u6cd5\u76f4\u63a5\u5728tensor\u7ef4\u5ea6\u8fdb\u884c\u8ba1\u7b97\uff0c\u5229\u7528Gustavson\u7b97\u6cd5\u7684\u601d\u60f3\u6765\u751f\u6210output sensor, subtensor by subtensor. </p> <p>\u5728\u8be5\u7b97\u6cd5\u4e2d\uff0c\u6bcf\u6b21\u5bf9subtensors \\(C_{e_A,:}\\)\u8fdb\u884cSpGETT\u64cd\u4f5c\uff0c\u6bcf\u4e2aresultant tensor\u53ef\u4ee5\u72ec\u7acb\u7684\u6784\u5efa\u3002\u90a3\u4e48\u5982\u4f55\u6784\u5efa\u5462\uff0c\u5bf9\u4e8e\\(A_{e_A,:}\\)\u4e2d\u7684\u6240\u6709nonzeros\uff0c\u4f1a\u548c\u5bf9\u5e94\\(B_{c_B,:}\\)\u4e2d\u7684\u6240\u6709nonzeros\u8fdb\u884c\u76f8\u4e58\u3002\u7136\u540e\u5229\u7528SPA\u8fdb\u884c\u76f8\u52a0\uff0c\u6700\u540e\u5c06SPA\u7684\u7ed3\u679c\u5199\u51fa\u9053\\(C_{e_A,:}\\)\u4e2d</p> <p>\u5728\u904d\u5386\\(A_{e_A,:}\u4e2d\u7684nonzeros\u65f6\uff0c\u901a\u8fc7\u5efa\u7acbhash data structure\uff0c\u4f7f\u7528external indices of nonzeros\u4f5c\u4e3akey\uff0c\u6bcf\u4e2aindex\u6307\u5411\u4e00\u4e2adistinct location. \u8fd9\u4e2astructure\u4e2d\u7684\u4e00\u4e2alocation\u6307\u5411\u4e86\u4e00\u4e2a\u8fde\u7eed\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u5b58\u50a8\u4e86A\u4e2d\u6240\u6709\u5177\u6709\u76f8\u540c\\)e_A$\u7684nonzeros\uff0c\u7b49\u540c\u4e8e\u77e9\u9635\u5316\u540e\u77e9\u9635A\u4e2d\u7684\u4e00\u884c\uff0c\u6240\u4ee5\u5c06\u904d\u5386\u8f6c\u5316\u4e3a\u4e86\u8bbf\u95ee\u4e00\u4e2a\u8fde\u7eed\u6570\u7ec4\u3002</p> <p>\u5728\u5c06\\(a_{e_A,c_A}\\)\u4e0e\\(B_{c_B,:}\\)\u4e2d\u7684nonzero\u8fdb\u884c\u4e58\u6cd5\u8ba1\u7b97\u65f6\uff0c\u9700\u8981\u5c06subtensor of B\u4e2d\u7684nonzerons\u805a\u96c6\u5728\u4e00\u8d77\u3002\u6240\u4ee5\u5efa\u7acb\u4e86\u53e6\u4e00\u4e2ahash structure\uff0c\u4f7f\u7528contraction indices of its nonzeros\u4f5c\u4e3akey\uff0c\u548c\u4e0a\u8ff0\u7c7b\u4f3c\u3002</p> <p>\u7ef4\u62a4\u4e86\u4e00\u4e2a\u52a8\u6001\u7684\u54c8\u5e0c SPA\u6765\u5b58\u50a8\\(a_{eA,cA} . b_{cB,eB}\\)\u7684\u4e58\u79ef\u7ed3\u679c\uff0c\u4f7f\u7528B\u4e2dexternal modes\u7684nonzeros\u5bf9\u5e94\u7684Indices\u4f5c\u4e3aHash key. \u6bcf\u5f53\u4ea7\u751f\u4e00\u4e2a\u5b8c\u6574\u7684subtensor\uff0c\u5c31\u5199\u5165\u5230Tensor \\(C\\)\u4e2d\u3002 </p>"},{"location":"paper/SpGETT/#preprocessing","title":"Preprocessing","text":"<ul> <li>\u8bc4\u4f30output tensor\u7684\u5185\u5b58\u9700\u6c42\uff0capply the probabilistic estimation method proposed by Cohen\uff0c\u5c06\u5176\u4eceSparse matrices\u5e94\u7528\u5230tensors\u4e0a\u3002\u6765\u9884\u4f30\\(C\\)\u548c\\(C_{e_A}\\)\u4e2d\u7684nonzeros\u6570\u91cf</li> <li>Load balancing: \u4e3a\u4e86\u51cf\u8f7b\u7531\u4e8e\u8f93\u51fa\\(C_{e_A}\\)\u5411\u91cf\u6240\u9700\u7684\u64cd\u4f5c\u6b21\u6570\u4e0d\u540c\u6240\u5e26\u6765\u7684\u5f71\u54cd\uff0c\u901a\u8fc7\u904d\u5386\\(A_{e_A,:}\\) subtensor\u4e2d\u7684\u6240\u6709nonzeros\uff0c\u8ba1\u7b97\u5bf9\u5e94\\(B_{c_B,:}\\)\u4e2d\u7684nonzeros\u5143\u7d20\u7684\u6570\u91cf\uff0c\u4ece\u800c\u5f97\u5230\u8fd9\u4e2asubtensor\u7684flops\u3002\u7136\u540e\u5bf9\u6240\u6709\u7684subtensor\u8fdb\u884c\u6b64\u64cd\u4f5c\u4fbf\u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u6839\u636e\u8fd9\u4e2a\u524d\u7f00\u548c\u7ed9\u6bcf\u4e2athread\u5206\u914dstarting subtensor\u8ba9flops\u5c3d\u91cf\u5e73\u5747.</li> </ul>"},{"location":"paper/SpGETT/#optimizations-for-spgett","title":"Optimizations for SpGETT","text":"<ul> <li>Handling subtensors \\(A_{e_A,:}\\) of A with a single nonzero: \u5bf9\u4e8e\u53ea\u6709\u4e00\u4e2anonzero\u7684subtensors\uff0c\u4e0d\u9700\u8981\u7ef4\u62a4\u4e00\u4e2aSPA\uff0c\u76f4\u63a5\u5c06\u7ed3\u679c\u5199\u5165\u5230output subtensor\u5bf9\u5e94\u4f4d\u7f6e\u5373\u53ef\u3002</li> <li>Reducing the number of lookups to the sparse accumulator: \u57fa\u4e8e\u4ee5\u4e0b\u89c2\u5bdf\uff0c\u5bf9\u4e8esubtensors \\(A_{e_A,:}\\)\u4e2d\u7684nonzeros\uff0c\u5176\u4e2d\u7684\u7b2c\u4e00\u4e2anonzero\u53ef\u4ee5\u76f4\u63a5\u5c06\u5b83\u7684\u4e58\u6cd5\u7ed3\u679c\u5199\u5165\u5230Output tensor\uff0c\u56e0\u4e3a\u6b64\u65f6SPA\u4e2d\u5728\u5b83\u4e4b\u524d\u6ca1\u6709\u6570\u636e\u3002\u56e0\u6b64\uff0c\u53ef\u4ee5\u901a\u8fc7preprocessing\u5c06\u5bf9\u5e94B\u4e2dnonzeros\u6700\u5927\u7684A\u4e2d\u7684nonzero\u653e\u5728\u7b2c\u4e00\u4e2a.</li> </ul>"},{"location":"paper/SpGETT/#sbhash","title":"SBhash","text":"<p>a dynamic perfect hashing method. \u5177\u4f53\u6307\u7684\u662f\u5bf9\u8fd9\u4e2ahash data structure\u7684lookup\u65f6\u95f4\u5728\u6700\u574f\u60c5\u51b5\u4e0b\u662f\u5176\u4e2d\u7684item size\u7684\u5e38\u6570\u65f6\u95f4\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a\\(d\\) indices\u7684data\uff0c\u6700\u574f\u7684\u5e38\u6570\u65f6\u95f4\u5c31\u662f\\(O(d)\\) operations.</p> <p>\u5e76\u4e14\\(SBhash\\)\u652f\u6301\u652f\u6301\u987a\u5e8f\u63d2\u5165(Batched Inseration)\uff0c\u5e76\u4e14Batched Inseration\u53ef\u4ee5\u5e76\u884c\u8fdb\u884c</p>"},{"location":"paper/SpGETT/#design","title":"Design","text":"<p>SBhash\u662f\u4e00\u4e2a\u4e24\u5c42\u7684\u54c8\u5e0c\u7ed3\u6784\uff0c\u7528\u4e00\u4e2a\u542b\u6709\\(n_h\\) indices\u7684set \\(H\\)\u6765\u54c8\u5e0c\u7ed9\u5b9a\u7684tensor\u4e2d\u7684nonzeros. </p> <p>\u7b2c\u4e00\u5c42\u662fa set of buckets\uff0c\u6bcf\u4e2abucket\u6709\u5f88\u591aslots\uff0c\u6bcf\u4e2a$n_h $ tuple\u90fd\u4f1a\u6620\u5c04\u5230\u4e00\u4e2abucket\u4e2d\uff0c\u7136\u540e\u518d\u5206\u914d\u7ed9slots\u3002\u5f53\\(n_h&lt;d\\)\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u53ea\u53d6\u4e86tuple\u7d22\u5f15\u7684\u4e00\u90e8\u5206\u6765\u54c8\u5e0c\uff0c\u5c31\u4f1a\u6709\u591a\u4e2anonzero\u6620\u5c04\u5230\u540c\u4e00\u4e2aslot\u4e2d\u3002\u6240\u4ee5\u6bcf\u4e2aslot\u6307\u5411\u4e00\u7ec4nonzeros\uff0c\u5c06\u8fd9\u4e9bnonzeros\u7ef4\u62a4\u6210\u4e00\u4e2a\u8fde\u7eed\u6570\u7ec4\u5e76\u5b58\u50a8\u6bcf\u4e2anonzeros\u7684\u76f8\u5173\u4fe1\u606f\u4f5c\u4e3a\u8f85\u52a9\u5217\u8868\u3002</p> <p>Hash function in first level: \\(h(k,x,p,n)=(k^Tx_H\\ mod\\ p)mod\\ n\\)</p> <p>\u5728\u8fd9\u4e2a\u54c8\u5e0c\u51fd\u6570\u4e2d\uff0cn\u662fbuckets\u7684\u6570\u91cf\uff0cp\u662f\u4e00\u4e2a\u6bd4n\u5927\u7684\u7d20\u6570\uff0cvector k\u662f\u4e00\u4e2a\\(n_h\\) tuple\uff0c \\(x_h\\)\u662fx\u7528\u4e8ehashing dimensions\u7684indices. </p> <p>\u7b2c\u4e8c\u5c42\u4e2d\uff0c\u8003\u8651\u5230\u6bcf\u4e2aBucket \\(B_i\\)\u4f1a\u5206\u5230\\(b_i\\)\u4e2a\u4e0d\u540c\u7684tuple\uff0c\u5bf9\u4e8e\u90a3\u4e9b\\(b_i\\)\u5c0f\u4e8e4\u7684bucket\uff0c\u76f4\u63a5\u5c06bucket\u4e2d\u7684slots\u7ef4\u62a4\u6210\u4e00\u4e2a\u8fde\u7eed\u6570\u7ec4\u3002\u800c\u5bf9\u4e8e\u5176\u4ed6\u7684bucket\uff0c\u8fdb\u884csecond hashing. \u5177\u4f53\u6765\u8bf4\u4f7f\u7528\u4e86Cuckoo hashing\u7684\u53d8\u4f53\uff0c\u5728\u6bcf\u4e2aBucket\u4e2d\uff0c\u5b58\u50a8\u4e86\u4e24\u4e2arandom\u7684key\u503c\uff0c\u5e76\u4e14\u8fd9\u79cdbucket\u7ef4\u62a4\u7684slots\u662f\u5927\u4e8e\\(b_i\\)\u4e24\u500d\u7684\u6700\u5c0f\u76842\u7684\u500d\u6570(\u4fdd\u8bc1\u67e5\u627e\u548c\u63d2\u5165\u6548\u7387)\u3002</p> <p>\u5728SB-Hmat\u4e2d\u5b58\u50a8\u7684\u662findices tuple\u7684id\uff0c\u5728SB-TC\u4e2d\u5b58\u50a8\u7684\u662f{\\, value} <p></p> <p>Cuckoo hashing specifications</p> <p>\u8003\u8651\u4e00\u4e2aitem\uff0c\u73b0\u5728\u6709\\(l\\) \u4e2aHashing functions\uff0c\u90a3\u4e48\u5c31\u4f1a\u5f97\u5230\\(l\\) \u4e2a\u5bf9\u5e94\u7684slots\u3002\u90a3\u4e48\u5982\u4f55\u63d2\u5165\u5462\uff1f\u76f8\u8f83\u4e8e\u539f\u5148\u7684\u968f\u673a\u9009\u53d6\uff0c\u672c\u65b9\u6cd5\u8bbe\u8ba1\u4e00\u79cd\u63d2\u5165\u65b9\u6cd5</p> <p>Insertion: \u5bf9\u4e8e\u4e00\u4e2ad indices\u7684item\uff0c\u4e24\u4e2ahashing function\u4f1a\u4ece\u4e2d\u9009\u53d6\u4e24\u4e2a\u4e0d\u540c\u7684\\(n_h\\) tuples\u6765\u8fdb\u884chashing\u3002\u5047\u8bbebucket \\(B_i\\)\u6709\\(N_s\\)\u4e2aslots\uff0c\u9700\u8981\u5c06\\(b_i\\)\u4e2adistinct \\(n_h\\) tuples\u6620\u5c04\u5230\u5176\u4e2d\u3002</p> <p>Hash function in second level: \\(h_1(k_1^i, x, p, N_s)=(k_1^ix_H\\ mod \\ p)\\ mod N_s\\) and \\(h_2(k_2^i, x, p, N_s)=(k_2^ix_H\\ mod \\ p)\\ mod N_s\\)</p> <p>\u5176\u4e2d\\(N_s\\)\u662f\u5927\u4e8e\\(2b_i\\)\u7684\uff0c\\(k_1^i\u548ck_2^i\\)\u662f\u4e24\u4e2a\u4e0d\u540c\u7684hashing key\uff0c\u5728\u672c\u65b9\u6cd5\u4e2d\uff0c\u5c06slots\u548citems\u4e4b\u95f4\u7684\u8054\u7cfb\u770b\u4f5c\u662f\u4e00\u4e2abiparatte graph\uff0c\u90a3\u4e48\u4e00\u4e2aitem\u7684insertion\u5c31\u53ef\u4ee5\u770b\u4f5c\u662fgraph\u4e2d\u4e24\u4e2a\u5b50\u96c6(item and slots)\u4e4b\u95f4\u7684\u8fde\u7ebf(vertex match), \u6bcf\u6761edge\u53ef\u4ee5\u901a\u8fc7hashing function\u5373\u65f6\u8ba1\u7b97\u3002</p> <p>\u5f53\u4e00\u4e2aitem\u5bf9\u5e94\u7684\u4e24\u4e2a\u4f4d\u7f6e\u90fd\u88ab\u5360\u636e\u65f6\uff0c\u9996\u5148\u4f7f\u7528\\(h_1(x)\\)\u6765\u5bfb\u627e\u5f53\u524d\u5339\u914d\u7684argumenting path(\u589e\u5e7f\u8def\u5f84)\uff0c\u5982\u679c\u65e0\u6cd5\u627e\u5230\u5219\u4f7f\u7528\\(h_2(x)\\)\u6765\u5bfb\u627eargumenting path. \u5728\u5b9e\u9645\u5b9e\u73b0\u4e2d\uff0c\u5728\u4e0d\u540c\u7684BFS/DFS\u904d\u5386\u4e2d\u4e3aaugmentation\u7ef4\u62a4\u4e00\u4e2aslots(size of \\(N_s\\))\u7684\u6807\u8bb0\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u5728\u4e0d\u540c\u7684\u904d\u5386\u4e2d\u590d\u7528\u3002\u5e76\u7ef4\u62a4\u4e86\u4e00\u4e2aargumenting array(size of \\(n_I\\))\u6765\u7ef4\u62a4argumenting path\u7684item\uff0c\u4ece\u800c\u5728\u4e0d\u540c\u7684argumentation\u4e2d\u590d\u7528\u3002</p> <p>\u5982\u679c\u4e24\u6b21\u90fd\u6ca1\u627e\u5230\uff0c\u5c31\u8fdb\u884crehashing\uff0c\u5728\u8fdb\u884crehashing\u65f6\uff0c\u4f1a\u9996\u5148\u5bf9hashing function\u8fdb\u884c\u66f4\u65b0\uff0c\u5373\u8c03\u6574\u5bf9\u5e94bucket slots\u5927\u5c0f\u4e3a\u7b2c\u4e8c\u79cdbucket\u3002</p> <p>Parallel batch insertion</p> <p>SBhash\u652f\u6301batch insertion\uff0c\u5177\u4f53\u8fc7\u7a0b\u662f\u9996\u5148\u5e76\u884c\u4e3a\u6bcf\u4e2aitem\u8ba1\u7b97\u51fabucket id\uff0c\u7136\u540e\u5c06\u8fd9\u4e9bbucket id\u586b\u5145\u5230\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u6700\u540e\u5c06\u8fd9\u4e9bitem\u5e76\u884c\u63d2\u5165\u5230SBhash structure\u4e2d\uff0c\u8ba9\u6bcf\u4e2a\u5904\u7406\u76f8\u540c\u6570\u91cf\u7684item\u3002</p> <p>\u4e3a\u4e86\u4fdd\u8bc1\u591a\u4e2aitem\u5728\u586b\u5145\u5230same slot\u65f6\u7684\u7ebf\u7a0b\u5b89\u5168\uff0c\u4e3a\u6bcf\u4e2aslots\u7684auxiliary list(dynamic array)\u7ef4\u62a4\u4e00\u4e2aatomic counting number\uff0c\u8bb0\u5f55\u5f53\u524dlist\u4e2d\u7684item\u6570\u91cf, resize list\u65f6\u5bf9slots\u4e0a\u9501\uff0crehashing\u65f6\u5bf9bucket\u4e0a\u9501\u3002</p> <p>Memory Requirement of SBhash</p> <ul> <li>SB-Hmat: \u5bf9\u4e8econtraction indices\uff0c\u7a7a\u95f4\u9700\u6c42\u662f\\(2\\times  (nnz(A)+nnz(B))+N_{TOS}\\), \u5bf9\u4e8eexternal indices, \u7a7a\u95f4\u9700\u6c42\u662f\\(\\(2\\times  (nnz(A)+nnz(B)+N_{TOS})\\), \u5176\u4e2d\\)N_{TOS}$\u6307\u7684\u662fbucket\u4e2d\u603b\u5171\u5360\u636e\u7684location(slots)</li> </ul> <ul> <li>SB-TC: <ul> <li>\\(H_A\\)\u9700\u8981\\((d+1)nnz(A)+N){TOS}\\) integers and \\(nnz(A)\\) doubles, \\(H_B\\)\u540c\u7406\uff0c\u5177\u4f53\u6765\u8bf4\u8003\u8651\u4e86bucket\u6570\u76ee\uff0coccupied location\u548cauxiliary list\u4e2d\u5b58\u50a8\u5143\u7d20\u7684\u5185\u5b58</li> <li>SPA: \\(|e_B|\\times nnz(C_{eA,:}) +  \\tilde{nnz}(C_{eA,:})  + N_{TOS}\\) integers and \\(nnz(C_{e_A,:})\\) doubles</li> </ul> </li> </ul>"},{"location":"paper/SparseGPT/","title":"SparseGPT:Massive Language Models Can Be Accurately Pruned in One-Shot","text":"<p>\u6838\u5fc3\uff1a\u901a\u8fc7\u8fd1\u4f3c\u7b97\u6cd5\u89e3\u51b3\u4e86Reconstruction\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8fc7\u9ad8\u7684\u95ee\u9898\uff0c\u89e3\u51b3\u4e86Hessians\u77e9\u9635\u5728\u4e0d\u540c\u884c\u4e4b\u95f4\u4e0d\u540c\u6240\u5f15\u5165\u7684\u6c42\u9006\u590d\u6742\u5ea6\u3002</p> <p>Post-Training Pruning: PTP\u95ee\u9898\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u9884\u8bad\u7ec3\u597d\u7684\u6a21\u578b\uff0c\u5728\u7ed9\u5b9a\u7684Calibration data\u4e0b\u5bfb\u627e\u8f93\u51fa\u53d8\u5316\u6700\u5c0f\u7684\u7a00\u758f\u6a21\u578b\u3002</p> <p>Layer-Wise Pruning: \u5bf9\u4e8ePTP\u6765\u8bf4\uff0c\u901a\u5e38\u5206\u89e3\u4e3a\u5206\u5c42\u7684\u5b50\u95ee\u9898\u3002\u5bf9\u4e8e\u6bcf\u4e2alayer \\(l\\)\uff0c\u5c31\u662f\u8981\u627e\u5230\u4e00\u4e2a\u5177\u6709\u76ee\u6807\u7a00\u758f\u5ea6\u7684\u6700\u4f18\u63a9\u7801\\(M_l\\)\u548c\u66f4\u65b0\u540e\u7684\u6743\u91cd\\(W_l\\)\u8ba9\u8fd9\u4e2a\u5f0f\u5b50\u4ee3\u8868\u7684loss\u6700\u5c0f\uff1a(\u5373\u6bcf\u4e00\u5c42\u7684\u8f93\u51fa\u76f8\u8f83\u4e8e\u539f\u6765\u7684\u8f93\u51fa)</p> <p></p> <p>Mask Selection &amp; Weight Reconstruction\uff1a\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u89e3\u51b3Pruning\u95ee\u9898\u5206\u4e3a\u4e24\u4e2a\u6b65\u9aa4\uff0c\u7b2c\u4e00\u4e2a\u6b65\u9aa4\u662f\u6839\u636e\u663e\u8457\u6027\u6807\u51c6\u627e\u5230\u4e00\u4e2aMask\uff0c\u7b2c\u4e8c\u4e2a\u6b65\u9aa4\u662f\u5728Mask\u4e0d\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u4f18\u5316\u5269\u4e0b\u672a\u4fee\u526a\u7684\u6743\u91cd\u3002</p> <p>Fast Approximate Reconstruction</p> <p>\u5bf9\u4e8e\u56fa\u5b9a\u7684pruning mask M\uff0c\u53ef\u4ee5\u901a\u8fc7\u6c42\u89e3\u5bf9\u5e94\u77e9\u9635\u6bcf\u884c\\(w^i\\)\u7684\u7a00\u758f\u91cd\u6784\u95ee\u9898\uff08\u4e00\u4e2a\u7ebf\u6027\u5e73\u65b9\u8bef\u5dee\u95ee\u9898\uff1f\uff09\u6765\u7cbe\u786e\u8ba1\u7b97mask\u4e2d\u6240\u6709\u6743\u91cd\u7684\u6700\u4f18\u503c\uff0c\u5373\u7528\u6807\u51c6\u7684\u7ebf\u6027\u56de\u5f52\u516c\u5f0f\uff1a</p> <p>\\(w^i_{M_i}=(X_{M_i}X^T_{M_i})^{-1}X_{M_i}(w_{M_i}X^T_{M_i})\\)\uff0c\u5176\u4e2d\\(X_{M_i}\\)\u4ee3\u8868\u7684\u662fsubset of input features\u4e2d\u6ca1\u88ab\u526a\u6389\u7684\u90e8\u5206\uff0c\u800c\\(w_{M_i}\\)\u662f\u5b83\u4eec\u5bf9\u5e94\u7684weight\u3002</p> <p>\u7531\u4e8e\u6c42\u89e3\\(H_{M_i}=X_{M_i}X^T_{M_i}\\)\u7684\u9006\u77e9\u9635\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f\\(O(d_{row}*d_{col}^3)(d_{row}\\approx d_{col}\\approx d_{hidden})\\)\uff0c\u51e0\u4e4e\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\uff0c\u56e0\u4e3a\u6bcf\u4e00\u884c\u7684Pruning mask\u4e0d\u540c\uff0c\u6240\u4ee5\u6c42\u9006\u9700\u8981\u6bcf\u884c\u5bf9\u4e00\u4e2a\\(d_{col}\\times d_{col}\\)\u7684\u77e9\u9635\u5355\u72ec\u6c42\u9006\u3002\u5982\u679c\u884c\u63a9\u7801\u90fd\u76f8\u540c\uff0c\u90a3\u4e48\u53ea\u8ba1\u7b97\u4e00\u4e2a\u5355\u72ec\u7684\u5171\u4eab\u9006\u5373\u53ef\u3002</p> <p>OBS\u65b9\u6cd5\uff1a\u4e00\u4e2a\u8fed\u4ee3\u5f0f\u7684\u884c\u6743\u91cd\u91cd\u5efa\u65b9\u6cd5\u3002\u5047\u8bbe\\(w_m\\)\u662f\u5bf9\u5e94\u63a9\u7801\u786e\u5b9a\u540e\u7684\u6743\u91cd\uff0c\u90a3\u4e48\\(w+\\delta_m\\)\u5c31\u662f\u6700\u4f18\u6743\u91cd\u91cd\u5efa\u3002\u540c\u7406\uff0c\u5bf9\u4e8e\u7ed9\u5b9a\u63a9\u7801\\(M\\)\u7684\u6700\u4f18\u7a00\u758f\u91cd\u6784\\(w^{(M)}\\)\uff0c\u540c\u6837\u8fd0\u7528OBS\u53ef\u4ee5\u627e\u5230\u6700\u4f18\u63a9\u7801\u91cd\u6784\\(M'=M-{m}\\)\u3002</p> <p></p> <p>\u901a\u8fc7\u4f7f\u7528OBS\uff0c\u53ef\u4ee5Iterative(\u9010\u884c\u5730)\u8fdb\u884c\u6743\u91cd\u4fee\u526a\uff0c\u4ece\u800c\u548c\u4e4b\u524d\u4e00\u6837\u5bf9\u4e8e\u56fa\u5b9a\u7684\u63a9\u7801M\uff0c\u53ef\u4ee5\u540c\u6837\u7684\u91cd\u5efa\u5f97\u5230\u76f8\u540c\u7684\u6700\u4f18\u89e3\u3002</p> <p>OPU\u5c40\u90e8\u66f4\u65b0\uff1a\u8003\u8651\u5728OBS\u4e2d\u53ea\u66f4\u65b0\u53ef\u7528\u53c2\u6570\u7684\u4e00\u4e2a\u5b50\u96c6\\(U\\in M\\)\u3002\u57fa\u4e8e\\(|U|&lt;|M|\\)\u65f6\uff0c\u6c42\u9006\\(H_U\\)\u4f1a\u6bd4\\(H_M\\)\u66f4\u5feb\u7684 \u4e8b\u5b9e\u3002\u5176\u5b9e\u5173\u952e\u5728\u4e8e\u5b9a\u4e49\u4e86\u8fd9\u6837\u4e00\u4e2a</p> <p>Hessian\u540c\u6b65\uff1a\u57fa\u4e8eOBS\u548cOPU\uff0cSparseGPT\u5b9e\u73b0\u4e86Hession\u7684\u540c\u6b65\u3002\u6ca1\u592a\u770b\u61c2.....\u4ece\u6a2a\u7740\u526a\u53d8\u6210\u4e86\u7ad6\u7740\u526a\uff1f</p> <p>\u9012\u5f52\u5b9a\u4e49\u5b50\u96c6\u5e8f\uff1a\\(U_{j+1}=U_j-{j}, with\\ U_1=\\{1,\\dots,d_{col}\\}\\)\u3002\u8fd9\u4e9b\u5b50\u96c6\u7684Hessian\u77e9\u9635\u7684\u9006\\((H_{U_j})^{-1}=((XX^T)_{U_j})^{-1}\\)\u53ef\u4ee5\u5728W\u7684\u5404\u4e2a\u884c\u95f4\u5171\u4eab\uff08\u56e0\u4e3a\u8f93\u5165\u90fd\u662f\u4e00\u6837\u7684\uff09, \u8bb0\\(B=(H_{U_j})^{-1}\\), \u53ef\u4ee5\u5f97\u5230\u66f4\u65b0\u540e\u7684\\((H_{U_{j+1}})^{-1}=(B-\\dfrac{1}{[B]_{11}}\\cdot B_{:,1}B_{1,:})_{2:,2:}\\)\uff0c\u5176\u4e2d\\((H_{U_1})^{-1}=H^{-1}\\)\u3002\u6240\u4ee5\u53ef\u4ee5\u5728\\(O(d_{col}^3)\\)\u5185\u5f97\u5230\u6574\u4e2a\u77e9\u9635\u7684\u9006Hessians\u77e9\u9635\u3002</p> <p>\u5982\u56fe\u6240\u793a\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u56fa\u5b9a\u7684mask M\uff0c\u4fee\u526a\u6743\u91cd\u77e9\u9635\\(W\\)\u65f6\uff0c\u9010\u6b65\u5bf9\u6bcf\u5217\u8fdb\u884c\u4fee\u526a\u3002\u6309\u987a\u5e8f\u8fed\u4ee3 \\(U_j\\)\u548c\u5bf9\u5e94\u7684\u9006Hessian\u77e9\u9635\uff0c\u5e76\u5bf9\u6240\u6709\u7684\u884c \\(i\\) \u526a\u53bb\u6ee1\u8db3\u7684\\(j\u2209M\\)\u7684\\(w_j\\)\uff0c \u540c\u65f6\u5bf9\u5bf9\u5e94\u884c\u5269\u4e0b\u7684weight\u8fdb\u884c\u66f4\u65b0\u3002\u5982\u56fe\u6240\u793a\uff1a</p> <p></p> <p>Adaptive Mask Selection</p> <p>\u89e3\u51b3\u4e00\u4e2a\u95ee\u9898\uff1a\u5982\u4f55\u83b7\u5f97\\(w\\)%\u7684\u7a00\u758f\u5ea6\uff0c\u5982\u679c\u662f\u5728\u5217\u4fee\u526a\u65f6\u9009\u62e9\\(w\\)%\u7684\u6743\u91cd\u8fdb\u884c\u526a\u9664\uff0c\u90a3\u4e48\u5f97\u5230\u7684\u6743\u91cd\u77e9\u9635\u4e0d\u80fd\u5728\u5217\u4e4b\u95f4\u975e\u5747\u5300\u5206\u5e03\uff08\u589e\u52a0\u4e86\u989d\u5916\u7684\u7ea6\u675f\u5bfc\u81f4\u526a\u679d\u6027\u80fd\u4e0b\u964d...\uff09\u3002SparseGPT\u901a\u8fc7\u8fed\u4ee3\u5206\u5757\u7684\u65b9\u6cd5\u6765\u5b9e\u73b0Adaptive Mask Selection\uff0c\u5373\u5bf9\u4e8e\\(B_s\\)\u5217\u4f5c\u4e3a\u4e00\u5757\uff0c\u4fdd\u8bc1\u6bcf\u5757\u5185\u7684\u7a00\u758f\u5ea6\u3002</p> <p>\u6bcf\u6b21\u9009\u62e9\\(B_s\\)\u5217\u7684\u63a9\u7801\u6267\u884c\u6743\u91cd\u66f4\u65b0\uff0c\u7136\u540e\u518d\u9009\u62e9\u4e0b\u4e00\u4e2a\u5757\u7684\u63a9\u7801\u3002</p> <p></p> <p>\u5b8c\u6574\u7b97\u6cd5\u4f2a\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p></p>"},{"location":"paper/Transformer_Review/","title":"Transformer Review","text":""},{"location":"paper/Transformer_Review/#_1","title":"\u6a21\u578b\u7ed3\u6784","text":"<ul> <li>Embedding:</li> </ul> <p>\u6240\u8c13\u5d4c\u5165\u5c42\uff0c\u5c31\u662f\u4e00\u79cd\u5c06\u9ad8\u7ef4\u6570\u636e\u6620\u5c04\u5230\u4f4e\u7ef4\u7a7a\u95f4\u7684\u65b9\u6cd5\uff0c\u5e38\u89c1\u7684Word Embedding\uff0c\u5c06\u6bcf\u4e2a\u5355\u8bcd\u8868\u793a\u4e3a\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u5b9e\u6570\u5411\u91cf\uff0c\u8868\u793a\u7684\u662f\u4e00\u4e2a\u5355\u8bcd\u5728\u4e00\u4e2a\u62bd\u8c61\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u3002\u5e38\u89c1\u7684word2vec\u6a21\u578b\u5c31\u662f\u4e00\u79cd\u5b9e\u73b0...</p> <p>\u901a\u5e38\u6709\u4e24\u79cd\u8868\u793a\u6cd5\uff1aOne hot representation\u548cDistributed representation</p> <ul> <li>Positional Encoding: </li> </ul> <p>\\(Input = Input\\_embedding + positional\\_encoding\\)\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u5c06tokens\u7684\u4f4d\u7f6e\u4fe1\u606f\u544a\u8bc9\u6a21\u578b\uff0c\u9700\u8981\u4fdd\u8bc1\u4e09\u70b9</p> <ol> <li>\u53ef\u4ee5\u7528\u6765\u8868\u793a\u4e00\u4e2atoken\u5728\u5e8f\u5217\u4e2d\u7684\u7edd\u5bf9\u4f4d\u7f6e</li> <li>\u5728\u5e8f\u5217\u957f\u5ea6\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0d\u540c\u5e8f\u5217\u4e2dtoken\u7684\u76f8\u5bf9\u4f4d\u7f6e/\u8ddd\u79bb\u4e5f\u8981\u4fdd\u6301\u4e00\u81f4</li> <li>\u53ef\u4ee5\u7528\u6765\u8868\u793a\u6a21\u578b\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4ece\u6765\u6ca1\u6709\u770b\u5230\u8fc7\u7684\u53e5\u5b50\u957f\u5ea6\u3002</li> </ol> <p>\u5e38\u7528\u7684\u91c7\u7528sin+cos\u6df7\u5408\u8868\u793a\u7684\u65b9\u6cd5\uff1a\u5373\\(PE_{t}=[sin(w_0t),cos(w_0t),...,sin(w_{\\frac{d_{model}}{2}-1},cos(w_{\\frac{d_{model}}{2}-1})]\\)\uff0c\u4ee5sin\u548ccos\u51fd\u6570\u5bf9\u7684\u5f62\u5f0f\u6765\u8868\u793a\uff0c\u4fbf\u4e8e\u4f4d\u7f6e\u5411\u91cf\u80fd\u591f\u901a\u8fc7\u7ebf\u6027\u53d8\u6362\u6765\u5f97\u5230\uff0c\u5373\\(PE_{t+\\Delta t}=T_{\\Delta t}*PE_t\\)</p> <p></p> <p>Transformer\u4e2d\u91c7\u7528\u7684PE\u6709\u5982\u4e0b\u7279\u70b9\uff1a\\(w_k=\\frac{1}{10000^{\\frac{2k}{d_{model}}}}\\)</p> <ol> <li>PE\u7684\u70b9\u79ef\u53d6\u51b3\u4e8e\\(\\Delta t\\)\uff0c\u5373\u70b9\u79ef\u7684\u5927\u5c0f\u53ef\u4ee5\u53cd\u5e94\u4e24\u4e2aPE\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002</li> <li>\u53e6\u5916\u5c31\u662fPE\u7684\u70b9\u79ef\u662f\u65e0\u5411\u7684\uff0c\u5373\\(PE_t^T*PE_{t+\\Delta t}=PE_t^T*PE_{t-\\Delta t}\\)</li> </ol> <ul> <li>Add &amp; Norm:</li> </ul> <p>Add\u662fresidual block\uff0c\u6570\u636e\u5728\u6b64\u8fdb\u884creidual connection(\u6b8b\u5dee\u8fde\u63a5)\uff0cNorm\u91c7\u7528\u7684\u662fLayer Normalization\u65b9\u5f0f\u3002</p> <p>Layer Normalization: \u7528\u4e8e\u89e3\u51b3ICS\u95ee\u9898\uff0c\u5373\u7b2cL+1\u5c42\u7684\u8f93\u5165\u4f1a\u968f\u7740\u7b2cL\u5c42\u53c2\u6570\u7684\u53d8\u52a8\uff0c\u800c\u5f15\u8d77\u6570\u636e\u5206\u5e03\u7684\u53d8\u52a8\uff0c\u6bcf\u5c42\u90fd\u4e0d\u540c\u5bfc\u81f4\u8bad\u7ec3\u53d8\u5f97\u56f0\u96be\u3002\u5373\u5c06\u6240\u6709\u7684\u8f93\u5165\u9650\u5236\u4e3a(0,1)\u5206\u5e03\u5e76\u52a0\u4e0a\u7ebf\u6027\u8868\u793a\uff0c\u7ebf\u6027\u8868\u793a\u7684\u4e24\u4e2a\u53c2\u6570\u9700\u8981\u5b66\u4e60\uff0cLN\u662f\u5728\u6574\u6761\u6570\u636e\u95f4\u8fdb\u884c\u6807\u51c6\u5316\u64cd\u4f5c\uff0c\u5373\u7eb5\u5411\u64cd\u4f5c\u800c\u4e0d\u662f\u6a2a\u5411\u64cd\u4f5c\uff08\u6a2a\u5411\u4ee3\u8868\u4e00\u4e2atoken\u7684\u7279\u5f81\u503c\uff0c\u7eb5\u5411\u4ee3\u8868\u8be5token\u548c\u5bf9\u5e94\u4f4d\u7f6etoken\u7684 \ud835\udefc\u503c\uff09\u3002</p> <p>\\(h=f(g*(\\dfrac{x-\\mu}{\\sigma})+b)\\)\uff0c\u5176\u4e2d\u03bc\u662f\u5e73\u79fb\u53c2\u6570 \uff0c\u03b4\u662f\u7f29\u653e\u53c2\u6570 \uff0cb\u662f\u518d\u5e73\u79fb\u53c2\u6570\uff0c g\u662f\u518d\u7f29\u653e\u53c2\u6570\uff0c\u5f97\u5230\u7684\u6570\u636e\u7b26\u5408\u5747\u503c\u4e3ab\uff0c\u65b9\u5dee\u4e3ag^2\u7684\u5747\u503c\u5206\u5e03\uff0c\u5f53b=0, g=1\u65f6\u5c31\u662f(0, 1)\u5206\u5e03</p> <p>Reidual connection: \u7528\u4e8e\u89e3\u51b3\u6df1\u5ea6\u5b66\u4e60\u4e2d\u7f51\u7edc\u8fc7\u6df1\u51c6\u786e\u7387\u4e0b\u964d\u7684\u95ee\u9898\uff0c\u53ef\u4ee5\u5728\u7f51\u7edc\u6df1\u5c42\u5efa\u7acb\u4e00\u79cd\u7c7b\u4f3c\u7684Identity Mapping\uff0c\u8ba9\u6a21\u578b\u4e0d\u4f1a\u5fd8\u8bb0\u5df2\u7ecf\u5b66\u4e60\u7684\u4e1c\u897f\u3002\u6052\u7b49\u6620\u5c04\uff1a\\(H(x)=F(x)+x\\)</p> <p>\u5176\u4e2d\\(F(X)\\)\u88ab\u79f0\u4e3aresidual function\uff0c\u6a21\u578b\u901a\u8fc7\u5b66\u4e60\u5728\u6df1\u5c42\u7684\u65f6\u5019\u4f7f\u5f97\\(F(X)\\)\u903c\u8fd10\uff0c\u800c\u8fd9\u6837\u7684\\(H(X)\\)\u7684\u6784\u5efa\u65b9\u5f0f\u79f0\u4e3a\u6b8b\u5dee\u8fde\u63a5\uff0c\u5f53\\(x\\)\u548c\\(F(x)\\)\u4e0d\u540c\u7ef4\u65f6\uff0c\u53ef\u4ee5\u5728\\(X\\)\u524d\u52a0\u4e0a\u4e00\u4e2a\u8f6c\u6362\u77e9\u9635\\(W\\)</p> <p></p> <ul> <li>Multi-Head Attention\uff1a</li> </ul> <p>Self-Attention\uff1a\u5bf9\u6bcf\u4e2atoken\u751f\u6210\u4e09\u4e2a\u5411\u91cfq,k,v\uff0c\u5177\u4f53\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e2atoken\u7684query\u4e0e\u5176\u4ed6token\u7684key\u8fdb\u884c\u67d0\u79cd\u8ba1\u7b97\uff0c\u5f97\u5230attention score\u518d\u4e58\u4e0a\u6bcf\u4e2atoken\u7684value\uff0c\u5c31\u5f97\u5230\u4e86\u4fe1\u606f\u62bd\u53d6\u5b8c\u6bd5\u7684\u56db\u4e2a\u5411\u91cf\uff0c\u5c06\u56db\u4e2a\u5411\u91cf\u76f8\u52a0\uff0c\u5c31\u662f\u8be5Token\u7ecf\u8fc7attention\u5c42\u540e\u7684\u7ed3\u679c\u3002(attention score\u77e9\u9635\u7684\u6bcf\u4e00\u884c\u8868\u793a\u4e00\u4e2atoken)  </p> <p></p> <p>\u7531\u591a\u4e2aSelf-Attention\u7ec4\u6210\u7684Multi-Attention\uff0c\u53ef\u4ee5\u6355\u83b7\u5355\u8bcd\u5728\u591a\u4e2a\u7ef4\u5ea6\u4e0a\u7684\u76f8\u5173\u7cfb\u6570\u3002\\(\\(Attention(Q,K,V) = softmax(\\frac{QK^T}{\\sqrt(d_k)})\\)\\)\uff0cMuiti\u5c31\u662f\u5c06\u5b83\u4eec\u62fc\u5230\u4e86\u4e00\u8d77\uff0c\u8fdb\u884c\u4e00\u4e2aconcat\u7684\u64cd\u4f5c</p> <p> </p> <ul> <li>Feed Forward\uff1a</li> </ul> <p>\u5373\u4f20\u7edf\u7684FFN\u5c42\uff0c\u5728transformer\u4e2d\u662f\u4e00\u4e2atoken-wise\u7684\u5347\u7ef4-\u8fc7\u6fc0\u6d3b-\u964d\u56de\u539f\u6765\u7ef4\u5ea6\u7684MLP\uff0c\u7531\u591a\u4e2a\u5168\u8fde\u63a5\u5c42\u7ec4\u6210\uff0c\u5c42\u4e0e\u5c42\u4e4b\u95f4\u662f\u524d\u5411\u4f20\u64ad\u7684\uff0cMLP\u662f\u4e00\u4e2aFFN\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u4e2d\u95f4\u6709\u591a\u4e2a\u9690\u85cf\u5c42\u3002</p>"},{"location":"paper/Transformer_Review/#_2","title":"\u53c2\u6570\u548c\u8ba1\u7b97\u91cf\u5206\u6790","text":"<p>\u53c2\u8003\uff1a\u5206\u6790transformer\u6a21\u578b\u7684\u53c2\u6570\u91cf\u3001\u8ba1\u7b97\u91cf\u3001\u4e2d\u95f4\u6fc0\u6d3b\u3001KV cache - \u77e5\u4e4e (zhihu.com)</p> <p>\u501f\u7528\u77e5\u4e4e\u4e0a\u4e00\u7bc7\u8bb2\u7684\u975e\u5e38\u8be6\u7ec6\u7684\u6587\u7ae0\uff0c\u5982\u4eca\u57fa\u4e8eTransformer\u7684LLM\u4e3b\u8981\u5206\u4e3a\u8bad\u7ec3\u548c\u63a8\u7406\u4e24\u4e2a\u8fc7\u7a0b\u3002</p> <ul> <li>\u63a8\u7406\u548c\u8bad\u7ec3\u7684\u533a\u522b\uff1a\u62ffTransformer\u6765\u8bf4\uff0c\u5206\u4e3aEncoder\u548cDecoder\u4e24\u4e2a\u90e8\u5206\uff0cEncoder\u90e8\u5206\u5728\u8f93\u5165\u8f93\u51fa\u7684\u65f6\u5019\u6ca1\u4ec0\u4e48\u53d8\u5316\uff0c\u672c\u8d28\u90fd\u662f\u5bf9\u4e00\u4e2a\u8f93\u5165\u7684\u6570\u7ec4\u8fdb\u884c\u65f6\u95f4\u5e8f\u5217\u91cd\u7ec4\uff0c\u76ee\u7684\u662f\u628a\u4e00\u4e2a\u4e0d\u5b9a\u957f\u4e14embedding\u540e\u7684\u8f93\u5165\uff0c\u53d8\u6362\u4e3a\u4e00\u4e2a\u5b9a\u957f\u7684\u5206\u5e03\u5747\u5300\u7684\u8f93\u51fa\u3002Decoder\u5728\u8bad\u7ec3\u548c\u63a8\u7406\u65f6\u4e5f\u662f\u7edf\u4e00\u5f62\u5f0f\uff0c\u53ea\u662f\u8bad\u7ec3\u65f6\u662f\u5728\u77e5\u9053ground truth\u7684\u60c5\u51b5\u4e0b\u8fdb\u884cteach forcing\uff0c\u8f93\u5165\u662f\u5b8c\u6574\u7684\u6807\u6ce8\uff0c\u901a\u8fc7\u4f7f\u7528mask\u8ba9decoder\u770b\u4e0d\u5230\u672a\u6765\u7684\u4fe1\u606f\u3002\u800c\u5728\u63a8\u7406\u65f6\uff0c\u8f93\u5165\u662f\u4e0a\u4e00\u65f6\u523b\u7684\u8f93\u51fa</li> </ul> <p>\u800c\u5728\u8bad\u7ec3\u548c\u63a8\u7406\u7684\u8fc7\u7a0b\u4e2d\uff0c\u663e\u5b58\u5360\u7528\u662f\u4e0d\u4e00\u6837\u7684\u3002\u5728\u8bad\u7ec3\u7684\u8fc7\u7a0b\u4e2d\uff0c\u9700\u8981\u4fdd\u5b58\u6a21\u578b\u53c2\u6570\uff0c\u524d\u5411\u4f20\u64ad\u4e2d\u7684\u4e2d\u95f4\u6fc0\u6d3b\uff0c\u53cd\u5411\u4f20\u64ad\u65f6\u7684\u68af\u5ea6\u548c\u4f18\u5316\u5668\u72b6\u6001\uff0c\u800c\u5728\u63a8\u7406\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4ec5\u7528\u4fdd\u5b58\u6a21\u578b\u53c2\u6570\u3002</p> <ul> <li>\u6a21\u578b\u53c2\u6570</li> </ul> <p>\u5047\u8bbetransformer\u6a21\u578b\u7684\u5c42\u6570\u4e3a \\(l\\) \uff0c\u9690\u85cf\u5c42\u7ef4\u5ea6\u4e3a \u210e \uff0c\u6ce8\u610f\u529b\u5934\u6570\u4e3a \\(a\\) \u3002\u8bcd\u8868\u5927\u5c0f\u4e3a \\(V\\) \uff0c\u8bad\u7ec3\u6570\u636e\u7684\u6279\u6b21\u5927\u5c0f\u4e3a \\(b\\) \uff0c\u5e8f\u5217\u957f\u5ea6\u4e3a \\(s\\)\u3002\u90a3\u4e48\u6bcf\u5c42\u7531\u4e00\u4e2aMLP\u548c\u4e00\u4e2aAttention\u7ec4\u6210\u3002</p> <p>\u5bf9\u4e8eAttention\u6765\u8bf4\uff1a\u6a21\u578b\u53c2\u6570\u6709\u6743\u91cd\u77e9\u9635\\(W_Q,W_K,W_V\\)\uff0c\u8f93\u51fa\u6743\u91cd\\(W_O\\)\u548c\u504f\u7f6e\\(b\\)\uff0c\u524d\u8005\u5f62\u72b6\u4e3a\\([h,h]\\)\uff0c\u540e\u8005\u5f62\u72b6\u4e3a\\([h]\\)\uff0c\u6240\u4ee5\u53c2\u6570\u91cf\u4e00\u5171\u662f\\(4h^2+4h\\)</p> <p>\u5bf9\u4e8eMLP\u6765\u8bf4\uff1a\u6a21\u578b\u53c2\u6570\u4e3b\u8981\u662f\u4e24\u4e2a\u7ebf\u6027\u5c42\\(W_1\\in R^{h\\times 4h},W_2\\in R^{4h\\times h}\\), \u52a0\u4e0a\u4e24\u4e2a\u504f\u7f6e\\(b_1 \\in R^{4h},b_2 \\in R^{h}\\)\uff0c\u6240\u4ee5\u53c2\u6570\u91cf\u4e00\u5171\u662f\\(8h^2+5h\\)</p> <p>\u5728Attention\u548cMLP\u5c42\u4e4b\u540e\uff0c\u90fd\u6709\u4e00\u4e2aLayer norm\u64cd\u4f5c\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u5176\u4e2d\u6709\u4e00\u4e2a\u7f29\u653e\u53c2\u6570\\(\\gamma \\in R^h\\)\u548c\u5e73\u79fb\u53c2\u6570\\(\\beta\\in R^h\\), \u6240\u4ee5\u4e24\u4e2aLayerNorm\u7684\u53c2\u6570\u91cf\u4e3a\\(4h\\)</p> <p>\u6240\u4ee5\u4e00\u4e2aTransformer\u5c42\u7684\u53c2\u6570\u662f\\(12h^2+13h\\)</p> <p>\u5728Output\u8f6c\u6362\u4e3avocab\u65f6\uff0c\u4f1a\u6709\u4e00\u4e2a\u8bcd\u5d4c\u5165\u77e9\u9635\uff0c\u53c2\u6570\u91cf\u4e3a\\(Vh\\)\uff08\u8bcd\u8868\u5927\u5c0f\u4e58\u4ee5\u8bcd\u5411\u91cf\u7ef4\u5ea6=hidden_size\uff09\uff0c\u6240\u4ee5\u4e00\u4e2aLLM\u7684\u53c2\u6570\u91cf\u662f\\(l(12h^2+13h)+Vh\\)</p> <p>\u4ee5LLama7B\u4e3a\u4f8b\uff0c\\(h=4096\\), \\(l=32\\)\uff0c\u90a3\u4e48\u53c2\u6570\u8fd1\u4f3c\u7b49\u4e8e\\(l(12h^2+13h)\\approx 6.44B\\)</p> <ul> <li>\u68af\u5ea6\u548c\u4f18\u5316\u5668\u72b6\u6001</li> </ul> <p>\u5728\u4e00\u6b21\u8bad\u7ec3\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u822c\u91c7\u7528\u6df7\u5408\u7cbe\u5ea6\u52a0\u901f\uff0c\u6bcf\u4e2a\u6a21\u578b\u53c2\u6570\u5bf9\u5e94\u4e00\u4e2a\u68af\u5ea6\u548c\u4e24\u4e2a\u4f18\u5316\u5668\u72b6\u6001(AdamW)\u3002\u8bad\u7ec3\u4e2d\uff0c\u4f7f\u7528fp16\u7684\u53c2\u6570\u8fdb\u884c\u524d\u5411\u548c\u540e\u5411\u4f20\u9012\uff0c\u5e76\u8fdb\u884c\u68af\u5ea6\u8ba1\u7b97\uff0c\u800c\u5728\u4f18\u5316\u5668\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u65f6\uff0c\u4f1a\u4f7f\u7528fp32\u7684\u4f18\u5316\u5668\u72b6\u6001\uff0c\u68af\u5ea6\u548c\u6a21\u578b\u53c2\u6570\u6765\u66f4\u65b0\u3002\u6240\u4ee5\u4e00\u4e2a\u6a21\u578b\u53c2\u6570\u9700\u8981\\((2+2)+(4+4+4+4)=20\\ bytes\\) </p> <ul> <li>\u4e2d\u95f4\u6fc0\u6d3b\u503c</li> </ul> <p>\u4e2d\u95f4\u6fc0\u6d3b\u503c\u7684\u663e\u5b58\u5360\u7528\u4e0e\u8f93\u5165\u6570\u636e\u7684\u5927\u5c0f(\u6279\u6b21\u5927\u5c0f\\(b\\)\u548c\u5e8f\u5217\u957f\u5ea6\\(s\\))\u6210\u6b63\u76f8\u5173\uff0c\u5047\u8bbe\u4ee5fp16\u5b58\u50a8\uff0cdropout\u7684mask\u77e9\u9635\u4ee5int8\u6765\u5b58\u50a8\u3002\u6240\u8c13\u4e2d\u95f4\u6fc0\u6d3b\u5c31\u662f\u524d\u5411\u4f20\u9012\u8fc7\u7a0b\u4e2d\u8ba1\u7b97\u5f97\u5230\u7684\uff0c\u5e76\u5728\u540e\u5411\u4f20\u9012\u8fc7\u7a0b\u4e2d\u9700\u8981\u7528\u5230\u7684\u6240\u6709\u5f20\u91cf(\u4e00\u822c\u5305\u62ec\u5404\u51fd\u6570\u7684\u8f93\u5165\u548cdropout\u7684mask\u77e9\u9635)\u3002</p> <p>Attention: </p> <p>\\(Q=xW_Q, K=xW_K, V=xW_V,x_{out}=softmax(\\dfrac{QK^T}{\\sqrt h})\\cdot V\\cdot W_o +x\\)</p> <ol> <li> <p>\\(QKV\\)\u77e9\u9635\u9700\u8981\u4fdd\u5b58\u5171\u540c\u8f93\u5165\u503c\\(x\\)\uff0c\u5f62\u72b6\u662f\\([b,s,h]\\)\uff0c\u6240\u4ee5\u5360\u7528\\(2bsh\\)</p> </li> <li> <p>\\(QK^T\\)\u9700\u8981\u4fdd\u5b58\u4e2d\u95f4\u6fc0\u6d3bQK\uff0c\u5f62\u72b6\u662f\\([b,s,h]\\)\uff0c\u6240\u4ee5\u5360\u7528\\(4bsh\\)</p> </li> <li> <p>\\(softmax\\)\u51fd\u6570\u9700\u8981\u8f93\u5165\\(QK^T\\)\uff0c\u5f62\u72b6\u662f\\([b,a,s,s]\\)\uff0c\u6240\u4ee5\u5360\u7528\\(2bas^2\\)</p> </li> <li> <p>\\(dropout\\)\u9700\u8981\u4fdd\u5b58mask\u77e9\u9635\uff0c\u5f62\u72b6\u662f\\([b,a,s,s]\\)\uff0c\u5360\u7528\\(bas^2\\)</p> </li> <li>\u8ba1\u7b97attention\u65f6\uff0c\u9700\u8981\u4fdd\u5b58\u8f93\u5165score\u5373\\(softmax\\)\u7684\u7ed3\u679c\uff0c\u5f62\u72b6\u662f\\([b,a,s,s]\\)\uff0c\u5360\u7528\\(2bas^2\\)\uff0c\u8fd8\u6709\u8f93\u5165V\\([b,s,h]\\)</li> <li>\u8ba1\u7b97\u8f93\u51fa\u6620\u5c04\u65f6\uff0c\u9700\u8981\u4fdd\u5b58\u5176\u8f93\u5165\\([b,a,s,\\dfrac{h}{a}]\\)\uff0c\u4ee5\u53ca\u4e00\u4e2adropout\u64cd\u4f5c\u7684mask\\([b,s,h]\\)\uff0c\u603b\u5171\u5360\u7528\\(3bsh\\)</li> </ol> <p>\u6240\u4ee5Attention\u7684\u4e2d\u95f4\u6fc0\u6d3b\u603b\u5171\u5360\u7528\\(11bsh+5bas^2\\)</p> <p>MLP:</p> <p>\\(x=f_{gelu}(x_{out}W_1)W_2+x_{out}\\)</p> <ol> <li> <p>\u7ebf\u6027\u5c42\\(W_1\\)\u548c\\(W_2\\)\uff1a\u9700\u8981\u4fdd\u5b58\u8f93\u5165\\([b,s,h]\\)\u548c\\([b,s,4h]\\)\uff0c\u5360\u7528\\(10bsh\\)</p> </li> <li> <p>\u6fc0\u6d3b\u51fd\u6570\uff1a\u9700\u8981\u4fdd\u5b58\u8f93\u5165\\([b,s,4h]\\)\uff0c\u5360\u7528\\(8bsh\\)</p> </li> <li> <p>Dropout\u64cd\u4f5c\uff1a\u4fdd\u5b58mask\\([b,s,h]\\)\uff0c\u5360\u7528\\(bsh\\)</p> </li> </ol> <p>\u6240\u4ee5MLP\u7684\u4e2d\u95f4\u6fc0\u6d3b\u4e00\u5171\u5360\u7528\\(19bsh\\)</p> <p>Layer Normalization</p> <p>\u8be5\u5c42\u7684\u8f93\u5165\\([b,s,h]\\)\uff0cMLP\u548cAttention\u5404\u4e00\u4e2a\uff0c\u603b\u5171\u5360\u7528\\(4bsh\\)</p> <p>\u6240\u4ee5\u5bf9\u4e8e\u4e00\u4e2aLLM\u6765\u8bf4\uff0c\u4e2d\u95f4\u6fc0\u6d3b\u603b\u5171\u5360\u7528\\(l(34bsh+5bas^2)\\)</p> <ul> <li>KV cache</li> </ul> <p>KV cache\u4f7f\u7528\u4e3b\u8981\u5206\u4e3aPre-fill\u548cdecode\u4e24\u90e8\u5206</p> <ol> <li> <p>\u5728\u9884\u586b\u5145\u9636\u6bb5\uff0c\u4f1a\u6839\u636e\u8f93\u5165\u7684prompt\uff0c\u4e3a\u6bcf\u5c42\u751f\u6210key cache\u548cvalue cache.</p> </li> <li> <p>\u5728\u89e3\u7801\u9636\u6bb5\uff0c\u8ba1\u7b97\u5206\u4e3a\u66f4\u65b0KV cache\u548c\u7b2ci\u4e2atransformer\u7684\u8f93\u51fa\u3002\u6b64\u65f6\\(x^i_k\\in R^{b\\times(input+step)\\times h}\\), \\(t^i_Q\\in R^{b\\times1\\times h}\\)</p> <p></p> <p>\u663e\u5b58\u5360\u7528\uff1a\u5bf9\u4e8eKV cache\u6765\u8bf4\uff0c\u5047\u8bbe\u8f93\u5165\u5e8f\u5217\u957f\u5ea6\u4e3a\\(s\\)\uff0c\u8f93\u51fa\u5e8f\u5217\u957f\u5ea6\u4e3a\\(n\\)\uff0c\u90a3\u4e48\u6700\u9ad8\u663e\u5b58\u5360\u7528\\(2\\times 2 \\times lb(s+n)h\\)</p> </li> </ol> <ul> <li>\u8ba1\u7b97\u91cf\u4f30\u8ba1</li> </ul> <p>\u53c2\u8003\uff1aLLM KV cache\u8be6\u89e3 \u56fe\u793a\uff0c\u663e\u5b58\uff0c\u8ba1\u7b97\u91cf\u5206\u6790\uff0c\u4ee3\u7801</p> <p>\u603b\u7684\u6765\u8bf4\uff0c\u5c06Gemm\u7684dense\u64cd\u4f5c\uff0c\u8f6c\u6362\u4e3a\u4e86Gemv\u64cd\u4f5c\uff0c\u589e\u52a0\u4e86Kv cache\u7684\u7f13\u5b58\u3002</p> <p>Attention</p> <p></p> <p>MLP</p> <p></p> <p>logits</p> <p>output\u4e2d\u5f53\u524d\u4f4d\u7f6e\u7684logits\u6307\u7684\u662f\uff0c\u4e0b\u4e00\u4e2a\u9884\u6d4btoken\u7684\u6982\u7387\u5206\u5e03\uff08\u672a\u8fdb\u884csoftmax\u7684\u6982\u7387\u5206\u5e03\uff09</p> <p></p>"},{"location":"paper/Wanda/","title":"Wanda:A Simple and Effective Pruning Approach for Large Language Models","text":"<p>\u526a\u679d\u7b97\u6cd5\u6838\u5fc3\uff1a</p> <ul> <li>\u5bf9\u4e8e\u6bcf\u4e2aweight\uff0c\u4f7f\u7528\u5b83\u7684magnitude\u548c\u5bf9\u5e94input activations\u7684norm\u7684\u4e58\u79ef\u6765\u8fdb\u884c\u8bc4\u4f30</li> <li>On a per-output basis instead of across the whole layer(weight importance score are compared within each row in W)</li> </ul> <p>Magnitude Pruning: \u5c06\u6743\u91cd\u4f4e\u4e8e\u67d0\u4e2a\u9608\u503c\u7684\u5168\u90e8\u526a\u679d\uff0c\u4e4b\u540e\u8fdb\u884cfine-tuned\u76f4\u5230\u51c6\u786e\u7387\u5230\u8fbe\u9884\u671f\u3002</p> <p>\\(\\(M_{ij}= Top_v(S)_{ij}= \\begin{cases} 1&amp; \\text{if\\ Sij in top v\\% }\\\\ 0&amp; \\text{otherwise} \\end{cases}\\)\\)\uff0c\u5176\u4e2d\\(S_{ij}\\)\u8868\u793a\u91cd\u8981\u6027\u5206\u6570\u3002\u5bf9\u4e8eReLU\u6765\u8bf4\\(Y=max(0,XW)\\)\uff0c\u7ed3\u679c\u5c31\u53d8\u6210\u4e86\\(Y=max(0,X(W\\odot M))\\)\uff0c\\(\\odot\\)\u8868\u793aHadamard\u79ef\uff0c\u9ed1\u8272\u4ee3\u88681\u3002</p> <p></p> <p>Wanda\u7684\u6838\u5fc3\u8fc7\u7a0bOverview\u5982\u4e0b\u56fe\u6240\u793a\uff1a</p> <ul> <li>\u4e24\u79cdWeight Update<ul> <li>Sequential\uff1a\u5148\u8ba1\u7b97\u51fa\u5b8c\u6574\u7684pruned mask\uff0c\u518d\u5bf9\u6743\u91cd\u8fdb\u884c\u66f4\u65b0</li> <li>Iterative: SparseGPT\u6240\u91c7\u7528\u7684\u65b9\u6cd5\uff0c \u5728\u6bcf\u4e00\u4e2aLayer\u5185\u90e8\u8fed\u4ee3\u7684\u8fdb\u884c\u526a\u679d\u548c\u6743\u91cd\u66f4\u65b0\uff0cSparseGPT\u5c06128\u4e2aInput channel\u4f5c\u4e3a\u4e00\u4e2acomparison group\u6765\u8fdb\u884c\u66f4\u65b0\u3002</li> </ul> </li> <li>Weight Update\u5bf9Wanda\u7684\u4f18\u5316\u6548\u679c\u53ef\u4ee5\u5ffd\u7565\uff08It offers little or negligible improvement to Wanda.\uff09</li> </ul> <p></p> <p>Pruning Metric: </p> <p>\u5047\u8bbe\u4e00\u4e2a\u7ebf\u6027\u5c42\u7684\\(W\\in R^{C_{out}\\times C_{in}}\\), Input activations \\(X\\in R^{NL\\times C_{in}}\\)\uff0c\u5bf9\u4e8e\u67d0\u4e2aweight\\(W_{ij}\\)\uff0cScore\u53ef\u4ee5\u8ba1\u7b97\u5982\u4e0b\uff1a\\(S_{ij}=|W_{ij}|\\cdot||X_j||^2\\)\uff0c\u524d\u8005\u4ee3\u8868\u7edd\u5bf9\u503c\uff0c\u540e\u8005\u662f\\(j\\)th feature\u7684L2\u8303\u6570(\u5373\u7b2cj\u884c)</p> <p>Comparison Group:</p> <p>\u5982\u4e0a\u6587\u6240\u8bf4\uff0c\u4e0e\u4f20\u7edf\u7684layer-wise\u548cwhole-network\u4e0d\u540c\uff0cWanda\u4e2d\u7684Comparison group\u662foutput neuron\uff0c\u4e5f\u5c31\u662foutput\u77e9\u9635\u7684\u6bcf\u4e00\u884c\u3002\u7528\u516c\u5f0f\u8868\u793a\u5c31\u662f\\(For\\ W_{ij},\\ G_{ij}=\\{W_{uv}|u=i\\}\\)</p>"},{"location":"tech/","title":"\u6249\u9875","text":"<p>\u4e00\u4e9b\u5de5\u5177\u6027\u7684\u6587\u6863....</p> <p>\u201c\u5c11\u5c0f\u77e5\u540d\u7ff0\u58a8\u573a\uff0c\u5341\u5e74\u5fc3\u4e8b\u53ea\u51c4\u51c9\u3002\u201d</p>"},{"location":"tech/coding/CUDA/","title":"CUDA","text":""},{"location":"tech/coding/CUDA/#cuda-learning","title":"Cuda Learning","text":""},{"location":"tech/coding/CUDA/#_1","title":"\u5185\u5b58\u67b6\u6784\u6a21\u578b","text":"<p>GPU\u5185\u5b58(\u663e\u5b58)\u7684\u7406\u89e3\u4e0e\u57fa\u672c\u4f7f\u7528 - \u77e5\u4e4e (zhihu.com)</p> <p>Zero copy\u7684\u4f7f\u7528</p> <ul> <li>GPU\u76f4\u63a5\u4ece\u7cfb\u7edf\u5185\u5b58\u8bfb\u53d6\u6570\u636e</li> <li>\u9002\u7528\u4e8e\u53ea\u9700\u8981\u4e00\u6b21\u8bfb\u53d6\u6216\u8005\u5199\u5165\u7684\u6570\u636e\u64cd\u4f5c\uff0c\u8981\u9891\u7e41\u8bfb\u5199\u7684\u6570\u636e\uff0c\u4e0d\u5efa\u8bae\u7528zero copy\u3002</li> <li>Pinned memory: \u6570\u636e\u4f1a\u5728\u5185\u5b58\u4e2d\u9501\u4f4f\uff0c\u4e0d\u4f1a\u88ab\u6362\u5230\u786c\u76d8\u4e2d</li> </ul> <pre><code>float *a_h, *a_map; // \u5b9a\u4e49\u4e24\u4e2a\u6307\u9488\uff1aa_h \u5185\u5b58\u539f\u6307\u9488\uff0ca_map\u6620\u5c04\u6307\u9488 \n...\ncudaGetDeviceProperties(&amp;prop, 0);       // \u83b7\u53d6GPU\u7684\u7279\u6027\uff0c\u770b\u662f\u5426\u652f\u6301\u5730\u5740\u6620\u5c04 \nif (!prop.canMapHostMemory) \n    exit(0);\ncudaSetDeviceFlags(cudaDeviceMapHost);    // \u8bbe\u7f6e\u8bbe\u5907\u5c5e\u6027\uff0c\u6253\u5f00\u5730\u5740\u6620\u5c04\ncudaHostAlloc(&amp;a_h, nBytes, cudaHostAllocMapped);  // \u5f00\u8f9fpinned memory\ncudaHostGetDevicePointer(&amp;a_map, a_h, 0);    // \u5730\u5740\u6620\u5c04 a_h -&gt;  a_map.\nkernel&lt;&lt;&lt;gridSize, blockSize&gt;&gt;&gt;(a_map);   \n</code></pre> <p>\u8bbe\u5907\u5185Async \u62f7\u8d1d</p> <ul> <li>\u7528\u4e8e\u5168\u5c40\u5185\u5b58\u548c\u5171\u4eab\u5185\u5b58\u4e4b\u95f4\u4f20\u9012\u6570\u636e\uff0c\u4e0e<code>cudaMemcpyAsync</code>\u533a\u522b\u5f00</li> <li>\u6570\u636e\u7531L2\u76f4\u63a5\u4f20\u9012\u5230SMEM\uff0c\u800c\u4e0d\u9700\u8981\u7ecf\u8fc7L1\u548cRF\u7684\u4e2d\u8f6c</li> </ul> <pre><code>#include &lt;cooperative_groups.h&gt;\n#include &lt;cooperative_groups/memcpy_async.h&gt;\n\nnamespace cg = cooperative_groups;\n\n__global__ void kernel(int* global_data) {\n    cg::thread_block tb = cg::this_thread_block();\n    const size_t elementsPerThreadBlock = 16 * 1024;\n    const size_t elementsInShared = 128;\n    __shared__ int local_smem[elementsInShared];\n\n    size_t copy_count;\n    size_t index = 0;\n    while (index &lt; elementsPerThreadBlock) {\n        cg::memcpy_async(tb, local_smem, elementsInShared, global_data + index, elementsPerThreadBlock - index);\n        copy_count = min(elementsInShared, elementsPerThreadBlock - index);\n        cg::wait(tb);\n        // Work with local_smem\n        index += copy_count;\n    }\n}\n</code></pre> <p>\u8bbe\u5907\u95f4\u6570\u636e\u4f20\u8f93(NVLINK)</p> <pre><code>float* p0, *p1;\ncudaSetDevice(0);                   // \u5c06GPU0\u8bbe\u7f6e\u4e3a\u5f53\u524d\u8bbe\u5907\nsize_t size = N * sizeof(float);    // size\u8bbe\u7f6e\u4e3aN\u4e2a float\ncudaMalloc(&amp;p0, size);              // GPU0\u5f00\u8f9f\u5185\u5b58\ncudaSetDevice(1);                   // \u5c06GPU1\u8bbe\u7f6e\u4e3a\u5f53\u524d\u8bbe\u5907\ncudaMalloc(&amp;p1, size);              // GPU0\u5f00\u8f9f\u5185\u5b58\ncudaMemcpyPeer(p1, 1, p0, 0, size); // Copy p0 to p1\n</code></pre> <p>\u5185\u5b58\u79cd\u7c7b</p> <ul> <li>Global mmeory\uff1aGmem\u53ef\u4ee5\u88ab\u8bbe\u5907\u5185\u7684\u6240\u6709\u7ebf\u7a0b\u8bbf\u95ee\uff0coff chip\uff0c</li> </ul> <pre><code>cudaMalloc() //\u5206\u914d\u8bbe\u5907\u5185\u5b58\ncudaMallocPitch() //\u5206\u914d\u8bbe\u5907\u4e0a\u7684\u4e8c\u7ef4\u6570\u636e\u5e76\u8fdb\u884c\u5bf9\u9f50\ncudaMallocManaged() //\u5206\u914d\u5185\u5b58\u5e76\u4ea4\u7ed9UA\u7ba1\u7406\ncudaMallocHost() //\u5728\u4e3b\u673a\u4e0a\u5206\u914dpinned-memory\ncudaMallocAsync() //Stream-ordered\u64cd\u4f5c\u6765\u6267\u884c\u5185\u5b58\u5206\u914d\u548c\u91ca\u653e\uff0c\n</code></pre> <p>CUDA\u7f16\u7a0b\u5165\u95e8\u4e4b Stream-Ordered Memory Allocator(1) - \u77e5\u4e4e (zhihu.com)</p> <p>\u4e8c\u7ef4\u77e9\u9635\u7684\u8bbf\u95ee\uff1a</p> <pre><code>for (int i=0;i&lt;Height;i++){\n    float *row = (float *)((char*)N+i*Pitch);\n    for (int j=0;j&lt;Width;j++){\n        row[j]++;\n    }\n}\n</code></pre> <p>__threadfence()\uff1a\u4fdd\u8bc1\u8c03\u7528\u8be5\u51fd\u6570\u7684\u7ebf\u7a0b\uff0c\u5728\u8be5\u8bed\u53e5\u524d\u5bf9\u5168\u5c40\u5b58\u50a8\u5668\u6216\u8005\u5171\u4eab\u5b58\u50a8\u5668\u7684\u8bbf\u95ee\u5df2\u7ecf\u5168\u90e8\u5b8c\u6210\uff0c\u6267\u884c\u7ed3\u679c\u5bf9grid\u4e2d\u7684\u6240\u6709\u7ebf\u7a0b\u53ef\u89c1\u3002</p> <ul> <li>L1/L2 cache\uff1aL2\u53ef\u4ee5\u88ab\u6240\u6709SM\u8bbf\u95ee\uff0cL1\u53ef\u4ee5\u88ab\u5f53\u524dSM\u5185\u8bbf\u95ee</li> <li>Local memory\uff1a\u7ebf\u7a0b\u72ec\u4eab\uff0coff chip\uff0c\u5f53\u5bc4\u5b58\u5668\u4e0d\u8db3\u65f6\u6dfb\u52a0</li> <li>Register\uff1aon chip\uff0c\u7ebf\u7a0b\u72ec\u4eab\uff0con chip</li> <li>Shared memory: block\u5185\u5171\u4eab\uff0c\u7528\u4e8e\u7f13\u5b58\u53cd\u590d\u8bfb\u5199\u7684\u6570\u636e\uff0c\u4e0eL1\u7684\u4f4d\u7f6e\u548c\u901f\u5ea6\u76f8\u4f3c, onchip</li> <li>constanct memory: \u901a\u8fc7cache\u7684\u591a\u526f\u672c\uff0c\u51cf\u5c11\u591a\u7ebf\u7a0b\u5e76\u884c\u8bbf\u95ee\u5e38\u91cf\u7684\u5ef6\u65f6\uff0chost allocation</li> <li>texture memory:off chip\uff0c\u7528\u4e8e\u56fe\u5f62\u5316\u6570\u636e\u7684\u5b58\u50a8\uff0chost allocation</li> </ul>"},{"location":"tech/coding/GoF23%20Notes/","title":"GoF23 Notes","text":""},{"location":"tech/coding/GoF23%20Notes/#gof23-notes","title":"GoF23 Notes","text":"<p>Reference: \u8bbe\u8ba1\u6a21\u5f0f\u7cbe\u89e3\uff0dGoF 23 \u79cd\u8bbe\u8ba1\u6a21\u5f0f\u89e3\u6790\u9644 C++\u5b9e\u73b0\u6e90\u7801 \u6c38\u4e0d\u78e8\u706d\u7684\u8bbe\u8ba1\u6a21\u5f0f</p>"},{"location":"tech/coding/GoF23%20Notes/#_1","title":"\u8bbe\u8ba1\u6a21\u5f0f\u7684\u57fa\u672c\u539f\u5219\uff1a","text":"<ul> <li>OCP\uff1a\u5f00\u95ed\u539f\u5219\uff0c\u8f6f\u4ef6\u5b9e\u4f53\u5e94\u5f53\u5bf9\u6269\u5c55\u5f00\u653e\uff0c\u5bf9\u4fee\u6539\u5173\u95ed\u3002</li> <li>LSP\uff1a\u91cc\u6c0f\u66ff\u6362\u539f\u5219\uff0c\u7ee7\u627f\u786e\u4fdd\u7236\u7c7b\u7684\u6027\u8d28\u5728\u5b50\u7c7b\u4f9d\u7136\u6210\u7acb</li> <li>DIP\uff1a\u4f9d\u8d56\u5012\u7f6e\u539f\u5219\uff0c\u9ad8\u5c42\u6a21\u5757\u4e0d\u5e94\u8be5\u4f9d\u8d56\u4f4e\u5c42\u6a21\u5757\uff0c\u4e24\u8005\u90fd\u5e94\u8be5\u4f9d\u8d56\u5176\u62bd\u8c61\uff1b\u62bd\u8c61\u4e0d\u5e94\u8be5\u4f9d\u8d56\u7ec6\u8282\uff0c\u800c\u662f\u7ec6\u8282\u8981\u4f9d\u8d56\u62bd\u8c61\u3002\u5373\u9762\u5411\u63a5\u53e3\u7f16\u7a0b</li> <li>SRP\uff1a\u5355\u4e00\u804c\u8d23\u539f\u5219\uff0c\u4e00\u4e2a\u7c7b\u5e94\u8be5\u6709\u4e14\u4ec5\u6709\u4e00\u4e2a\u5f15\u8d77\u5b83\u53d8\u5316\u7684\u539f\u56e0</li> <li>ISP\uff1a\u63a5\u53e3\u9694\u79bb\u539f\u5219\uff0c\u4e00\u4e2a\u7c7b\u5bf9\u53e6\u4e00\u4e2a\u7c7b\u7684\u4f9d\u8d56\u5e94\u8be5\u5efa\u7acb\u5728\u6700\u5c0f\u7684\u63a5\u53e3\u4e0a\uff0c\u8981\u4e3a\u5404\u4e2a\u7c7b\u5efa\u7acb\u5b83\u4eec\u9700\u8981\u7684\u4e13\u7528\u63a5\u53e3</li> <li>LKP\uff1a\u6700\u5c0f\u77e5\u8bc6\u539f\u5219\uff0c\u5982\u679c\u4e24\u4e2a\u8f6f\u4ef6\u5b9e\u4f53\u65e0\u987b\u76f4\u63a5\u901a\u4fe1\uff0c\u90a3\u4e48\u5c31\u4e0d\u5e94\u5f53\u53d1\u751f\u76f4\u63a5\u7684\u76f8\u4e92\u8c03\u7528\uff0c\u53ef\u4ee5\u901a\u8fc7\u7b2c\u4e09\u65b9\u8f6c\u53d1\u8be5\u8c03\u7528</li> <li>CRP\uff1a\u5408\u6210\u590d\u7528\u539f\u5219\uff0c\u4f18\u5148\u8003\u8651\u7ec4\u5408\uff0c\u5176\u6b21\u8003\u8651\u7ee7\u627f</li> </ul>"},{"location":"tech/coding/GoF23%20Notes/#_2","title":"\u8bbe\u8ba1\u6a21\u5f0f\u5206\u7c7b\uff1a","text":"<ul> <li>\u521b\u5efa\u578b\u6a21\u5f0f</li> <li>\u7ed3\u6784\u578b\u6a21\u5f0f</li> <li>\u884c\u4e3a\u578b\u6a21\u5f0f</li> </ul>"},{"location":"tech/coding/GoF23%20Notes/#_3","title":"\u521b\u5efa\u578b\u6a21\u5f0f","text":"<p>\u6240\u8c13\u521b\u5efa\u8005\u6a21\u5f0f\uff0c\u5c31\u662f\u7528\u4e8e\u521b\u5efa\u5bf9\u8c61\u7684\u6a21\u5f0f</p> <p>1. \u5355\u4f8b\u6a21\u5f0f(Singleton) + \u5bf9\u8c61\u7531\u672c\u8eab\u81ea\u884c\u521b\u5efa\uff0c\u6784\u9020\u51fd\u6570\u79c1\u6709\u5316 + \u5168\u5c40\u7edf\u4e00\u8bbf\u95ee\uff0c\u4fdd\u8bc1\u552f\u4e00\u6027\uff0c\u6240\u4ee5\u662f\u9759\u6001\u5b9e\u4f8b + \u7528\u4e8e\u53d8\u91cf\u5168\u5c40\u552f\u4e00\uff0c\u5de5\u5382\u5bf9\u8c61\u7684\u5b9e\u73b0\u5c31\u662fSingleton\u6a21\u5f0f\u7684\u4e00\u4e2a\u5b9e\u4f8b</p> <pre><code>//Singleton.h\nclass Singleton\n{\npublic:\n    static Singleton* Instance()\uff1b\nprivate:\n    Singleton();\n    static Signleton* _instance;\n}\n//Singleton.cpp\nSingleton* Singleton::_instance = 0;\nSignleton::Singleton(){\n    cout &lt;&lt; \"Singleton...\" &lt;&lt; endl;\n}\nstatic Singleton* Instance(){\n    if(_instance == 0){\n        _instance = new Singleton();\n    }\n    return _instance;\n}\n//main.cpp\nSignleton *sgn = Signleton::Instance();\n</code></pre> <p>2. \u5de5\u5382\u6a21\u5f0f(Factory) + \u63d0\u9ad8Cohesion\u548c\u964d\u4f4eCoupling\uff0c\u5b9a\u4e49\u521b\u5efa\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u5c01\u88c5\u4e86\u5bf9\u8c61\u7684\u521b\u5efa + \u4f7f\u5f97\u5177\u4f53\u5316\u7c7b\u7684\u5de5\u4f5c\u5ef6\u8fdf\u5230\u4e86\u5b50\u7c7b\u4e2d\uff0c\u89e3\u51b3\u4e86\u9700\u8981\u77e5\u9053\u5b9e\u9645\u5b50\u7c7b\u540d\u79f0\u7684\u95ee\u9898</p> <p>\u5177\u4f53\u6765\u8bb2\uff0c\u5728Factory\u4e2d\uff0c\u58f0\u660e\u4e00\u4e2a\u521b\u5efa\u5bf9\u8c61\u7684\u63a5\u53e3\uff0c\u5c06\u5177\u4f53\u5b9e\u73b0\u653e\u5728Factory\u7684\u5b50\u7c7b\u4e2d\u5b9e\u73b0.</p> <p>\u53ef\u4ee5\u770b\u5230\u5728\u793a\u4f8b\u4e2d\uff0c\u7236\u7c7b\u5e76\u4e0d\u77e5\u9053\u8981\u5177\u4f53\u5b9e\u4f8b\u5316\u54ea\u4e00\u4e2a\u5b50\u7c7b\uff0c\u56e0\u4e3a\u5b9e\u73b0\u88ab\u5ef6\u8fdf\u5230\u4e86\u5b50\u7c7b\u5185\u90e8\u3002\u5982\u679c\u8981\u5b9e\u73b0\u591a\u4e2aConcreteProduct\u7684\u5b9e\u4f8b\u5316\uff0c\u90a3\u4e48\u5f97\u5728Factory\u4e2d\u6dfb\u52a0\u65b0\u7684\u65b9\u6cd5\u6765\u5904\u7406\u3002</p> <p>\u89e3\u51b3\u65b9\u6cd5\u662f\u5728\u5b50\u7c7b\u4e2d\u901a\u8fc7\u591a\u6001\u6765\u5b9e\u73b0(\u540c\u540d\u51fd\u6570\u4e0d\u540c\u5b9e\u73b0\uff0c\u9700\u8981\u65b0\u52a0\u5b50\u7c7b\uff0c\u5373\u65b0\u7684\u5de5\u5382\u5177\u4f53\u5b50\u7c7b)\uff0c\u6216\u8005\u7ed9FactoryMethod\u4f20\u9012\u4e00\u4e2a\u53c2\u6570(\u4f5c\u4e3a\u6a21\u677f\u53c2\u6570)\u6765\u51b3\u5b9a\u521b\u5efa\u54ea\u4e00\u4e2a\u5177\u4f53\u7684Product</p> <ul> <li>\u5c40\u9650\u5728\u4e8e\u6240\u6709\u7684\u7c7b\u5fc5\u987b\u6709\u5171\u540c\u7684\u57fa\u7c7b</li> </ul> <p>C++ Tips: \u5728C++\u4e2d\uff0c\u7eaf\u865a\u51fd\u6570\u7684\u58f0\u660e\u53ea\u662f\u4ee3\u8868\u8fd9\u4e2a\u7c7b\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u4ea7\u751f\u5bf9\u8c61\uff0c\u4f46\u662f\u4ecd\u7136\u53ef\u4ee5\u4e3a\u8fd9\u4e2a\u7c7b\u4e2d\u7684\u7eaf\u865a\u51fd\u6570\u6307\u5b9a\u51fd\u6570\u4f53\uff0c\u5f53\u5c06\u6790\u6784\u51fd\u6570\u8bbe\u7f6e\u4e3a\u7eaf\u865a\u51fd\u6570\u65f6\uff0c\u5fc5\u987b\u7ed9\u6790\u6784\u51fd\u6570\u6307\u5b9a\u51fd\u6570\u4f53\uff0c\u56e0\u4e3a\u5b50\u7c7b\u7684\u6790\u6784\u51fd\u6570\u8c03\u7528\u94fe\u9ed8\u8ba4\u542b\u6709\u7236\u7c7b\u7684\u6790\u6784\u51fd\u6570</p> <p></p> <pre><code>//Factory.h\nclass Factory\n{\npublic: \n    virtual ~Factory() = 0;\n    virtual Product *CreateProduct() = 0;\nprotected:\n    Factory();\n}\n\nclass ConcreteFactory : public Factory\n{\npublic:\n    ConcreteFactory();\n    ~ConcreteFactory();\n    Product *CreateProduct();\n}\n\n//Factory.cpp\nFactory::Factory(){\n}\nFactory::~Factory(){\n}\nConcreteFactory::ConcreteFactory(){\n    cout&lt;&lt;\"ConcreteFactory...\"&lt;&lt;endl;\n}\nConcreteFactory::~ConcreteFactory(){\n}\nProduct *ConcreteFactory::CreateProduct(){\n    return new ConcreteProduct();\n}\n\n//Product.h\nclass Product\n{\npublic: \n    virtual ~Product() = 0;\nprotected:\n    Product();\n}\n\nclass ConcreteProduct: public Product\n{\npublic:\n    ConcreteProduct();\n    ~ConcreteProduct();\n}\n\n//Product.cpp\nProduct::Product(){\n}\nProduct::~Product(){\n}\nConcreteProduct::ConcreteProduct(){\n    cout&lt;&lt;\"ConcreteProduct...\"&lt;&lt;endl;\n}\nConcreteProduct::~ConcreteProduct(){\n}\n//main.cpp\nFactory *fac = new ConcreteFactory();\nProduct *p = fac-&gt;CreateProduct();\n</code></pre> <p>3. \u62bd\u8c61\u5de5\u5382\u6a21\u5f0f(AbstractFactory) + \u7528\u4e8e\u521b\u5efa\u4e00\u7ec4\u76f8\u5173\u6216\u8005\u4f9d\u8d56\u7684\u5bf9\u8c61</p> <p>\u5173\u952e\u5728\u4e8e\u5c06\u8fd9\u4e00\u7ec4\u5bf9\u8c61\u521b\u5efa\u5c01\u88c5\u5230\u4e00\u4e2a\u7528\u4e8e\u521b\u5efa\u5bf9\u8c61\u7684\u7c7b\u4e2d\uff0c\u7ef4\u62a4\u8fd9\u6837\u4e00\u4e2a\u521b\u5efa\u7c7b\u3002</p> <p></p> <pre><code>\u4ee3\u7801\u5b9e\u73b0\u89c1\u8bbe\u8ba1\u6a21\u5f0f\u7cbe\u89e3PDF\uff1ap13\n\u7b80\u5355\u6765\u8bf4\u5c31\u662f\uff0cFactory\u4f5c\u4e3a\u7eaf\u865a\u7236\u7c7b\uff0c\u63d0\u4f9bA\u548cB\u5bf9\u8c61\u7684\u521b\u5efa\u63a5\u53e3\uff0c\u6bcf\u4e2a\u5177\u4f53\u5b50\u7c7b\u5b9e\u73b0\u5bf9\u8c61\u521b\u5efa\u7684\u65b9\u6cd5\uff0c\u5b50\u7c7b1\u521b\u5efaA1B1,\u5b50\u7c7b2\u521b\u5efaA2B2\n</code></pre> <p>4. \u5efa\u9020\u5668\u6a21\u5f0f(Builder)</p> <ul> <li>\u7528\u4e8e\u521b\u5efa\u4e00\u4e2a\u590d\u6742\u5bf9\u8c61\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u7531\u591a\u4e2a\u90e8\u5206\u7ec4\u6210\uff0c\u800c\u4e14\u8fd9\u4e9b\u90e8\u5206\u662f\u6709\u5e8f\u7684\uff0c\u521b\u5efa\u5bf9\u8c61\u7684\u8fc7\u7a0b\u662f\u7a33\u5b9a\u7684\uff0c\u4f46\u662f\u6bcf\u4e00\u90e8\u5206\u7684\u521b\u5efa\u662f\u53ef\u53d8\u7684</li> </ul> <ul> <li>\u5173\u952e\u5728\u4e8eDirector\u7c7b\u5e76\u4e0d\u76f4\u63a5\u8fd4\u56de\u5bf9\u8c61\uff0c\u800c\u662fDirector\u7c7b\u8d1f\u8d23\u8c03\u7528Builder\u7684\u63a5\u53e3\uff0c\u5c06Builder\u7684\u63a5\u53e3\u6309\u7167\u4e00\u5b9a\u7684\u987a\u5e8f\u8c03\u7528\uff0c\u6700\u7ec8\u6784\u5efa\u51fa\u4e00\u4e2a\u5b8c\u6574\u7684\u5bf9\u8c61 </li> </ul> <pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std; \n\nclass Player;\n\nclass playBuilder\n{\n    public:\n        string Name;\n        int ID;\n        int HP;\n        int Level;\n    public:\n        playBuilder() {    //\u53c2\u6570\u9ed8\u8ba4\u503c\n            Name = \"xiaoming\";\n            ID = 1001;\n            HP = 100;\n            Level = 1;\n            cout&lt;&lt;\"\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\"&lt;&lt;endl;\n        }\n        playBuilder* SetName(string Name) {this-&gt;Name = Name;return this;}\n        playBuilder* SetID(int ID) {this-&gt;ID = ID;return this;}\n        playBuilder* SetHP(int HP) {this-&gt;HP = HP;return this;}\n        playBuilder* SetLevel(int Level) {this-&gt;Level = Level;return this;}\n        Player *build(); \n};\n\nclass Player {\n    public:                 \n        string Name;\n        int ID;\n        int HP;\n        int Level;\n    public:\n        string GetName() {return Name;}\n        int GetID() {return ID;}\n        int GetHP() {return HP;}\n        int GetLevel() {return Level;}\n\n        Player() {cout&lt;&lt;\"\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\"&lt;&lt;endl;}\n        Player (playBuilder const &amp;temp) {\n            this-&gt;Name = temp.Name;\n            this-&gt;ID = temp.ID;\n            this-&gt;HP = temp.HP;\n            this-&gt;Level = temp.Level;\n        }\n        ~Player() {}\n        void show() {\n            cout&lt;&lt;Name&lt;&lt;\"-\"&lt;&lt;ID&lt;&lt;\"-\"&lt;&lt;HP&lt;&lt;\"-\"&lt;&lt;Level&lt;&lt;endl;\n        }\n};\n\nPlayer *playBuilder::build(){\n    return new Player(*this);\n}\n\nclass Director {\n    public:\n        playBuilder *builder;\n            Director() {\n                builder = new playBuilder();\n            }\n            Player * construct(string Name,int ID,int HP,int Level) {   //\u6784\u9020\u89c4\u5219\n                builder = builder-&gt;SetName(Name);\n                builder = builder-&gt;SetID(ID);\n                builder = builder-&gt;SetHP(HP);\n                builder = builder-&gt;SetLevel(Level);\n                return builder-&gt;build();\n            }\n            ~ Director() {\n                delete builder;\n            }\n};\n\nint main() {\n    Director d1;\n    Player * p1 = d1.construct(\"xiaowang\",999,9999,1);   //\u8f93\u5165\u6784\u5efa\u89c4\u5219\u9700\u8981\u7684\u53c2\u6570\n    Player * p2 = Director().construct(\"xiaosong\",888,8888,8);\n    Player * p3 = playBuilder().SetName(\"zhangsan\")-&gt;SetID(92)-&gt;build();\n    p1-&gt;show();\n    p2-&gt;show();\n    p3-&gt;show();\n    return 0;\n}\n</code></pre> <p>5. Prototype\u6a21\u5f0f + \u539f\u578b\u6a21\u5f0f + \u63d0\u4f9b\u901a\u8fc7\u5df2\u5b58\u5728\u5bf9\u8c61\u8fdb\u884c\u65b0\u5bf9\u8c61\u521b\u5efa\u7684\u63a5\u53e3(Clone)\uff0cC++\u4e2d\u901a\u8fc7\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u5b9e\u73b0 + Builder \u6a21\u5f0f\u91cd\u5728\u590d\u6742\u5bf9\u8c61\u7684\u4e00\u6b65\u6b65\u521b\u5efa\uff08\u5e76\u4e0d\u76f4\u63a5\u8fd4\u56de\u5bf9\u8c61\uff09\uff0cAbstractFactory \u6a21\u5f0f\u91cd\u5728\u4ea7\u751f\u591a\u4e2a\u76f8\u4e92\u4f9d\u8d56\u7c7b\u7684\u5bf9\u8c61\uff0c\u800c Prototype \u6a21\u5f0f\u91cd\u5728\u4ece\u81ea\u8eab\u590d\u5236\u81ea\u5df1\u521b\u5efa\u65b0\u7c7b\u3002 </p> <pre><code>class Prototype\n{\npublic:\n    virtual Prototype *Clone() = 0;\n    virtual ~Prototype();\nprivate:\n    Prototype();\n}\n\nclass ConcretePrototype: public Prototype\n{\npublic:\n    ConcretePrototype();\n    ConcretePrototype(const ConcretePrototype &amp;cp);\n    Prototype *Clone();\n}\n\nConcretePrototype::ConcretePrototype(const ConcretePrototype &amp;cp){\n    cout &lt;&lt; \"ConcretePrototype copy...\" &lt;&lt; endl;\n}\nPrototype *ConcretePrototype::Clone(){\n    return new ConcretePrototype(*this);\n}\n</code></pre>"},{"location":"tech/coding/GoF23%20Notes/#_4","title":"\u7ed3\u6784\u578b\u6a21\u5f0f","text":"<p>\u6240\u8c13\u7ed3\u6784\u6027\u6a21\u5f0f\uff0c\u5c31\u662f\u7528\u4e8e\u8bbe\u8ba1\u5bf9\u8c61\u548c\u7c7b\u7684\u7ed3\u6784\uff0c\u4ee5\u4fbf\u4f7f\u4ed6\u4eec\u80fd\u591f\u66f4\u597d\u7684\u534f\u540c\u5de5\u4f5c</p> <p>1. Bridge\u6a21\u5f0f</p> <ul> <li>\u7528\u4e8e\u62bd\u8c61\u548c\u5177\u4f53\u5b9e\u73b0\u7684\u9700\u6c42\u90fd\u9700\u8981\u66f4\u6539\u7684\u65f6\u5019\uff0c\u5c06\u62bd\u8c61\u548c\u5177\u4f53\u5b9e\u73b0\u5206\u79bb\uff0c\u4f7f\u5f97\u4e24\u8005\u53ef\u4ee5\u72ec\u7acb\u7684\u53d8\u5316</li> <li>\u5177\u4f53\u6765\u8bb2\uff0c\u53ef\u4ee5\u770b\u5230\u5de6\u4fa7\u662f\u62bd\u8c61\u90e8\u5206\uff0c\u53f3\u4fa7\u662f\u5b9e\u73b0\u90e8\u5206 </li> </ul> <p>\u5173\u4e8e\u8fd9\u4e2a\"\u5b9e\u73b0\"\u9700\u8981\u505a\u51fa\u5982\u4e0b\u89e3\u91ca\uff1a</p> <p>\u5728\u6b64\u5904\u5b9e\u73b0\u5e76\u4e0d\u662f\u6307\u62bd\u8c61\u57fa\u7c7b\u7684\u5177\u4f53\u5b50\u7c7b\u5bf9\u57fa\u7c7b\u4e2d\u62bd\u8c61\u65b9\u6cd5\u7684\u5b9e\u73b0\uff0c\u800c\u6307\u7684\u662f\u5982\u4f55\u53bb\u5b9e\u73b0\u7528\u6237\u7684\u9700\u6c42\u3002 \u5728\u56fe\u4e2d\uff0cRefinedAbstraction\u4f5c\u4e3a\u57fa\u7c7b\u7684\u5b50\u7c7b\uff0c\u62e5\u6709AbstructionImp* _imp\u6307\u9488\uff0c\u8fd9\u4e2a\u6307\u9488\u6307\u5411\u4e86\u4e00\u4e2a\u5b9e\u73b0\u7c7b\uff0c\u8fd9\u4e2a\u5b9e\u73b0\u7c7b\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b83\u7684\u5b50\u7c7bConcreteImpA\u548cConcreteImpB\u5206\u522b\u5b9e\u73b0\u4e86\u8fd9\u4e2a\u5b9e\u73b0\u7c7b\u7684\u63a5\u53e3\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728RefinedAbstraction\u4e2d\u8c03\u7528\u8fd9\u4e2a\u5b9e\u73b0\u7c7b\u7684\u63a5\u53e3\uff0c\u5b9e\u73b0\u4e86\u62bd\u8c61\u548c\u5b9e\u73b0\u7684\u5206\u79bb\u3002 \u4f8b\u5982\u6211\u4eec\u8981\u9488\u5bf9\u4e0d\u540c\u7684\u64cd\u4f5c\u7cfb\u7edf\u5206\u522b\u5b9e\u73b0\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u589e\u52a0\u4e00\u4e2aRefinedAbstraction\uff0c\u4f46\u662f\u64cd\u4f5c\u4ecd\u7136\u662fAbstructionImp</p> <p>\u6240\u4ee5Bridge\u5176\u5b9e\u5c31\u662f\u62bd\u8c61\u548c\u5b9e\u73b0\u4e4b\u95f4\u7684Bridge\u5566~</p> <p>2.Adapter\u6a21\u5f0f</p> <ul> <li>\u7528\u4e8e\u5c06\u4e00\u4e2a\u7c7b\u7684\u63a5\u53e3\u8f6c\u6362\u6210\u5ba2\u6237\u5e0c\u671b\u7684\u53e6\u4e00\u4e2a\u63a5\u53e3\uff0c\u4f7f\u5f97\u539f\u672c\u7531\u4e8e\u63a5\u53e3\u4e0d\u517c\u5bb9\u800c\u4e0d\u80fd\u4e00\u8d77\u5de5\u4f5c\u7684\u90a3\u4e9b\u7c7b\u53ef\u4ee5\u4e00\u8d77\u5de5\u4f5c</li> <li>\u5206\u4e3a\u7c7b\u6a21\u5f0f\u548c\u5bf9\u8c61\u6a21\u5f0f</li> </ul> <p></p> <p>\u901a\u8fc7\u8fd9\u5f20\u56fe\u53ef\u4ee5\u53d1\u73b0\uff0cAdapter\u7ee7\u627f\u81eatarget\u7c7b\uff0c\u540c\u65f6\u5305\u542b\u4e00\u4e2aprivate\u7684Adaptee\u7c7b\u7684\u5bf9\u8c61\u6307\u9488\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728Adapter\u4e2d\u7684target\u51fd\u6570\u8c03\u7528Adaptee\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u5b9e\u73b0\u4e86target\u548cAdaptee\u7684\u9002\u914d.</p> <p>3. Decorator\u6a21\u5f0f</p> <ul> <li>\u7528\u4e8e\u52a8\u6001\u7684\u7ed9\u4e00\u4e2a\u5bf9\u8c61\u6dfb\u52a0\u4e00\u4e9b\u989d\u5916\u7684\u804c\u8d23\uff0c\u5c31\u589e\u52a0\u529f\u80fd\u6765\u8bf4\uff0cDecorator\u6a21\u5f0f\u6bd4\u751f\u6210\u5b50\u7c7b\u66f4\u4e3a\u7075\u6d3b\u3002\u5177\u4f53\u662f\u901a\u8fc7\u7ec4\u5408\u7684\u65b9\u5f0f\u800c\u4e0d\u662f\u7ee7\u627f\u6765\u5b9e\u73b0\u7684</li> <li>\u53ef\u4ee5\u8ba9\u7236\u7c7b\u62e5\u6709\u8f83\u5c11\u7684\u62bd\u8c61\u63a5\u53e3\uff0c\u800c\u5b50\u7c7b\u53ef\u4ee5\u901a\u8fc7Decorator\u6765\u6dfb\u52a0\u65b0\u7684\u529f\u80fd</li> </ul> <p></p> <p>\u5728\u56fe\u4e2d\uff0cDecorator\u548cConcreteComponent\u90fd\u7ee7\u627f\u81eaComponent\uff0c\u5229\u7528\u591a\u6001\u7684\u601d\u60f3\uff0cConcreteDecorator\u4e2d\u6709\u4e00\u4e2aComponent\u7684\u6307\u9488\uff0c\u4ece\u800c\u5728\u81ea\u5df1\u7684Operation\u4e2d\u53ef\u4ee5\u8c03\u7528ConcreteComponent\u7684Operation\uff0c\u540c\u65f6ConcreteDecorator\u4e3aConcreteComponent\u6dfb\u52a0\u4e86\u65b0\u529f\u80fd\u3002</p> <p>\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u6b64\u5904\u662fComponent\u7684\u6307\u9488\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u591a\u6001\uff0c\u5982\u679c\u53ea\u662fConcreteComponent\u7684\u5bf9\u8c61\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u5b9e\u73b0\u591a\u6001\uff0c\u4ece\u800c\u65e0\u6cd5\u5b9e\u73b0Decorator\u6a21\u5f0f</p> <p>4. Composite\u6a21\u5f0f</p> <ul> <li>\u7ec4\u5408\u6a21\u5f0f\u5141\u8bb8\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5904\u7406\u5355\u4e2a\u5bf9\u8c61\u548c\u5bf9\u8c61\u7684\u7ec4\u5408\u4f53</li> <li>\u7528\u4e8e\u628a\u4e00\u7ec4\u76f8\u4f3c\u7684\u5bf9\u8c61\u5f53\u4f5c\u4e00\u4e2a\u5355\u4e00\u7684\u5bf9\u8c61\u3002\u7ec4\u5408\u6a21\u5f0f\u4f9d\u636e\u6811\u5f62\u7ed3\u6784\u6765\u7ec4\u5408\u5bf9\u8c61\uff0c\u7528\u6765\u8868\u793a\u90e8\u5206\u4ee5\u53ca\u6574\u4f53\u5c42\u6b21</li> </ul> <p></p> <p>\u8fd9\u91cc\u7ed9\u51fa\u8be6\u7ec6\u89e3\u91ca\uff1a\u5f53\u4f60\u7684\u7a0b\u5e8f\u7ed3\u6784\u6709\u7c7b\u4f3c\u6811\u4e00\u6837\u7684\u5c42\u7ea7\u5173\u7cfb\u65f6\uff0c\u4f8b\u5982\u6587\u4ef6\u7cfb\u7edf\uff0c\u89c6\u56fe\u6811\uff0c\u516c\u53f8\u7ec4\u7ec7\u67b6\u6784\u7b49\u7b49\uff0c\u5982\u679c\u6211\u4eec\u9700\u8981\u4ee5\u7edf\u4e00\u7684\u65b9\u5f0f\u6765\u64cd\u4f5c\u5355\u4e2a\u5bf9\u8c61\u548c\u7531\u8fd9\u4e9b\u5bf9\u8c61\u7ec4\u6210\u7684\u7ec4\u5408\u5bf9\u8c61\uff0c\u5c31\u9700\u8981\u4f7f\u7528Composite\u6a21\u5f0f</p> <p>Component \u62bd\u8c61\u7c7b\uff0c\u5b9a\u4e49\u7edf\u4e00\u7684\u5904\u7406\u64cd\u4f5c\u3002</p> <p>Leaf \u53f6\u5b50\u8282\u70b9\uff0c\u5373\u5355\u4e2a\u5bf9\u8c61</p> <p>Composite \u7ec4\u5408\u5bf9\u8c61\uff0c\u91cc\u9762\u6301\u6709\u4e00\u4e2aList\\&lt;Component&gt;\u3002</p> <ul> <li>\u5206\u4e3a\u900f\u660e\u548c\u5b89\u5168\u4e24\u79cd\u65b9\u5f0f\uff0c\u900f\u660e\u65b9\u5f0f\u5c06\u6240\u6709\u5bf9\u5916\u64cd\u4f5c\u90fd\u653e\u5728Component\uff0c\u53f6\u5b50\u8282\u70b9\u4e5f\u5f97\u63d0\u4f9b\u8fd9\u4e9b\u63a5\u53e3\uff0c\u867d\u7136\u5b83\u5b9e\u9645\u4e0a\u4e0d\u652f\u6301\u8fd9\u4e9b\u64cd\u4f5c\u3002\u800c\u5b89\u5168\u65b9\u5f0f\u53ea\u5c06\u53f6\u5b50\u8282\u70b9\u4e0e\u7ec4\u5408\u5bf9\u8c61\u540c\u65f6\u63d0\u4f9b\u7684\u64cd\u4f5c\u653e\u5728Component\uff0c\u5373\u793a\u4f8b\u56fe\u4e2d\u6240\u793a</li> </ul> <p>5. Flyweight\u6a21\u5f0f</p> <ul> <li>\u53eb\u505a\u4eab\u5143\u6a21\u5f0f</li> <li>\u5141\u8bb8\u4f7f\u7528\u5bf9\u8c61\u5171\u4eab\u6765\u6709\u6548\u5730\u652f\u6301\u5927\u91cf\u7ec6\u7c92\u5ea6\u5bf9\u8c61</li> </ul> <p>\u793a\u4f8b\u573a\u666f\uff1a\u6bd4\u5982\u5728\u6587\u6863\u7f16\u8f91\u5668\u7684\u8bbe\u8ba1\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5982\u679c\u4e3a\u6ca1\u6709\u5b57\u6bcd\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u7684\u8bdd\uff0c\u7cfb\u7edf\u53ef\u80fd\u4f1a\u56e0\u4e3a\u5927\u91cf\u7684\u5bf9\u8c61\u800c\u9020\u6210\u5b58\u50a8\u5f00\u9500\u7684\u6d6a\u8d39\u3002\u4f8b\u5982\u4e00\u4e2a\u5b57\u6bcd\u201ca\u201d\u5728\u6587\u6863\u4e2d\u51fa\u73b0\u4e86100000 \u6b21\uff0c\u800c\u5b9e\u9645\u4e0a\u6211\u4eec\u53ef\u4ee5\u8ba9\u8fd9\u4e00\u4e07\u4e2a\u5b57\u6bcd\u201ca\u201d\u5171\u4eab\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5f53\u7136\u56e0\u4e3a\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\u53ef\u80fd\u5b57\u6bcd\u201ca\u201d\u6709\u4e0d\u540c\u7684\u663e\u793a\u6548\u679c\uff08\u4f8b\u5982\u5b57\u4f53\u548c\u5927\u5c0f\u7b49\u8bbe\u7f6e\u4e0d\u540c\uff09\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u53ef\u4ee5\u4e3a\u5c06 \u5bf9\u8c61\u7684\u72b6\u6001\u5206\u4e3a\u201c\u5916\u90e8\u72b6\u6001\u201d\u548c\u201c\u5185\u90e8\u72b6\u6001\u201d\uff0c\u5c06\u53ef\u4ee5\u88ab\u5171\u4eab\uff08\u4e0d\u4f1a\u53d8\u5316\uff09\u7684\u72b6\u6001\u4f5c\u4e3a\u5185\u90e8\u72b6\u6001\u5b58\u50a8\u5728\u5bf9\u8c61\u4e2d\uff0c\u800c\u5916\u90e8\u5bf9\u8c61\uff08\u4f8b\u5982\u4e0a\u9762\u63d0\u5230\u7684\u5b57\u4f53\u3001\u5927\u5c0f\u7b49\uff09\u6211\u4eec\u53ef\u4ee5\u5728\u9002\u5f53\u7684\u65f6\u5019\u5c06 \u5916\u90e8\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9\u5bf9\u8c61\uff08\u4f8b\u5982\u5728\u663e\u793a\u7684\u65f6\u5019\uff0c\u5c06\u5b57\u4f53\u3001\u5927\u5c0f\u7b49\u4fe1\u606f\u4f20\u9012\u7ed9\u5bf9\u8c61</p> <p></p> <p>\u56fe\u4e2d\uff0cFlyweightFactory\u62e5\u6709\u4e00\u4e2a\u7ba1\u7406\u3001\u5b58\u50a8\u5bf9\u8c61\u7684\u4ed3\u5e93\u6216\u8005\u53eb\u5bf9\u8c61\u6c60(vector)\uff0cGetFlyweight\uff08\uff09\u6d88\u606f\u4f1a\u904d\u5386\u5bf9\u8c61\u6c60\u4e2d\u7684\u5bf9\u8c61\uff0c\u5982\u679c\u5df2\u7ecf\u5b58\u5728\u5219\u76f4\u63a5\u8fd4\u56de\u7ed9 Client\uff0c\u5426\u5219\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u8fd4\u56de\u7ed9 Client\u3002</p> <p>6.Facade\u6a21\u5f0f</p> <ul> <li>\u4e5f\u53eb\u505a\u9762\u677f\u6a21\u5f0f</li> <li>\u7528\u4e8e\u5728\u9ad8\u5c42\u5bf9\u5916\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u7edf\u4e00\u4ea4\u4e92\u63a5\u53e3\uff0c\u63a9\u85cf\u5b50\u6a21\u5757\u5185\u90e8\u7684\u7ec6\u8282\uff0c\u89e3\u8026\u4e86\u7cfb\u7edf</li> <li>\u975e\u5e38\u7b80\u5355\uff0c\u5982\u56fe\u6240\u793a</li> </ul> <p></p> <p>7.Proxy\u6a21\u5f0f</p> <ul> <li>\u4e3a\u5176\u4ed6\u5bf9\u8c61\u63d0\u4f9b\u4e00\u79cd\u4ee3\u7406\u4ee5\u63a7\u5236\u5bf9\u8fd9\u4e2a\u5bf9\u8c61\u7684\u8bbf\u95ee\uff0c\u53ef\u4ee5\u5728\u8bbf\u95ee\u7684\u540c\u65f6\u589e\u52a0\u5176\u4ed6\u64cd\u4f5c</li> <li>\u5b9e\u73b0\u4e86\u903b\u8f91\u548c\u5b9e\u73b0\u7684\u89e3\u8026</li> </ul> <ul> <li>\u4ee3\u7406\u6a21\u5f0f\u7684\u4f7f\u7528\u6709\u5982\u4e0b\u51e0\u79cd\u60c5\u51b5\uff1a<ul> <li>\u8fdc\u7a0b\u4ee3\u7406 \uff1a\u4e3a\u4f4d\u4e8e\u4e24\u4e2a\u4e0d\u540c\u5730\u5740\u7a7a\u95f4\u5bf9\u8c61\u7684\u8bbf\u95ee\u63d0\u4f9b\u4e86\u4e00\u79cd\u5b9e\u73b0\u673a\u5236\uff0c\u53ef\u4ee5\u5c06\u4e00\u4e9b\u6d88\u8017\u8d44\u6e90\u8f83\u591a\u7684\u5bf9\u8c61\u548c\u64cd\u4f5c\u79fb\u81f3\u6027\u80fd\u66f4\u597d\u7684\u8ba1\u7b97\u673a\u4e0a\uff0c\u63d0\u9ad8\u7cfb\u7edf\u7684\u6574\u4f53\u8fd0\u884c\u6548\u7387\u3002</li> <li>\u865a\u62df\u4ee3\u7406\uff1a\u901a\u8fc7\u4e00\u4e2a\u6d88\u8017\u8d44\u6e90\u8f83\u5c11\u7684\u5bf9\u8c61\u6765\u4ee3\u8868\u4e00\u4e2a\u6d88\u8017\u8d44\u6e90\u8f83\u591a\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u8282\u7701\u7cfb\u7edf\u7684\u8fd0\u884c\u5f00\u9500\u3002\u6bd4\u5982\u521b\u5efa\u5f00\u9500\u5927\u7684\u5bf9\u8c61\u65f6\u5019\uff0c\u6bd4\u5982\u663e\u793a\u4e00\u5e45\u5927\u7684\u56fe\u7247\uff0c\u6211\u4eec\u5c06\u8fd9\u4e2a\u521b\u5efa\u7684\u8fc7\u7a0b\u4ea4\u7ed9\u4ee3\u7406\u53bb\u5b8c\u6210\u3002</li> <li>\u7f13\u51b2\u4ee3\u7406\uff1a\u4e3a\u67d0\u4e00\u4e2a\u64cd\u4f5c\u7684\u7ed3\u679c\u63d0\u4f9b\u4e34\u65f6\u7684\u7f13\u5b58\u5b58\u50a8\u7a7a\u95f4\uff0c\u4ee5\u4fbf\u5728\u540e\u7eed\u4f7f\u7528\u4e2d\u80fd\u591f\u5171\u4eab\u8fd9\u4e9b\u7ed3\u679c\uff0c\u4f18\u5316\u7cfb\u7edf\u6027\u80fd\uff0c\u7f29\u77ed\u6267\u884c\u65f6\u95f4\u3002</li> <li>\u4fdd\u62a4\u4ee3\u7406\uff1a\u53ef\u4ee5\u63a7\u5236\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u4e3a\u4e0d\u540c\u7528\u6237\u63d0\u4f9b\u4e0d\u540c\u7ea7\u522b\u7684\u4f7f\u7528\u6743\u9650\u3002</li> <li>\u667a\u80fd\u5f15\u7528\uff1a\u8981\u4e3a\u4e00\u4e2a\u5bf9\u8c61\u7684\u8bbf\u95ee\uff08\u5f15\u7528\uff09\u63d0\u4f9b\u4e00\u4e9b\u989d\u5916\u7684\u64cd\u4f5c\u65f6\u53ef\u4ee5\u4f7f\u7528\u3002\u4f8b\u5982\u667a\u80fd\u6307\u9488</li> </ul> </li> </ul> <p></p> <p>\u5728\u793a\u4f8b\u56fe\u4e2d\uff0cProxy\u6709\u4e00\u4e2aSubject\u7684\u5bf9\u8c61\u6307\u9488\uff0c\u7528ConcreteSubject\u521d\u59cb\u5316\u540e\uff0c\u8c03\u7528Proxy\u7684\u65b9\u6cd5\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u8c03\u7528ConcreteSubject\u7684\u5bf9\u5e94\u65b9\u6cd5</p>"},{"location":"tech/coding/GoF23%20Notes/#_5","title":"\u884c\u4e3a\u578b\u6a21\u5f0f","text":"<p>\u884c\u4e3a\u578b\u8bbe\u8ba1\u6a21\u5f0f\u4e3b\u8981\u89e3\u51b3\u7c7b\u6216\u8005\u5bf9\u8c61\u4e4b\u95f4\u4e92\u76f8\u901a\u4fe1\u7684\u95ee\u9898</p> <p>1.Template\u6a21\u5f0f</p> <ul> <li>\u7b80\u5355\u6765\u8bf4\uff0cTemplate \u6a21\u5f0f\u5b9e\u9645\u4e0a\u5c31\u662f\u5229\u7528\u9762\u5411\u5bf9\u8c61\u4e2d\u591a\u6001\u7684\u6982\u5ff5\u5b9e\u73b0\u7b97\u6cd5\u5b9e\u73b0\u7ec6\u8282\u548c\u9ad8\u5c42\u63a5\u53e3\u7684\u677e\u8026\u5408\uff0c\u6240\u4ee5\u662f\u91c7\u53d6\u7ee7\u627f\u7684\u65b9\u5f0f\u5b9e\u73b0\u7684</li> <li>\u6ce8\u610f\u7684\u662f\uff0c\u539f\u8bed\u64cd\u4f5c(\u7ec6\u8282\u7b97\u6cd5)\u5b9a\u4e49\u4e3aprotected\uff0c\u800cTemplateMethod\u5b9a\u4e49\u4e3aPublic,\u5728TemplateMethod\u91cc\u9762\u8c03\u7528\u539f\u8bed\u64cd\u4f5c\u4ece\u800c\u5b9e\u73b0\u771f\u6b63\u7684\u8c03\u7528</li> </ul> <p></p> <p>Template\u4f53\u73b0\u4e86DIP\u7684\u539f\u5219\uff0c\u5373\u9ad8\u5c42\u6a21\u5757\u8c03\u7528\u5e95\u5c42\u6a21\u5757\u7684\u64cd\u4f5c\uff0c\u5e95\u5c42\u6a21\u5757\u5b9e\u73b0\u9ad8\u5c42\u6a21\u5757\u7684\u63a5\u53e3\uff0c\u8fd9\u6837\u63a7\u5236\u6743\u5728\u7236\u7c7b\uff08\u9ad8\u5c42\u6a21\u5757\uff09\uff0c\u4f4e\u5c42\u6a21\u5757\u53cd\u800c\u8981\u4f9d\u8d56\u9ad8\u5c42\u6a21\u5757\u3002 </p> <p>2.Strategy\u6a21\u5f0f</p> <ul> <li>\u7b56\u7565\u6a21\u5f0f</li> <li>\u548cTemplate\u6a21\u5f0f\u540c\u6837\u89e3\u51b3\u4e86\u5177\u4f53\u5b9e\u73b0\u548c\u62bd\u8c61\u7684\u89e3\u8026\u95ee\u9898\uff0c\u4f46\u662f\u5b83\u662f\u901a\u8fc7\u7ec4\u5408\u7684\u65b9\u5f0f\u5b9e\u73b0\u7684\uff0c\u5177\u4f53\u6765\u8bb2\u3002Strategy \u6a21\u5f0f\u5c06\u903b\u8f91\uff08\u7b97\u6cd5\uff09\u5c01\u88c5\u5230\u4e00\u4e2a\u7c7b\uff08Context\uff09\u91cc\u9762\uff0c\u901a\u8fc7\u7ec4\u5408\u7684\u65b9\u5f0f\u5c06\u5177\u4f53\u7b97\u6cd5\u7684\u5b9e\u73b0\u5728\u7ec4\u5408\u5bf9\u8c61\u4e2d\u5b9e\u73b0\uff0c\u518d\u901a\u8fc7\u59d4\u6258\u7684\u65b9\u5f0f\u5c06\u62bd\u8c61\u63a5\u53e3\u7684\u5b9e\u73b0\u59d4\u6258\u7ed9\u7ec4\u5408\u5bf9\u8c61\u5b9e\u73b0</li> </ul> <p></p> <p>\u5728\u793a\u4f8b\u4e2d\uff0cContext\u5bf9\u8c61\u6709\u4e00\u4e2aDoAction\u63a5\u53e3\uff0c\u4f46\u662f\u6709\u4e00\u4e2aStrategy\u7c7b\u7684\u5bf9\u8c61\u6307\u9488\uff0c\u6240\u4ee5\u901a\u8fc7DoAction\u51fd\u6570\u5185\u8c03\u7528Strategy\u7684AlgorithmInterface\u63a5\u53e3\uff0c\u5b9e\u73b0\u4e86\u5177\u4f53\u5b9e\u73b0\u548c\u63a5\u53e3\u7684\u5206\u79bb</p> <p>\u4e24\u79cd\u6a21\u5f0f\u5bf9\u6bd4\uff1aStrategy\u6a21\u5f0f\u6709\u5982\u4e0b\u597d\u5904\uff0c\u9996\u5148\uff0cStrategy\u6a21\u5f0f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u52a8\u6001\u6539\u53d8Context\u6240\u4f7f\u7528\u7684\u5177\u4f53Strategy\uff0c\u800cTemplate\u6a21\u5f0f\u5728\u7f16\u8bd1\u65f6\u5c31\u5df2\u7ecf\u786e\u5b9a\u4e86\u5177\u4f53\u7684\u5b9e\u73b0\uff0c\u5176\u6b21\uff0c\u5c01\u88c5\u6027\u66f4\u597d\uff0c\u88ab\u5305\u542b\u5bf9\u8c61\u7684\u5185\u90e8\u7ec6\u8282\u5bf9\u5916\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u7ec4\u5408\u5bf9\u8c61\u548c\u88ab\u7ec4\u5408\u5bf9\u8c61\u4e4b\u95f4\u7684\u4f9d\u8d56\u6027\u5c0f\u3002\u6240\u4ee5\u4f18\u5148\u4f7f\u7528Strategy\u6a21\u5f0f\u3002</p> <p>\u552f\u4e00\u7684\u7f3a\u70b9\u5728\u4e8e\uff0cStrategy\u6a21\u5f0f\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u4e2d\u7c7b\u7684\u6570\u76ee\u589e\u52a0\uff0c\u4f46\u662f\u8fd9\u662f\u53ef\u4ee5\u63a5\u53d7\u7684\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u66f4\u597d\u7684\u5b9e\u73b0\u5355\u4e00\u804c\u8d23\u539f\u5219\u3002</p> <p>3.State\u6a21\u5f0f</p> <ul> <li>\u72b6\u6001\u6a21\u5f0f</li> <li>\u89e3\u51b3\u7684\u662fFSM\u72b6\u6001\u592a\u591a\u65f6\u5bb9\u6613\u51fa\u9519\uff0c\u72b6\u6001\u903b\u8f91\u548c\u52a8\u4f5c\u5b9e\u73b0\u6ca1\u6709\u5206\u79bb\u7684\u95ee\u9898\u3002</li> <li>\u5f53\u4e00\u4e2a\u5bf9\u8c61\u5185\u5728\u72b6\u6001\u6539\u53d8\u65f6\u5141\u8bb8\u6539\u53d8\u5176\u884c\u4e3a\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u770b\u8d77\u6765\u50cf\u662f\u6539\u53d8\u4e86\u5176\u7c7b\u3002</li> </ul> <p></p> <p>\u5728\u5177\u4f53\u5b9e\u73b0\u4e2d\uff0c\u5c06 State \u58f0\u660e\u4e3a Context \u7684\u53cb\u5143\u7c7b\uff08friend class\uff09\uff0c\u5176\u4f5c\u7528\u662f\u8ba9 State \u6a21\u5f0f\u8bbf\u95ee Context \u7684 protected \u63a5\u53e3 ChangeSate\u3002\u8fd9\u6837\uff0cState \u6a21\u5f0f\u5c31\u53ef\u4ee5\u5728\u72b6\u6001\u8f6c\u6362\u65f6\u8c03\u7528 Context \u7684 ChangeState \u63a5\u53e3\uff0c\u5b9e\u73b0\u72b6\u6001\u7684\u8f6c\u6362\u3002</p> <p>\u540c\u65f6Context\u4e2d\u6709\u4e00\u4e2aState*\u7684\u6307\u9488\uff0c\u5b83\u5c06\u4f9d\u8d56\u72b6\u6001\u7684\u5404\u79cdOperation\u64cd\u4f5c\u59d4\u6258\u7ed9\u4e0d\u540c\u7684\u72b6\u6001\u5bf9\u8c61\u6267\u884c\u3002</p> <p>State \u53ca\u5176\u5b50\u7c7b\u4e2d\u7684\u64cd\u4f5c\u90fd\u5c06 Context*\u4f20\u5165\u4f5c\u4e3a\u53c2\u6570\uff0c\u5176\u4e3b\u8981\u76ee\u7684\u662f State \u7c7b\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u6307\u9488\u8c03\u7528 Context \u4e2d\u7684\u65b9\u6cd5</p> <p>4.Observer\u6a21\u5f0f</p> <ul> <li>\u89c2\u5bdf\u8005\u6a21\u5f0f\uff0c\u4e5f\u53eb\u53d1\u5e03\u8ba2\u9605\u6a21\u5f0f</li> <li>\u5b9a\u4e49\u5bf9\u8c61\u95f4\u7684\u4e00\u79cd\u4e00\u5bf9\u591a\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u7684\u72b6\u6001\u53d1\u751f\u6539\u53d8\u65f6\uff0c\u6240\u6709\u4f9d\u8d56\u4e8e\u5b83\u7684\u5bf9\u8c61\u90fd\u53ef\u4ee5\u5f97\u5230\u901a\u77e5\u5e76\u81ea\u52a8\u66f4\u65b0\u3002</li> </ul> <p></p> <p>\u5728\u793a\u4f8b\u56fe\u4e2d\uff0c Subject \u63d0\u4f9b\u4f9d\u8d56\u4e8e\u5b83\u7684\u89c2\u5bdf\u8005 Observer \u7684\u6ce8\u518c\uff08Attach\uff09\u548c\u6ce8\u9500\uff08Detach\uff09\u64cd\u4f5c\uff0c\u5e76\u4e14\u63d0\u4f9b\u4e86\u4f7f\u5f97\u4f9d\u8d56\u4e8e\u5b83\u7684\u6240\u6709\u89c2\u5bdf\u8005\u540c\u6b65\u7684\u64cd\u4f5c\uff08Notify\uff09\u3002</p> <p>\u5728\u5b9e\u73b0\u4e2d\uff0cSubject \u7ef4\u62a4\u4e00\u4e2a list \u4f5c\u4e3a\u5b58\u50a8\u5176\u6240\u6709\u89c2\u5bdf\u8005\u7684\u5bb9\u5668\uff0c\u6bcf\u5f53\u8c03\u7528Notify\u64cd\u4f5c\u5c31\u904d\u5386list \u4e2d\u7684Observer\u5bf9\u8c61\uff0c\u5e76\u5e7f\u64ad\u901a\u77e5\u6539\u53d8\u72b6\u6001\uff08\u8c03\u7528Observer\u7684Update\u64cd\u4f5c\uff09\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u7531observer\u53d1\u8d77\uff0c\u56e0\u4e3aObserver\u7ef4\u62a4\u4e86\u4e00\u4e2aSubject\u7684\u6307\u9488</p> <p>5.Memento\u6a21\u5f0f</p> <ul> <li>\u5907\u5fd8\u5f55\u6a21\u5f0f</li> <li>\u5728\u4e0d\u7834\u574f\u5c01\u88c5\u6027\u7684\u524d\u63d0\u4e0b\uff0c\u5728\u67d0\u4e00\u65f6\u523b\u6355\u83b7\u4e00\u4e2a\u5bf9\u8c61\u7684\u5185\u90e8\u72b6\u6001\uff0c\u5e76\u5728\u8be5\u5bf9\u8c61\u4e4b\u5916\u4fdd\u5b58\u8fd9\u4e2a\u72b6\u6001\uff0c\u8fd9\u6837\u4ee5\u540e\u5c31\u53ef\u4ee5\u5c06\u8be5\u5bf9\u8c61\u6062\u590d\u5230\u539f\u5148\u4fdd\u5b58\u7684\u72b6\u6001</li> </ul> <p></p> <p>\u5728\u793a\u4f8b\u56fe\u4e2d\uff0cOriginator\u662f\u9700\u8981\u4fdd\u5b58\u72b6\u6001\u7684\u5bf9\u8c61\uff0cMemento\u662f\u4fdd\u5b58\u72b6\u6001\u7684\u5bf9\u8c61\uff0cMemento \u7684\u63a5\u53e3\u90fd\u58f0\u660e\u4e3a private\uff0c\u800c\u5c06 Originator \u58f0\u660e\u4e3a Memento \u7684\u53cb\u5143\u7c7b\uff0c\u4ece\u800c\u5c06Originator\u7684\u72b6\u6001\u4fdd\u5b58\u5728Memento\u7c7b\u4e2d\u3002\u4e24\u8005\u4e4b\u4e2d\u90fd\u6709\u4e00\u4e2aState\u53d8\u91cf\u6765\u4fdd\u5b58\u72b6\u6001\uff0cOriginator\u53ef\u4ee5\u901a\u8fc7CreateMemento\u6765\u521b\u5efa\u4e00\u4e2aMemento\u5bf9\u8c61\uff0c\u901a\u8fc7RestoreToMomento\u6765\u6062\u590d\u72b6\u6001</p> <p>6.Mediator\u6a21\u5f0f</p> <ul> <li>\u4e2d\u4ecb\u8005\u6a21\u5f0f\uff0c\u7528\u4e8e\u5bf9\u8c61\u95f4\u7684\u4ea4\u4e92\u548c\u901a\u4fe1</li> <li>\u5c06\u591a\u5bf9\u591a\u7684\u901a\u4fe1\u8f6c\u5316\u4e3a\u4e00\u5bf9\u591a\u7684\u901a\u4fe1</li> </ul> <p></p> <p>\u5728\u793a\u4f8b\u56fe\u4e2d\uff0c\u6bcf\u4e2aColleague\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2aMediator\u7684\u6307\u9488\uff0c\u7ef4\u62a4\u4e00\u4e2aMediator\u5bf9\u8c61\uff0c\u800cAB\u4e4b\u95f4\u7684\u4ea4\u4e92\u5c31\u53ef\u4ee5\u901a\u8fc7ConcreteMediator\u7684\u63a5\u53e3\u6765\u5b9e\u73b0\uff0c\u4ece\u800c\u5b9e\u73b0\u4e86\u5bf9\u8c61\u4e4b\u95f4\u7684\u89e3\u8026\uff0cAB\u4e4b\u95f4\u4e0d\u7528\u7ef4\u62a4\u5404\u81ea\u7684\u5f15\u7528\u3002</p> <p>7.Command\u6a21\u5f0f</p> <ul> <li>\u547d\u4ee4\u6a21\u5f0f</li> <li>\u5c06\u8bf7\u6c42\u5c01\u88c5\u5230\u4e00\u4e2a\u5bf9\u8c61\u4e2d\uff0c\u5e76\u5c06\u8bf7\u6c42\u7684\u63a5\u6536\u8005\u5b58\u653e\u5230\u5177\u4f53\u7684ConcreteCommand\u4e2d\uff0c\u5b9e\u73b0\u4e86\u8c03\u7528\u64cd\u4f5c\u7684\u5bf9\u8c61\u548c\u64cd\u4f5c\u7684\u5177\u4f53\u5b9e\u73b0\u89e3\u8026</li> </ul> <p></p> <p>\u5728\u793a\u4f8b\u56fe\u4e2d\uff0cCommand\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2aExecute\u7684\u63a5\u53e3\uff0cConcreteCommand\u7ee7\u627f\u81eaCommand\uff0c\u5b9e\u73b0\u4e86Execute\u7684\u63a5\u53e3\uff0c\u540c\u65f6\u7ef4\u62a4\u4e86\u4e00\u4e2aReceiver\u7684\u6307\u9488\u3002</p> <p>Command \u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b9a\u4e49\u4e00\u4e2a\u547d\u4ee4</p> <p>ConcreteCommand \u5177\u4f53\u7684\u6267\u884c\u547d\u4ee4\uff0c\u4ed6\u4eec\u9700\u8981\u5b9e\u73b0Command\u63a5\u53e3</p> <p>Receiver \u771f\u6b63\u6267\u884c\u547d\u4ee4\u7684\u89d2\u8272\uff0c\u90a3\u4e9b\u5177\u4f53\u7684\u547d\u4ee4\u5f15\u7528\u5b83\uff0c\u8ba9\u5b83\u5b8c\u6210\u547d\u4ee4\u7684\u6267\u884c</p> <p>Invoker \u7ef4\u62a4\u4e00\u7ec4ConcreteCommand\uff0c\u8d1f\u8d23\u6309\u7167\u5ba2\u6237\u7aef\u7684\u6307\u4ee4\u8bbe\u7f6e\u5e76\u6267\u884c\u547d\u4ee4(\u547d\u4ee4\u7684\u8c03\u7528\u8005)\uff0c\u50cf\u547d\u4ee4\u7684\u64a4\u9500\uff0c\u65e5\u5fd7\u7684\u8bb0\u5f55\u7b49\u529f\u80fd\u90fd\u8981\u5728\u6b64\u7c7b\u4e2d\u5b8c\u6210</p> <p>\u9664\u4e86\u4f7f\u7528Invoker\u6765\u4e3b\u52a8\u6fc0\u6d3b\u547d\u4ee4\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528Callback\u7684\u601d\u60f3\uff0c\u5c06\u64cd\u4f5c\u65b9\u6cd5\u7684\u5730\u5740\u901a\u8fc7\u53c2\u6570\u4f20\u9012\u7ed9Command\u5bf9\u8c61\uff0c\u9700\u8981\u5229\u7528\u7c7b\u6210\u5458\u51fd\u6570\u6307\u9488<code>typedef void (Receiver::*Action)()</code>\u6765\u5b9e\u73b0</p> <p>8.Visitor\u6a21\u5f0f</p> <ul> <li>\u8bbf\u95ee\u8005\u6a21\u5f0f</li> <li>\u5c06\u6240\u6709\u7684\u66f4\u65b0\u5c01\u88c5\u5230\u4e00\u4e2a\u7c7b\u4e2d\uff0c\u5e76\u7531\u5f85\u66f4\u6539\u7c7b\u63d0\u4f9b\u4e00\u4e2a\u63a5\u6536\u63a5\u53e3</li> </ul> <p></p> <p>Visitor \u6a21\u5f0f\u7684\u5173\u952e\u662f\u53cc\u5206\u6d3e\uff08Double-Dispatch\uff09\u7684\u6280\u672f,\u5373\u6267\u884c\u7684\u64cd\u4f5c\u5c06\u53d6\u51b3\u4e8e\u8bf7\u6c42\u7684\u79cd\u7c7b\u548c\u63a5\u6536\u8005\u7684\u7c7b\u578b\u3002\u5177\u4f53\u8c03\u7528\u54ea\u4e00\u4e2a\u5177\u4f53\u7684 Accept \uff08\uff09\u64cd\u4f5c\uff0c\u6709\u4e24\u4e2a\u51b3\u5b9a\u56e0\u7d20\uff1a + 1.Element \u7684\u7c7b\u578b\u3002\u56e0\u4e3a Accept\uff08\uff09\u662f\u591a\u6001\u7684\u64cd\u4f5c\uff0c\u9700\u8981\u5177\u4f53\u7684 Element \u7c7b\u578b\u7684\u5b50\u7c7b\u624d\u53ef\u4ee5\u51b3\u5b9a\u5230\u5e95\u8c03\u7528\u54ea\u4e00\u4e2a Accept\uff08\uff09\u5b9e\u73b0\uff1b + 2.Visitor \u7684\u7c7b\u578b\u3002Accept\uff08\uff09\u64cd\u4f5c\u6709\u4e00\u4e2a\u53c2\u6570\uff08Visitor* vis\uff09\uff0c\u8981\u51b3\u5b9a\u4e86\u5b9e\u9645\u4f20\u8fdb\u6765\u7684 Visitor \u7684\u5b9e\u9645\u7c7b\u522b\u624d\u53ef\u4ee5\u51b3\u5b9a\u5177\u4f53\u662f\u8c03\u7528\u54ea\u4e2a VisitConcrete\uff08\uff09\u5b9e\u73b0</p> <p>\u5728\u793a\u4f8b\u56fe\u4e2d\uff0cVisit\u65b9\u6cd5\u901a\u8fc7\u4e24\u4e2a\u51fd\u6570\u6765\u5177\u4f53\u5b9e\u73b0\uff0c\u4f46\u662f\u53ef\u4ee5\u901a\u8fc7\u51fd\u6570\u91cd\u8f7d\u6765\u5b9e\u73b0Visit\u65b9\u6cd5\uff0c\u6839\u636e\u53c2\u6570\u4e0d\u540c\u6765\u8c03\u7528\u4e0d\u540c\u7684Visit\u51fd\u6570\u3002\u53e6\u5916\uff0c\u4e5f\u53ef\u4ee5\u5229\u7528C++\u7684RTTI\uff0c\u901a\u8fc7dynamic_cast\u6765\u5224\u65adElement\u7684\u5177\u4f53\u7c7b\u578b\uff0c\u518d\u8c03\u7528\u5bf9\u5e94\u7684Visit\u51fd\u6570</p> <pre><code>if (dynamic_cast&lt;ConcreteElementA*&gt;(elem)) {\n    // \u5982\u679c\u662f ConcreteElementA\uff0c\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\n    ConcreteElementA* a = dynamic_cast&lt;ConcreteElementA*&gt;(elem);\n    a-&gt;accept();\n} else if (dynamic_cast&lt;ConcreteElementB*&gt;(elem)) {\n    // \u5982\u679c\u662f ConcreteElementB\uff0c\u6267\u884c\u76f8\u5e94\u64cd\u4f5c\n    ConcreteElementB* b = dynamic_cast&lt;ConcreteElementB*&gt;(elem);\n    b-&gt;accept();\n} ~~~~\n</code></pre> <p>9.Chain of Responsibility\u6a21\u5f0f</p> <ul> <li>\u8d23\u4efb\u94fe\u6a21\u5f0f</li> <li>\u907f\u514d\u8bf7\u6c42\u53d1\u9001\u8005\u4e0e\u63a5\u6536\u8005\u8026\u5408\u5728\u4e00\u8d77\uff0c\u8ba9\u591a\u4e2a\u5bf9\u8c61\u90fd\u6709\u53ef\u80fd\u63a5\u6536\u8bf7\u6c42\uff0c\u5c06\u8fd9\u4e9b\u5bf9\u8c61\u8fde\u63a5\u6210\u4e00\u6761\u94fe\uff0c\u5e76\u4e14\u6cbf\u7740\u8fd9\u6761\u94fe\u4f20\u9012\u8bf7\u6c42\uff0c\u76f4\u5230\u6709\u5bf9\u8c61\u5904\u7406\u5b83\u4e3a\u6b62</li> <li>\u901a\u5e38\u7528\u4e8e\u4e00\u4e2a\u8bf7\u6c42\u9700\u8981\u88ab\u591a\u4e2a\u5bf9\u8c61\u4e2d\u7684\u67d0\u4e00\u4e2a\u5904\u7406\uff0c\u4f46\u662f\u5177\u4f53\u5bf9\u8c61\u9700\u8981\u5728\u8fd0\u884c\u65f6\u6839\u636e\u6761\u4ef6\u51b3\u5b9a</li> </ul> <p></p> <p>\u5728\u793a\u4f8b\u56fe\u4e2d\uff0cHandler\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e2aHandleRequest\u7684\u63a5\u53e3\uff0cConcreteHandler\u7ee7\u627f\u81eaHandler\uff0c\u5b9e\u73b0\u4e86HandleRequest\u7684\u63a5\u53e3\uff0c\u540c\u65f6\u7ef4\u62a4\u4e86\u4e00\u4e2aSuccessor\u7684\u6307\u9488\uff0c\u8bb0\u5f55\u540e\u7ee7\u5bf9\u8c61\u3002\u5728HandleRequest\u4e2d\uff0c\u5982\u679c\u81ea\u5df1\u53ef\u4ee5\u5904\u7406\u8bf7\u6c42\uff0c\u90a3\u4e48\u5c31\u5904\u7406\uff0c\u5426\u5219\u4ea4\u7ed9\u540e\u7ee7\u5bf9\u8c61\u5904\u7406\u3002</p> <p>\u964d\u4f4e\u4e86\u7cfb\u7edf\u7684\u8026\u5408\u6027</p> <p>10.Iterator\u6a21\u5f0f</p> <ul> <li>\u8fed\u4ee3\u5668\u6a21\u5f0f</li> <li>\u7528\u6765\u89e3\u51b3\u4e00\u4e2a\u805a\u5408\u5bf9\u8c61\u7684\u904d\u5386\u95ee\u9898\uff0c\u5c06\u5bf9\u805a\u5408\u7684\u904d\u5386\u5c01\u88c5\u5230\u4e00\u4e2a\u5bf9\u8c61\u4e2d\uff0c\u53c2\u89c1C++\u4e2d\u7684Iterator</li> </ul> <p></p> <p>\u611f\u89c9\u6ca1\u5565\u597d\u8bf4\u7684\uff0cConcreteAggregate\u6709\u4e00\u4e2a\u5bf9\u8c61\u6570\u7ec4\uff0c\u4fdd\u5b58\u4e86\u6240\u6709\u5bf9\u8c61\uff0c\u800cConcreteIterator\u7ef4\u62a4\u4e86\u4e00\u4e2aAggregate\u7684\u6307\u9488\uff0c\u901a\u8fc7Next\u548cIsDone\u6765\u904d\u5386ConcreteAggregate\u4e2d\u7684\u5bf9\u8c61</p> <p>11.Interpreter\u6a21\u5f0f</p> <ul> <li>\u89e3\u91ca\u5668\u6a21\u5f0f</li> <li>\u7528\u4e8e\u5b9a\u4e49\u4e00\u4e2a\u8bed\u8a00\u7684\u6587\u6cd5\uff0c\u5e76\u4e14\u5efa\u7acb\u4e00\u4e2a\u89e3\u91ca\u5668\u6765\u89e3\u91ca\u8be5\u8bed\u8a00\u4e2d\u7684\u53e5\u5b50\u3002\u7528\u4e8e\u4e3a\u7528\u6237\u63d0\u4f9b\u4e00\u4e2a\u5b9e\u73b0\u8bed\u6cd5\u89e3\u91ca\u5668\u7684\u6846\u67b6</li> <li></li> </ul>"},{"location":"tech/coding/Linux/","title":"Linux Learning","text":""},{"location":"tech/coding/Linux/#1-command","title":"1 Command","text":"<ul> <li> <p>less/more\uff1a\u901a\u5e38\u914d\u5408\u5176\u4ed6\u663e\u793a\u547d\u4ee4\u4f7f\u7528</p> <pre><code>ps -aux | less -s\n</code></pre> </li> </ul> <ul> <li> <p>split\uff1a\u5206\u5272\u6587\u4ef6\uff0c- \u8868\u793a\u4ece\u6807\u51c6\u8f93\u51fa\u6d41\u4e2d\u8bfb\u53d6\uff0c-b\u8868\u793a\u6309\u591a\u5c11\u5b57\u8282\u5206\u5272\uff0c-6\u8868\u793a\u6309\u7167\u6bcf\u516d\u884c\u8fdb\u884c\u5206\u5272\u3002- \u6709\u65f6\u5019\u8868\u793a\u4f7f\u7528\u6807\u51c6\u8f93\u5165\u6216\u8f93\u51fa</p> <pre><code>tar cvzf - filedir | split -d -b 50m - filename\n</code></pre> </li> </ul> <ul> <li> <p>sort\uff1a \u9ed8\u8ba4\u5c06\u6587\u672c\u6587\u4ef6\u7684\u7b2c\u4e00\u5217\u4ee5ASCII\u7801\u7684\u6b21\u5e8f\u6392\u51fa\uff0c\u9ed8\u8ba4\u662f\u9012\u589e\u987a\u5e8f\uff0c-r\u8868\u793a\u76f8\u53cd\u987a\u5e8f\uff0c-b\u8868\u793a\u5ffd\u7565\u524d\u5bfc\u7a7a\u683c\uff0c-u\u4ee3\u8868\u53bb\u91cd\uff0c-t \":\"\u4ee3\u8868\u6392\u5e8f\u65f6\u5206\u9694\u7b26\uff0c-n\u4ee3\u8868\u6570\u503c\u5927\u5c0f\uff0c-k \u4ee3\u8868\u9009\u62e9\u7b2c\u51e0\u5217\uff0c-h\u4ee3\u8868\u6392\u5e8f\u65f6\u6309\u6570\u503c\u5927\u5c0f\u5e26\u5355\u4f4d\uff0c-o \u4ee3\u8868\u8f93\u51fa\u6587\u4ef6\uff0c-c \u4ee3\u8868\u68c0\u67e5\u662f\u5426\u5df2\u7ecf\u6392\u5e8f\uff0c-C\u53ef\u4ee5\u901a\u8fc7\u67e5\u770b$?\u72b6\u6001\u7801\u6765\u8fdb\u884c\u5224\u65ad</p> <pre><code>sort -b -r -u -k 5  testfile\n</code></pre> </li> </ul> <ul> <li> <p>cut\uff1a</p> <ul> <li>-b m-n\u4ee3\u8868\u622a\u53d6\u7b2cm\u4e2a\u5230\u7b2cn\u4e2a\u5b57\u8282\uff0c\u6ca1\u6709\u5c31\u4ee3\u8868\u5230\u6700\u524d\u6216\u6700\u540e\uff0c\u4e5f\u53ef\u4ee5\u622a\u53d6\u5355\u4e2a\u5b57\u8282-b 1,3,4\uff0c-n\u4ee3\u8868\u4e0d\u8981\u62c6\u5206\u591a\u5b57\u8282\u5b57\u7b26</li> <li>-c 3 \u4ee3\u8868\u622a\u53d6\u4e09\u4e2a\u5b57\u7b26</li> <li>-d \u201c \u201d -f 1- \u4ee3\u8868\u4ee5\u7a7a\u683c\u4e3a\u5206\u9694\u7b26\u9009\u53d6\u6240\u6709\u5b57\u6bb5\uff0c-s \u4ee3\u8868\u53ea\u6253\u5370\u5305\u542b\u5206\u9694\u7b26\u7684\u5b57\u6bb5\uff0c--output-delimiter \"-\"\uff0c--complement \u4ee3\u8868\u6253\u5370\u8865\u96c6</li> </ul> <pre><code>cat /etc/passwd | grep test | cut -d \":\" -f 1\n</code></pre> </li> </ul> <ul> <li> <p>sed\uff1a\u9010\u884c\u8bfb\u53d6\u5e76\u5904\u7406\u6587\u4ef6\uff0c\u5e38\u7528\u811a\u672c\u8868\u8fbe\u5f0f\u5982\u4e0b</p> <ul> <li><code>sed -e '1i\\a new line' xxx.txt</code>\uff0c\u6f14\u793a\u6548\u679c\uff0c\u53ef\u4ee5\u6709\u591a\u4e2a-e\u811a\u672c</li> </ul> <ul> <li><code>sed -i '${lines[0]} i\\a new line' xxx.txt</code>\uff0c\u751f\u6210\u65b0\u6587\u4ef6\u5e76\u8986\u76d6\uff0c-ie\u4f1a\u81ea\u52a8\u751f\u6210\u6e90\u6587\u4ef6\u5907\u4efd</li> <li><code>sed -ne '1p' -e'2p' xxx.txt</code>\uff0c\u4ee3\u8868\u53ea\u6253\u5370\u6539\u53d8\u7684\u5185\u5bb9\uff0c\u5e38\u4e0ep\u4e00\u8d77\u4f7f\u7528</li> <li><code>sed -f test.sh xxx.txt</code>\uff0c\u4ee3\u8868\u811a\u672c\u90fd\u5728test.sh\u4e2d</li> <li>i\u4ee3\u8868\u884c\u524d\u63d2\u5165\uff0ca\u4ee3\u8868\u884c\u540e\u63d2\u5165\uff0cd\u4ee3\u8868\u5220\u9664\uff0cs\u4ee3\u8868\u5c40\u90e8\u66ff\u6362\uff0cc\u4ee3\u8868\u6574\u884c\u8986\u76d6\uff0cp\u53c2\u6570\u4ee3\u8868\u6253\u5370</li> </ul> <pre><code>sed -e 's/new/old/g'\n</code></pre> </li> </ul> <ul> <li> <p>awk\uff1a-v\u4ee3\u8868\u4f20\u9012\u53c2\u6570\u7ed9\u811a\u672c\u8868\u8fbe\u5f0f\uff0cOFS\u662f\u8f93\u51faField\u5206\u9694\u7b26\uff0cRS\u662f\u8bb0\u5f55\u5206\u9694\u7b26\uff0cFS\u662f\u8f93\u5165Field\u5206\u9694\u7b26\uff0cNR\u8868\u793a\u5f53\u524d\u5df2\u7ecf\u5904\u7406\u7684\u8bb0\u5f55\u884c\u6570(\u884c\u53f7)\uff0cFNR\u8868\u793a\u5f53\u524d\u5904\u7406\u6587\u4ef6\u7684\u8bb0\u5f55\u6570(\u5904\u7406\u6bcf\u4e2a\u6587\u4ef6\u65f6\u91cd\u65b0\u4ece1\u5f00\u59cb\u8ba1\u6570)\uff0cNF\u8868\u793a\u8be5\u884c\u7684\u8bb0\u5f55\u6570 </p> <pre><code>awk -\u53c2\u6570 '\u6a21\u5f0f {\u811a\u672c}'\nawk '{print ($NF-1)}' test.log #NF\u4ee3\u8868\u6700\u540e\u4e00\u5217\uff0c\u53ef\u4ee5\u505a\u52a0\u51cf\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5199\u6570\u5b57,0\u4ee3\u8868\u6574\u884c\nawk '{OFS=\"#\";$1=$1;print $0}' test.log #\u4fee\u6539\u8f93\u51fa\u5206\u9694\u7b26\u540e\u9700\u8981\u5237\u65b0\u6570\u636e\nawk -v OFS=\"#\" '{$1=$1;print $0}' test.log | awk -v FS=\"#\" 'print $NF' #-v\u4ee3\u8868\u4f20\u9012\u53d8\u91cf\u8fdb\u811a\u672c\nawk '{printf \"%-3s %2d\\n\", $1, $2}'  test.log\nawk '{if(NR==3) {print $0} else {print \"No\"}}' test.log #if\u5224\u65ad,NR\u4ee3\u8868\u884c\u6570\nawk '/Car|Rat/ {print $0}' test.log #\u6b63\u5219\u8868\u8fbe\u5f0f/T\\/V/\uff0c\u5339\u914dT/V\nawk 'BEGIN{printf \"%2s %2s %2s %2s\\n\", \"\u59d3\u540d\", \"\u8bed\u6587\", \"\u6570\u5b66\", \"\u82f1\u8bed\"} {printf \"%-4s %-4d %-4d %-4d\\n\", $1, $2, $3, $4} END{printf \"%3s:%2d%s\\n\", \"\u4e00\u5171\u6709\",NR,\"\u884c\"}' test.log\nawk -f test.sh test.log#-f\u4ee3\u8868\u8bfb\u53d6\u811a\u672c\u6587\u4ef6\n</code></pre> <ul> <li><code>awk 'BEGIN{OFS=\"#\"} NR==2 {$1=$1; print $0}' test.log</code></li> </ul> <p>\u5185\u7f6e\u51fd\u6570\uff1a</p> <ul> <li> <p>index\uff1a\u67e5\u627e\u7ed9\u5b9a\u7684\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u4f4d\u7f6e\uff0c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de0</p> <pre><code>awk '/xm/ {print index($1, \"m\")}' test.log\n</code></pre> </li> </ul> <ul> <li> <p>length\uff1a\u8fd4\u56de\u6307\u5b9a\u5b57\u4e32\u7684\u957f\u5ea6</p> <pre><code>awk '/xm/ {print length($1)}' test.log\n</code></pre> </li> </ul> </li> </ul> <ul> <li> <p>grep: -i\u4ee3\u8868\u5ffd\u7565\u5927\u5c0f\u5199\uff0c-w\u4ee3\u8868\u7cbe\u786e\u5339\u914d\uff0c-e\u4ee3\u8868\u67e5\u627e\u6761\u4ef6\u53d6\u591a\u4e2a\u5e76\u96c6\uff0c-n\u6253\u5370\u6240\u5904\u884c\u6570\uff0c-v\u4ee3\u8868\u53d6\u8865\u96c6\uff0c-r\u4ee3\u8868\u9012\u5f52\u67e5\u627e\uff0c-l\u4ee3\u8868\u53ea\u6253\u5370\u5305\u542b\u7684\u6587\u4ef6\u540d\uff0c-E\u542f\u7528\u6b63\u5219</p> <pre><code>grep -e hello -e today testfile1.txt\ngrep -E 'hello|today' testfile1.txt\n</code></pre> </li> </ul> <ul> <li>tail/head\uff1atail -n 5\u4ee3\u8868\u5012\u65705\u884c\uff0c-n +5\u4ee3\u8868\u4ece\u6b63\u6570\u7b2c5\u884c\u6253\u5370\u5230\u6700\u540e\u4e00\u884c\uff0c-f\u4ee3\u8868\u6301\u7eed\u8f93\u51fa\u6587\u672c\u65b0\u589e\u5185\u5bb9\uff0c-F \u533a\u522b\u5728\u4e8e\u4f1a\u6301\u7eed\u76d1\u6d4b\u65e5\u5fd7\u6587\u4ef6\u662f\u5426\u5b58\u5728\u3002</li> </ul> <ul> <li> <p>uniq\uff1a\u53bb\u9664\u91cd\u590d\u884c\uff0c\u533a\u5206\u5927\u5c0f\u5199\uff0c-c\u4ee3\u8868\u6253\u5370\u51fa\u73b0\u6b21\u6570\uff0c-d\u4ee3\u8868\u53ea\u6253\u5370\u91cd\u590d\u7684\u884c\uff0c-u\u6253\u5370\u53ea\u51fa\u73b0\u4e86\u4e00\u6b21\u7684\u884c\uff0c-i\u4ee3\u8868\u5ffd\u7565\u5927\u5c0f\u5199\uff0c-f 1\u4ee3\u8868\u8df3\u8fc71\u4e2a\u5b57\u6bb5\uff0c-s 1\u4ee3\u8868\u8df3\u8fc71\u4e2a\u5b57\u7b26\uff0c-w 1\u4ee3\u8868\u6309\u7167\u7b2c\u4e00\u4e2a\u5b57\u7b26\u53bb\u91cd</p> <pre><code>uniq test1.txt test2.txt      \n</code></pre> </li> </ul> <ul> <li> <p>xargs\uff1a\u6807\u51c6\u8f93\u5165\u8f6c\u5316\u4e3a\u53c2\u6570\uff0c\u4f8b\u5982echo,rm,touch\u7b49\uff0c-n\u4ee3\u8868\u4e00\u6b21\u4f20\u9012\u591a\u5c11\u4e2a\u53c2\u6570\uff0c\u9ed8\u8ba4\u662f\u80fd\u4f20\u9012\u591a\u5c11\u4f20\u9012\u591a\u5c11\uff0c\u6309\u7167\u7a7a\u767d\u5b57\u7b26\u62c6\u5206\u53c2\u6570\u3002-d\u4ee3\u8868\u5206\u9694\u7b26\uff0c-p\u4ee3\u8868\u6253\u5370\u6267\u884c\u7684\u547d\u4ee4\u5e76\u95ee\u4f60\u662f\u5426\u786e\u8ba4\u6267\u884c\u547d\u4ee4\uff0c-t\u53ea\u6253\u5370\u6267\u884c\u7684\u547d\u4ee4\uff0c-I {}\u8868\u793a\u5360\u4f4d\u7b26\uff0c-r \u4ee3\u8868\u4f20\u9012\u53c2\u6570\u4e3a\u7a7a\u5c31\u4e0d\u6267\u884c</p> <pre><code>echo -n (\u4e0d\u6253\u5370\u6362\u884c)\"hello world\" | xargs -n 1 echo\necho -n \"hello#world\" | xargs -I {} echo {}\n#\u591a\u884c\u5408\u5e76\uff1acat *.txt | xargs echo\uff0c\\\u60f3\u8981\u6253\u5370\u9700\u8981\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u6216\u52a0\u4e0a\u53cd\u659c\u6760\n</code></pre> </li> </ul> <ul> <li>Regex Expression</li> </ul> \u7b26\u53f7 \u542b\u4e49 ^ ^old\u5339\u914d\u4ee5old\u5355\u8bcd\u5f00\u5934\u7684\u884c $ old$\u5339\u914d\u4ee5old\u5355\u8bcd\u7ed3\u5c3e\u7684\u884c ^$ ^$\u5339\u914d\u7a7a\u884c . \u5339\u914d\u4efb\u610f\u4e00\u4e2a\u4e14\u53ea\u6709\u4e00\u4e2a\u5b57\u7b26\uff0c\u4e0d\u80fd\u5339\u914d\u7a7a\u884c \\ \u7528\u4e8e\u663e\u793a\u7279\u6b8a\u5b57\u7b26\uff0c\u4f8b\u5982\\. * \u5339\u914d0\u6b21\u6216\u8005\u591a\u6b21 .* \u5339\u914d\u6240\u6709\u5185\u5bb9 ^.* \u5339\u914d\u4efb\u610f\u591a\u4e2a\u5b57\u7b26\u5f00\u5934\u7684\u5185\u5bb9 .*$ \u5339\u914d\u4efb\u610f\u591a\u4e2a\u5b57\u7b26\u7ed3\u5c3e\u7684\u5185\u5bb9 [abc] \u5339\u914d[]\u96c6\u5408\u5185\u7684\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 [^abc] \u5339\u914d\u9664\u4e86^\u540e\u9762\u7684\u4efb\u610f\u5b57\u7b26 + \u5339\u914d1\u6b21\u6216\u8005\u591a\u6b21 [:/]+ \u5339\u914d\u62ec\u53f7\u5185\u7684:\u6216\u8005\\\u5b57\u7b26\u4e00\u6b21\u6216\u591a\u6b21 \uff1f \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b260\u6b21\u62161\u6b21 | \u8868\u793a\u540c\u65f6\u8fc7\u6ee4\u591a\u4e2a\u5b57\u7b26\u4e32 () \u4ee3\u8868\u5206\u7ec4\u8fc7\u6ee4 a{n,m} \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u6700\u5c11n\u6b21\u6700\u591am\u6b21\uff0ca{n,}\u548ca{,m}\u5206\u522b\u662f\u6700\u5c11\u548c\u6700\u591a a{n} \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u6b63\u597dn\u6b21"},{"location":"tech/coding/Linux/#2","title":"2 \u57fa\u672c\u77e5\u8bc6","text":"<p>Linux\u4e2d\u7684\u8fdb\u7a0b\u8fd0\u884c\u72b6\u6001</p> <p><code>ps</code>\u547d\u4ee4\u7528\u4e8e\u67e5\u770b\u8fdb\u7a0b\uff0c\u5176\u6709\u4ee5\u4e0b\u5e38\u7528\u53c2\u6570:</p> <ul> <li><code>ps -aux</code>: \u663e\u793a\u6240\u6709\u7528\u6237\u7684\u8fdb\u7a0b\uff0c\u5e76\u5305\u62ec\u6ca1\u6709\u63a7\u5236\u7ec8\u7aef\u7684\u8fdb\u7a0b</li> <li><code>ps -ux $(whoami) --forest</code>\uff1a\u663e\u793a\u7279\u5b9a\u7528\u6237\u7684\u6240\u6709\u8fdb\u7a0b\uff0c\u5e76\u4ee5\u6811\u72b6\u5f62\u5f0f\u5c55\u793a</li> <li><code>ps -e --sort=-%mem</code>\uff1a\u663e\u793a\u4ee5\u5185\u5b58\u4f7f\u7528\u7387\u6392\u5e8f\u7684\u6240\u6709\u8fdb\u7a0b\uff1a</li> <li><code>ps -p 1234</code>\uff1a\u663e\u793a\u7279\u5b9a\u8fdb\u7a0bID\u7684\u8fdb\u7a0b\u4fe1\u606f</li> </ul> <p>\u8fdb\u7a0b\u6709\u5982\u4e0b\u51e0\u79cd\u8fd0\u884c\u72b6\u6001\u6807\u5fd7:</p> <ul> <li><code>R</code>: \u6b63\u5728\u8fd0\u884c\u6216\u8005\u5728\u8fd0\u884c\u961f\u5217\u4e2d\u7684\u8fdb\u7a0b</li> <li><code>S</code>: \u6b63\u5728\u7b49\u5f85\u67d0\u4e2a\u4e8b\u4ef6\uff08\u4f8b\u5982 I/O \u64cd\u4f5c\u5b8c\u6210\uff09\u53d1\u751f\u7684\u8fdb\u7a0b</li> <li><code>D</code>: \u4e0d\u53ef\u4e2d\u65ad\u7761\u7720\u72b6\u6001\u7684\u8fdb\u7a0b\uff0c\u901a\u5e38\u662f\u5728\u7b49\u5f85\u78c1\u76d8 I/O \u7b49\u5173\u952e\u64cd\u4f5c\u5b8c\u6210\u3002</li> <li><code>Z</code>: \u8868\u793a\u8fdb\u7a0b\u5df2\u7ecf\u7ec8\u6b62\uff0c\u4f46\u5176\u7236\u8fdb\u7a0b\u5c1a\u672a\u8c03\u7528 wait() \u7cfb\u5217\u7cfb\u7edf\u8c03\u7528\u6765\u83b7\u53d6\u5176\u7ec8\u6b62\u72b6\u6001\u4fe1\u606f\uff0c\u4e0d\u5360\u7528\u7cfb\u7edf\u8d44\u6e90</li> <li><code>T</code>: \u5df2\u505c\u6b62\u7684\u8fdb\u7a0b</li> <li><code>l</code>\uff1a\u591a\u7ebf\u7a0b\uff08\u4f7f\u7528 CLONE_THREAD \u6807\u5fd7\u7684\uff09</li> <li><code>Ss+</code>: \u8868\u793a\u8be5\u8fdb\u7a0b\u662f\u4f1a\u8bdd\u9886\u5bfc\u8005\uff0c\u5e76\u4e14\u662f\u524d\u53f0\u8fdb\u7a0b\u7ec4\u7684\u4e00\u90e8\u5206</li> <li><code>&lt;</code>: \u9ad8\u4f18\u5148\u7ea7\u8fdb\u7a0b</li> <li><code>N</code>: \u4f4e\u4f18\u5148\u7ea7\u8fdb\u7a0b</li> </ul>"},{"location":"tech/coding/Linux/#3","title":"3 \u547d\u4ee4\u5b9e\u8df5","text":"<ul> <li><code>wget</code>\u540e\u53f0\u8fd0\u884c\u5e76\u5c06\u8f93\u51fa\u5bfc\u5165\u5230\u6587\u4ef6\u5e76\u5b9e\u65f6\u67e5\u770b\uff1a</li> </ul> <pre><code>nohup wget https://github.com/google/googletest/archive/refs/tags/v1.14.0.zip &gt; wget.log 2&gt;&amp;1 &amp;\ntail -f 10 wget.log\n</code></pre>"},{"location":"tech/coding/Linux/#4","title":"4 \u7591\u96be\u6742\u75c7","text":"<ul> <li><code>source/. xxx.sh</code>\u548c<code>sh xxx.sh</code>\u7684\u533a\u522b\uff1a</li> </ul> <p>\u4e24\u8005\u90fd\u662f\u5728Linux\u7cfb\u7edf\u4e2d\u8fd0\u884c\u811a\u672c\u7684\u4e0d\u540c\u65b9\u5f0f\uff0c\u4f46\u662f\u4f7f\u7528\u65f6\u6709\u4e00\u70b9\u6700\u5927\u7684\u533a\u522b\uff1a<code>source/.</code>\u662f\u5728\u5f53\u524d shell \u4f1a\u8bdd\u4e2d\u6267\u884c\u811a\u672c\uff0c\u5f71\u54cd\u5f53\u524d\u73af\u5883\u53d8\u91cf\uff0c\u4f46\u662f<code>bash</code>\u662f\u542f\u52a8\u4e00\u4e2a\u65b0\u7684\u5b50shell\u6267\u884c\u811a\u672c\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5f53\u524d\u73af\u5883</p>"},{"location":"tech/coding/PIM/","title":"PIM Learning","text":""},{"location":"tech/coding/PIM/#structure-of-dpu","title":"Structure of DPU","text":"<p>\u4ece\u56fe\u4e2d\uff0c\u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u4e2aDIMM module\u4e0a\u6709\u591a\u4e2aDRAM chip\uff0c\u5728\u4e00\u4e2aDRAM chip\u4e2d\u6709\u591a\u4e2aBank\uff0c\u7ed9\u6bcf\u4e2aBank\u52a0\u4e0a\u4e00\u4e2aDPU\u5904\u7406\u5355\u5143\uff0c\u5728\u603b\u7ebf\u4e0a\u52a0\u4e0a\u4e00\u4e2acontrol interface\u6765\u5bf9\u8fd9\u4e9bDPU\u8fdb\u884c\u63a7\u5236\u3002\u5728\u4e00\u4e2aDIMM\u4e2d\uff0c\u6240\u6709chip\u5171\u4eab\u540c\u4e00\u6839\u5185\u5b58\u603b\u7ebf\uff0c\u4e00\u4e2achip\u5185\u7684\u6240\u6709bank\u53ef\u4ee5\u540c\u65f6\u8ddfCPU\u8fdb\u884c\u5185\u5b58\u901a\u4fe1\uff0c\u5373\u4e00\u4e2achip\u5185\u7684\u6240\u6709DPU\u53ef\u4ee5\u8ddfCPU\u8fdb\u884c\u5185\u5b58\u901a\u4fe1\u3002</p> <p></p> <p>\u800c\u5728\u4e00\u4e2aDPU\u4e2d\uff0c\u670964MB\u7684MRAM\uff0c64KB\u7684WRAM\u548c4KB\u7684IRAM. </p> <p></p> <p>\u7531\u4e8eDPU\u7684\u786c\u4ef6\u7279\u6027\uff0c\u5728ISA\u4e0a\u6709\u4ee5\u4e0b\u7279\u5f81:</p> <p></p> <ul> <li>No FPU</li> <li>No vectorized instructions</li> <li>Rich set of conditions for jump</li> <li>8x8 multiplication instruction, up to 32 ops for 32x32 </li> </ul>"},{"location":"tech/coding/PIM/#coding-on-upmem","title":"Coding on UPMEM","text":"<p>Standard library functions \u2014 UPMEM DPU SDK 2024.1.0 Documentation</p>"},{"location":"tech/coding/PIM/#coding-tips","title":"Coding Tips","text":"<ul> <li>Runtime Library\u5728\u91cd\u542f\u542f\u52a8\u65f6\u4e0d\u4f1a\u91cd\u7f6e\u7cfb\u7edf\u8d44\u6e90\uff0c\u5305\u62ecMutexes\u3001semaphore\u548cbarrier counter</li> <li>shorts\u548cintegers\u7684\u4e58\u6cd5\u548c\u9664\u6cd5\u4ee3\u4ef7\u5f88\u9ad8</li> <li>\u5c3d\u91cf\u907f\u514d\u4f7f\u7528\u6d6e\u70b9\u548c64\u4f4d\u53d8\u91cf</li> <li>\u5efa\u8bae\u4f7f\u752816\u4e2atasklet\u6765\u51cf\u5c11\u5185\u5b58\u8bbf\u95ee\u7684\u5ef6\u8fdf</li> <li>\u6bcf\u4e2a DPU \u53ea\u80fd\u8bbf\u95ee\u5176\u81ea\u5df1\u7684 MRAM \u4e2d\u7684\u6570\u636e\u3002\u5efa\u8bae\u7ec4\u7ec7\u6570\u636e\u6d41\uff0c\u4f7fDPU\u6267\u884c\u5c3d\u53ef\u80fd\u72ec\u7acb\u4e8e\u5916\u90e8\u6570\u636e\u3002</li> <li>\u4e0e DPU WRAM \u7684\u901a\u4fe1\u6bd4\u4e0e MRAM \u4e4b\u95f4\u7684\u590d\u5236\u6162\u3002\u6b64\u5916\uff0c\u4e0e MRAM \u76f8\u6bd4\uff0cWRAM \u662f\u66f4\u5c0f\u7684\u5b58\u50a8\u5668\u3002\u56e0\u6b64\uff0cDPU WRAM \u5e94\u8be5\u7528\u4e8e\u5171\u4eab\u5c11\u91cf\u6570\u636e\u3002\u5171\u4eab\u5927\u7f13\u51b2\u533a\uff0c\u5e94\u8be5\u4f7f\u7528copies to/from MRAM</li> </ul>"},{"location":"tech/coding/PIM/#_1","title":"\u7ebf\u7a0b\u7ba1\u7406\u548c\u540c\u6b65","text":"<p>\u5728UPMEM\u7684DPU\u4e2d\uff0c\u5c06\u7ebf\u7a0b\u62bd\u8c61\u4e3aTasklet\uff0c\u63d0\u4f9b\u4e86Mutexes, Semaphore, Barrier, Handshake\u7684\u56db\u79cd\u8fdb\u7a0b\u540c\u6b65\u65b9\u6cd5</p> <p>\u8fd0\u884c\u53c2\u6570</p> <ul> <li><code>NR_TASKLETS</code> \u7528\u4e8e\u5b9a\u4e49tasklet\u7684\u6570\u91cf\u3002</li> <li><code>STACK_SIZE_DEFAULT</code> \u7528\u4e8e\u5b9a\u4e49\u6240\u6709\u672a\u6307\u5b9a\u5806\u6808\u7684tasklet\u7684\u5806\u6808\u5927\u5c0f\u3002</li> <li><code>STACK_SIZE_TASKLET_&lt;X&gt;</code> \u7528\u4e8e\u5b9a\u4e49\u7279\u5b9atasklet \u7684\u5806\u6808\u5927\u5c0f\u3002</li> </ul> <pre><code>dpu-upmem-dpurte-clang -DNR_TASKLETS=3 -DSTACK_SIZE_DEFAULT=256 -DSTACK_SIZE_TASKLET_1=2048 -O2 -o tasklet_stack_check tasklet_stack_check.c\n</code></pre> <p>Mutexes</p> <p>\u4e09\u4e2a\u51fd\u6570\uff0c\u521d\u59cb\u5316mutex\uff0c\u83b7\u53d6mutex\uff0c\u89e3\u9501mutex</p> <pre><code>MUTEX_INIT(my_mutex);\nmutex_lock(my_mutex);\nmutex_unlock(my_mutex);\n</code></pre> <p>Semaphore</p> <p>\u4e00\u822c\u4ec5\u7528\u4e8e\u9700\u8981\u8ba1\u6570\u5668\u540c\u6b65\u7684\u60c5\u51b5\uff0c<code>sem_take</code> \u548c <code>sem_give</code> \u5206\u522b\u51cf\u5c11\u548c\u589e\u52a0\u4fe1\u53f7\u91cf\u8ba1\u6570\u5668\u3002\u5982\u679c\u8ba1\u6570\u5668\u4e3a\u96f6\u6216\u5c0f\u4e8e\u96f6\uff0c <code>sem_take</code>\u4f1a\u6302\u8d77\u8c03\u7528\u7684tasklet \u6267\u884c\uff0c\u76f4\u5230\u53e6\u4e00\u4e2atasklet \u8c03\u7528 <code>sem_give</code></p> <pre><code>SEMAPHORE_INIT(my_semaphore, 0);\nsem_give(&amp;my_semaphore);\nsem_take(&amp;my_semaphore)\n</code></pre> <p>Barrier</p> <p>\u53ef\u4ee5\u786e\u4fdd\u7279\u5b9a\u6570\u91cf\u7684tasklet\u5728\u7ee7\u7eed\u8fd0\u884c\u4e4b\u524d\u8fd0\u884c\u5230\u540c\u4e00\u8d77\u70b9\u4e0a\uff0c\u5148\u521d\u59cb\u5316barrier\u7b49\u5f85\u7684tasklet\u6570\u76ee\uff0c\u7136\u540e\u8c03\u7528\u5c31\u53ef\u4ee5wait</p> <pre><code>BARRIER_INIT(my_barrier, NR_TASKLETS_NUMBER);\nbarrier_wait(&amp;my_barrier);\n</code></pre> <p>Handshake</p> <p>Handshake\u6307\u7684\u662f\u53ef\u4ee5\u5b9e\u73b0\u5728\u5176\u4e2d\u4e00\u4e2aTasklet\u5b8c\u6210\u7279\u5b9a\u4efb\u52a1\u540e\u542f\u52a8\u53e6\u4e00\u4e2aTasklet\uff0c\u901a\u8fc7wait_for\u548cnotify\u5b9e\u73b0\uff0c\u5176\u4e2dwait_for\u7684\u53c2\u6570\u662ftasklet\u901a\u8fc7<code>me()</code>\u65b9\u6cd5\u83b7\u53d6\u7684sysname_t</p> <pre><code>handshake_wait_for(sysname_t notifier) \nhandshake_notify(void)\n</code></pre>"},{"location":"tech/coding/PIM/#_2","title":"\u5185\u5b58\u7ba1\u7406","text":"<p>\u5185\u5b58\u6a21\u578b</p> <p>\u5728UPMEM\u7684DPU\u4e2d\uff0c\u6709\u4e24\u79cd\u7528\u9014\u7684Memory\uff0c\u5206\u522b\u662fWRAM\u548cMRAM\uff0c\u5176\u4e2dWRAM\u662f\u7a0b\u5e8f\u6267\u884c\u65f6\u7684\u5185\u5b58\uff0c\u5b58\u653e\u4e86stack, \u5168\u5c40\u53d8\u91cf\u548cheap\u548c\u624b\u52a8\u5206\u914d\u7684shared memory\u7b49\u8d44\u6e90\uff0c\u800cMRAM\u53ef\u4ee5\u88ab\u7406\u89e3\u4e3a\u201cexternal peripheral\u201d\uff0c\u8bbf\u5b58\u901f\u5ea6\u8f83\u6162\u3002</p> <p>WRAM Heap Allocation</p> <p>\u6709\u4e09\u79cdallocator\u53ef\u4ee5\u5728WRAM\u4e0a\u5206\u914d\uff0c\u5206\u522b\u662fincremental allocator, fixed-size block allocator, buddy allocator.</p> <ul> <li>Incremental allocator\uff1a\u4f7f\u7528\u8fd9\u79cdallocator\u65f6\uff0c\u6709\u51e0\u70b9\u9700\u8981\u6ce8\u610f<ul> <li>Runtime Library\u5bf9\u4e8eWRAM\u7684\u7ec4\u7ec7\u65b9\u5f0f\u662f\uff0c\u9664\u4e86program\u8fd0\u884c\u65f6\u6240\u9700\u7684\u5185\u5b58\uff0c\u5269\u4f59\u7684\u6240\u6709\u5185\u5b58\u90fd\u4f5c\u4e3a\"free area\"</li> <li>\u6ca1\u6709free\u65b9\u6cd5\uff0c\u4e00\u4e2atask\u52a8\u6001\u7533\u8bf7\u4e00\u4e2aBuffer\u540e\uff0c\u8fd9\u4e2aBuffer\u4f1a\u4e00\u76f4\u4fdd\u7559\u8be5task\u7684property\u76f4\u5230\u7a0b\u5e8f\u7ed3\u675f</li> <li><code>mem_reset()</code>\u65b9\u6cd5\u7528\u4e8eclean-up heap\uff0c\u4f8b\u5982\u5f53\u4e00\u4e2aDPU\u88ab\u7a0b\u5e8f\u591a\u6b21\u542f\u52a8\u65f6</li> </ul> </li> </ul> <pre><code>mem_alloc(size_t size)\nmem_reset()\n</code></pre> <ul> <li>Fixed-Size block Allocator: \u7528\u4e8e\u7528\u6237\u5206\u914d\u56fa\u5b9a\u5757\u5927\u5c0f\u7684\u5185\u5b58<ul> <li>\u9700\u8981\u4f7f\u7528<code>fsb_allocator_t</code>\uff0c\u901a\u8fc7<code>fsb_alloc()</code>\u6765\u5206\u914d\u7a7a\u95f4\uff0c\u5e76\u901a\u8fc7<code>fsb_get()</code>\u6765\u83b7\u53d6\u4e00\u4e2aallocated block</li> </ul> </li> </ul> <pre><code>fsb_alloc(unsigned int block_size, unsigned int nb_of_blocks)\nfsb_get(fsb_allocator_t allocator)\nfsb_free(fsb_allocator_t allocator, void* ptr)    \n</code></pre> <ul> <li>Buddy Allocator: \u5373OS\u4e2d\u63d0\u5230\u7684buddy allocation method<ul> <li>\u5206\u914d\u7684\u5185\u5b58\u5927\u5c0f\u4e0d\u80fd\u8d85\u8fc74096B\uff0c\u6700\u5c0f\u662f32B\uff0c\u81ea\u52a8\u548cDMA-transfer-size\u5bf9\u9f50</li> </ul> </li> </ul> <pre><code>buddy_init(unsigned int buffer_size)\nbuddy_alloc(unsigned int buffer_size))\nbuddy_free(char * memory)\n</code></pre> <p>MRAM Management</p> <p>\u4e09\u79cd\u53d8\u91cf\u58f0\u660e\uff0c<code>__mram, __mram_noinit, __mram_ptr</code>\uff0c\u524d\u8005\u5c06\u53d8\u91cf\u58f0\u660e\u5230MRAM\u4e0a\uff0c\u4e2d\u95f4\u4ee3\u8868\u8be5\u53d8\u91cf\u6ca1\u6709\u521d\u59cb\u503c\uff0c\u540e\u8005\u4ee3\u8868\u4e00\u4e2a\u6307\u9488\u6307\u5411MRAM\u4e0a\u7684\u53d8\u91cf\u6216\u8005\u58f0\u660e\u4e00\u4e2aextern\u7684MRAM variable.</p> <p>\u5728\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5bf9\u4e8e\u4e00\u4e2a\u5728MRAM\u4e2d\u76848B\u53d8\u91cf\uff0c\u4f1a\u7531WRAM\u4e2d\u7684pre-defined cache\u6765\u5904\u7406\u3002Implicit write access of MRAM variables\u4f1a\u7ecf\u5386\u5982\u4e0b\u4e09\u4e2a\u8fc7\u7a0b\uff1a\u4eceWRAM cache\u4e2d\u8bfb8B\uff0c\u4fee\u6539\u5176\u4e2d\u7684x bytes\uff0c\u518d\u628a8B\u5199\u56de\u5230cache\u4e2d\uff0c\u5e76\u4e148B\u4ee5\u4e0b\u7684\u4fee\u6539\u662f\u975e\u591a\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</p> <p>Direct access to the MRAM</p> <p>\u4e3b\u8981\u7531\u4e24\u4e2a\u51fd\u6570\u6765\u64cd\u4f5c\uff1a</p> <ul> <li>\u9700\u8981\u4fdd\u8bc1source\u548ctarget\u7684address\u90fd\u662f8 bytes\u5bf9\u9f50\u7684\uff0c\u5e76\u4e14transfer size\u5fc5\u987b\u662f8\u7684\u500d\u6570\uff0c\u5e76\u4e14\u4e0d\u80fd\u8d85\u8fc72048</li> </ul> <pre><code>mram_write(const void *from, __mram_ptr void *to, unsigned int nb_of_bytes)\nmram_read(const __mram_ptr void *from, void *to, unsigned int nb_of_bytes)\n</code></pre>"},{"location":"tech/coding/PIM/#exception","title":"Exception","text":"<p>\u4e00\u4e2aDPU Program\u53ef\u80fd\u56e0\u4e3a\u4e09\u79cdfault\u505c\u6b62\uff0c\u53ea\u80fd\u901a\u8fc7<code>dpu-lldb</code> \u6765\u6253\u5370stop reason\uff0chost API\u53ea\u80fd\u770b\u5230\u53d1\u751f\u4e86\u9519\u8bef</p> <ul> <li>Memory fault</li> </ul> <ul> <li>DMA fault</li> </ul> <ul> <li>Runtime Library fault</li> </ul>"},{"location":"tech/coding/PIM/#controlling-the-execuation-of-dpus","title":"Controlling the execuation of DPUs","text":"<p>Allocation</p> <p><code>dpu_alloc</code>: \u5206\u914d\u6307\u5b9a\u6570\u91cf\u7684GPU</p> <p><code>dpu_free</code>: \u91ca\u653e\u4e00\u7ec4\u7531<code>dpu_alloc</code>\u5206\u914d\u7684DPU</p> <p><code>dpu_get_nr_ranks</code>: \u8fd4\u56de\u4e00\u4e2aDPU set\u4e2d\u7684rank\u6570\u91cf</p> <p><code>dpu_get_nr_dpus</code>: \u8fd4\u56de\u4e00\u4e2aDPU set\u4e2d\u7684DPU\u6570\u91cf</p> <p>Loading Programs</p> <p><code>dpu_load</code>\uff1a\u8be5\u51fd\u6570\u8f93\u5165\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u8def\u5f84\uff0c\u52a0\u8f7d\u4e8c\u8fdb\u5236\u6587\u4ef6\u5230\u6307\u5b9a\u7684DPU\u4e0a\uff0c\u5e76\u5b58\u50a8\u7a0b\u5e8f\u4fe1\u606f\u5230\u7ed9\u5b9a\u7684\u6307\u9488\u4e0a\u3002\u52a0\u8f7d\u540e\uff0c\u8be5\u7a0b\u5e8f\u6301\u4e45\u4fdd\u5b58\u5728DPU\u5185\u5b58\u4e2d\uff0c\u53ef\u4ee5\u7531\u5e94\u7528\u7a0b\u5e8f\u591a\u6b21\u542f\u52a8</p> <p><code>dpu_load_from_memory</code>\uff1a\u8be5\u51fd\u6570\u52a0\u8f7d\u4e00\u4e2a\u5728\u5185\u5b58\u4e2d\u7684\u7a0b\u5e8f</p> <p>Executing Programs</p> <p><code>dpu_launch</code>\uff1a\u8be5\u51fd\u6570\u542f\u52a8\u7ed9\u5b9a\u96c6\u5408\u7684\u6240\u6709DPU\uff0c\u67d0\u4e9b\u8d44\u6e90\u4f1a\u5728\u542f\u52a8\u524d\u91cd\u7f6e</p> <ul> <li><code>DPU_SYNCHRONOUS</code>\uff1a\u6682\u505c\u5e94\u7528\u7a0b\u5e8f\uff0c\u76f4\u5230\u8bf7\u6c42\u7684 DPU \u5b8c\u6210\u6267\u884c\uff08\u6216\u9047\u5230\u9519\u8bef\uff09</li> <li><code>DPU_ASYNCHRONOUS</code> \u7acb\u5373\u5c06DPU\u7684\u63a7\u5236\u6743\u4ea4\u8fd8\u7ed9\u5e94\u7528\u7a0b\u5e8f\uff0c\u5e94\u7528\u7a0b\u5e8f\u5c06\u8d1f\u8d23\u901a\u8fc7 <code>dpu_status</code> \u6216 <code>dpu_sync</code> \u68c0\u67e5DPU\u7684\u72b6\u6001</li> </ul>"},{"location":"tech/coding/PIM/#communication-with-host-applications","title":"Communication with host applications","text":"<p>Memory Interface</p> <p>\u4f7f\u7528\u8fd9\u4e9b\u5185\u5b58\u4f20\u8f93\u51fd\u6570\u5b58\u5728\u4e00\u4e9b\u9650\u5236\uff1a</p> <ul> <li>IRAM\u548cMRAM\u5730\u5740\u8981\u6c428B\u5bf9\u9f50\uff0cWRAM\u5730\u5740\u8981\u6c424B\u5bf9\u9f50</li> <li>symbol name\u662fDPU code\u4e2d\u7684WRAM\u6216\u8005MRAM\u53d8\u91cf\u540d\u7ec4\u6210</li> <li>\u4e0e DPU WRAM \u7684\u901a\u4fe1\u6bd4\u4e0e MRAM \u4e4b\u95f4\u7684\u590d\u5236\u64cd\u4f5c\u66f4\u6162\u3002\u6b64\u5916\uff0c\u4e0e MRAM \u76f8\u6bd4\uff0cWRAM \u662f\u66f4\u5c0f\u7684\u5b58\u50a8\u5668\u3002\u56e0\u6b64\uff0cDPU WRAM \u5e94\u8be5\u7528\u4e8e\u5171\u4eab\u5c11\u91cf\u6570\u636e\uff0c\u5927\u6570\u636e\u5e94\u653e\u5230MRAM\u4e2d</li> <li>\u6bcf\u4e2aDPU\u53ea\u80fd\u8bbf\u95ee\u81ea\u5df1\u7684MRAM\u4e2d\u7684\u6570\u636e\uff0c\u6240\u4ee5DPU\u6267\u884c\u5e94\u5c3d\u53ef\u80fd\u72ec\u7acb\u4e8e\u5916\u90e8\u6570\u636e</li> </ul> <p><code>dpu_copy_from(struct dpu_set_t set, const char *symbol_name, uint32_t symbol_offset, void *dst, size_t length)</code>: \u4eceDPU\u4e0acopy\u5230buffer\u4e2d</p> <p><code>dpu_broadcast_to(struct dpu_set_t set, const char *symbol_name, uint32_t symbol_offset, const void *src, size_t length, dpu_xfer_flags_t flags)</code>\uff1a\u5c06\u4e00\u4e2abuffer\u5e7f\u64ad\u5230\u6240\u6709DPU\u4e2d</p> <p><code>dpu_push_xfer(struct dpu_set_t set, const char *symbol_name, uint32_t symbol_offset, const void *src, size_t length, dpu_xfer_flags_t flags)</code>\uff1a\u5728\u4e00\u6b21\u4f20\u8f93\u4e2d\u5c06\u4e0d\u540c\u7684buffer\u4f20\u8f93\u5230\u4e00\u7ec4DPU\u4e2d</p> <p>Rank Transfer Interface</p> <p><code>dpu_prepare_xfer</code>\uff1a\u5c06buffer\u5c5e\u6027\u8d4b\u7ed9\u4e00\u7ec4DPU\uff0c\u53ef\u4ee5\u5728<code>dpu_push_xfer</code>\u65b9\u6cd5\u4e2d\u4f7f\u7528</p> <p><code>dpu_push_xfer</code>\uff1a\u4f7f\u7528\u4e4b\u524d\u5b9a\u4e49\u7684\u7f13\u51b2\u533a\uff0c\u6309\u7167\u7ed9\u5b9a\u65b9\u5411\uff0cDPU symbol name\uff0cDPU symbol length\u8fdb\u884c\u4f20\u8f93</p>"},{"location":"tech/coding/PIM/#advanced-features-of-host-api","title":"Advanced Features of Host API","text":"<p>Multiple Ranks Transfer</p> <p>\u5728\u4e00\u4e2a\u5177\u6709\u591a\u4e2aDPU rank\u7684DPU set\u4e2d\uff0c\u4f7f\u7528copy function\u9ed8\u8ba4\u4f1a\u4f7f\u7528\u591a\u7ebf\u7a0b\u6765\u8fdb\u884ccopy\u64cd\u4f5c\u8fd9\u4e9bMulti-ranks operation\uff0c\u53ef\u4ee5\u4ee5\u4e0b\u65b9\u5f0f\u7981\u7528\uff1a</p> <pre><code>dpu_alloc(DPU_ALLOCATE_ALL, \"nrThreadsPerRank=0\", &amp;dpu_set);\n</code></pre> <p>Asynchronism</p> <p><code>dpu_broadcast_to</code>\u548c<code>dpu_push_xfer</code>\u53ef\u4ee5\u901a\u8fc7\u5c06<code>dpu_xfer_flags_t</code>\u8bbe\u7f6e\u6210<code>DPU_XFER_ASYNC</code>(\u9ed8\u8ba4\u662f<code>DPU_XFER_DEFAULT</code>)\u6765\u5c06\u8fd9\u4e9b\u64cd\u4f5c\u53d8\u4e3a\u5f02\u6b65\u64cd\u4f5c\uff0crank\u53ef\u4ee5\u72ec\u7acb\u7684\u5b8c\u6210transfer\u64cd\u4f5c\u3002\u5728\u540c\u6b65\u6a21\u5f0f\u4e0b\uff0cAPI\u4f1a\u7b49\u5f85set\u4e2d\u7684\u6240\u6709rank\u5b8c\u6210\u4e00\u4e2a\u64cd\u4f5c\u540e\u624d\u4f1a\u6267\u884c\u53e6\u4e00\u4e2a\uff0c\u5f02\u6b65\u6a21\u5f0f\u4f1a\u72ec\u7acb\u7684\u7ba1\u7406\u6bcf\u4e2arank\u3002</p> <p><code>dpu_sync</code>\uff1a\u4f7f\u7528\u8be5\u51fd\u6570\u53ef\u4ee5\u7b49\u5f85DPU set\u4e2d\u7684\u6240\u6709rank\u7684\u5f02\u6b65\u64cd\u4f5c\u6267\u884c\u5b8c\u6210</p> <p>Callback <pre><code>dpu_error_t dpu_callback(struct dpu_set_t set, dpu_error_t (*fct)(struct dpu_set_t set, uint32_t rank_id, void *arg), void *arg, dpu_callback_flags_t flags);\n</code></pre></p> <p><code>dpu_callback</code>\uff1a\u8be5\u56de\u8c03\u51fd\u6570\u5141\u8bb8\u7528\u6237\u5728\u4e00\u4e9b\u5f02\u6b65\u64cd\u4f5c\u4e4b\u95f4\u8fdb\u884c\u51fd\u6570\u8c03\u7528\uff0c\u6839\u636e\u4e0d\u540c\u7684flags\u4f1a\u4ea7\u751f\u4e0d\u540c\u7684\u884c\u4e3a + DPU_CALLBACK_DEFAULT: \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c<code>dpu_callback</code>\u51fd\u6570\u4f1a\u5728DPU set\u4e2d\u7684\u6bcf\u4e2arank\u4e0a\u6267\u884c\u4e00\u6b21\uff0c\u5e76\u7b49\u5f85\u6240\u6709rank\u6267\u884c\u5b8c\u6bd5 + DPU_CALLBACK_ASYNC\uff1a\u6bcf\u4e2arank\u7684<code>dpu_callback</code>\u8c03\u7528\u72ec\u7acb\u8fdb\u884c\uff0c\u4e0d\u4f1a\u7b49\u5f85\uff0c\u9700\u8981\u8c03\u7528<code>dpu_async</code>\u8fdb\u884c\u540c\u6b65 + DPU_CALLBACK_ASYNC | DPU_CALLBACK_NONBLOCKING\uff1a\u5bf9\u4e8eNONBLOCKING\u6765\u8bf4\uff0c\u8be5\u56de\u8c03\u72ec\u7acb\u4e8e\u4e4b\u540e\u53d1\u8d77\u7684\u4efb\u4f55<code>dpu_callback</code>,<code>dpu_sync</code>\u4e0d\u4f1a\u7b49\u5f85\u8be5\u56de\u8c03\u7ed3\u675f\uff0c\u9700\u8981\u7531\u7528\u6237\u6765\u786e\u4fdd\u5b8c\u6210\u3002\u540c\u65f6\uff0chostAPI\u9700\u8981\u66f4\u591a\u7684\u7ebf\u7a0b\u8d44\u6e90\u6765\u5904\u7406\u540c\u65f6\u8fd0\u884c\u7684\u591a\u4e2acallbacks\uff0c\u6240\u4ee5\u9700\u8981\u4fee\u6539<code>dpu_alloc</code>\u4e2d\u7684<code>nrThreadsPerRank</code>  + DPU_CALLBACK_ASYNC | DPU_CALLBACK_SINGLE_CALL: \u4e0e\u5e38\u89c4\u7684\u5f02\u6b65\u884c\u4e3a\u76f8\u540c\uff0c\u4f46\u662f\u4ed6\u53ea\u4f1a\u5bf9\u76f8\u540c\u7684DPU Set\u4e0a\u6267\u884c\u4e00\u6b21\u56de\u8c03\u51fd\u6570 + DPU_CALLBACK_ASYNC | DPU_CALLBACK_SINGLE_CALL | DPU_CALLBACK_NONBLOCKING:  </p>"},{"location":"tech/coding/PIM/#logging","title":"Logging","text":"<p>Logging from dpu-lldb</p> <p>\u5728DPU\u7a0b\u5e8f\u4e2d\u76f4\u63a5<code>printf</code>\u5373\u53ef</p> <p>Logging from Host</p> <p><code>dpu_log_read(struct dpu_set_t set, FILE *stream)</code>: \u4f7f\u7528\u8be5\u51fd\u6570\uff0c\u53ef\u4ee5\u5c06DPU\u7a0b\u5e8f\u4e2d\u7684log\u6253\u5370\u5230\u6587\u4ef6\u4e2d(stdout)\uff0c\u4f46\u662f\u53ea\u6709\u5728<code>DPU_FOREACH</code>\u4e2d\u624d\u80fd\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\u3002\u6f5c\u5728\u98ce\u9669\u5728\u4e8e\uff0cLog\u4fdd\u5b58\u5728DPU\u7684MRAM\u7684circular buffer\u4e2d\uff0c\u5728\u4e3b\u673a\u7aef\u8c03\u7528\u65f6\u5f53\u7a0b\u5e8f\u7684\u5b8c\u6574LOG\u5927\u4e8e\u7f13\u51b2\u533a\u5927\u5c0f\u65f6\uff0c\u4f1a\u53d1\u751f\u9519\u8bef</p> <p>\u53ef\u4ee5\u4f7f\u7528<code>STDOUT_BUFFER_INIT(size)</code>\u6765\u8bbe\u5b9a\u7f13\u51b2\u533a\u5927\u5c0f</p>"},{"location":"tech/coding/PIM/#measuring-performances","title":"Measuring performances","text":"<p>RUNTIME Environment\u63d0\u4f9b\u4e86\u4e00\u5957\u51fd\u6570\uff0c\u53ef\u4ee5\u68c0\u6d4b\u786c\u4ef6\u6027\u80fd\u8ba1\u6570\u5668\u3002\u53ef\u4ee5\u901a\u8fc7<code>CLOCKS_PER_SEC</code>\u5c06DPU\u5468\u671f\u8ba1\u6570\u8f6c\u6362\u6210\u65f6\u95f4(\u79d2)\u3002\u8be5\u53d8\u91cf\u5728DPU\u7aef\u53ef\u7528\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u62f7\u8d1d\u5728\u4e3b\u673a\u7aef\u4f7f\u7528\u3002\u7b2c\u4e8c\u4e2a + perfcounter_config   + COUNT_CYCLES: \u5468\u671f\u5305\u62ec\u6307\u4ee4\u7684\u6267\u884c\u65f6\u95f4\u548c\u5185\u5b58\u4f20\u8f93   + COUNT_INSTRUCTIONS\uff1a\u8ba1\u7b97\u5df2\u7528\u7684\u6307\u4ee4   + COUNT_SAME   + \u7b2c\u4e8c\u4e2a\u53d8\u91cf\u8bbe\u7f6e\u4e3atrue\uff0c\u4ee3\u8868\u91cd\u7f6e\u8ba1\u6570\u5668\uff0c\u5426\u5219\u4ee3\u8868\u4fdd\u7559\u5f53\u524d\u8ba1\u6570\u5668\u503c + perfcounter_get: \u8fd4\u56de\u8ba1\u6570\u5668\u503c</p> <p>\u4e00\u4e2a\u4f7f\u7528\u4f8b\u5b50\uff1ahost\u6d4b\u91cf\u4e86DPU\u7a0b\u5e8f\u4e2d\u5faa\u73af\u7684\u6267\u884c\u65f6\u95f4 <pre><code>#include &lt;perfcounter.h&gt;\n#include &lt;stdio.h&gt;\n\n__host uint32_t nb_cycles;\n\nint main() {\n\n  perfcounter_config(COUNT_CYCLES, true);\n\n  int loop = 1e7;\n  while (loop)\n    loop--;\n\n  nb_cycles = perfcounter_get();\n\n  return 0;\n</code></pre></p> <pre><code>****#include &lt;dpu.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\n\n#ifndef DPU_BINARY\n#define DPU_BINARY \"./frequency_example\"\n#endif\n\nstatic inline double my_clock(void) {\n  struct timespec t;\n  clock_gettime(CLOCK_MONOTONIC_RAW, &amp;t);\n  return (1.0e-9 * t.tv_nsec + t.tv_sec);\n}\n\nint main() {\n  struct dpu_set_t set, dpu;\n\n  DPU_ASSERT(dpu_alloc(1, NULL, &amp;set));\n  printf(\"DPU allocated\\n\");\n  DPU_ASSERT(dpu_load(set, DPU_BINARY, NULL));\n\n  double start = my_clock();\n  DPU_ASSERT(dpu_launch(set, DPU_SYNCHRONOUS));\n  double end = my_clock();\n\n  // retrieve number of cycles on DPU\n  uint32_t nb_cycles;\n  DPU_FOREACH(set, dpu) {\n    DPU_ASSERT(\n        dpu_copy_from(dpu, \"nb_cycles\", 0, &amp;nb_cycles, sizeof(uint32_t)));\n  }\n\n  // retrieve DPU frequency\n  uint32_t clocks_per_sec;\n  DPU_FOREACH(set, dpu) {\n    DPU_ASSERT(dpu_copy_from(dpu, \"CLOCKS_PER_SEC\", 0, &amp;clocks_per_sec,\n                             sizeof(uint32_t)));\n  }\n\n  printf(\"DPU cycles: %u\\n\", nb_cycles);\n  printf(\"DPU time: %.2e secs.\\n\", (double)nb_cycles / clocks_per_sec);\n\n  printf(\"Host elapsed time: %.2e secs.\\n\", end - start);\n\n  DPU_ASSERT(dpu_free(set));\n  return 0;\n}\n</code></pre>"},{"location":"tech/coding/PIM/#debuging-on-upmem","title":"Debuging on UPMEM","text":""},{"location":"tech/coding/PIM/#supported-commands-in-dpu-lldb","title":"Supported Commands in dpu-lldb","text":"<ul> <li><code>process launch</code>: Start a DPU program</li> <li><code>process continue</code>: Resume a DPU program</li> <li><code>process interrupt</code>: Stop a DPU program</li> <li><code>thread list</code>: List all the threads of a DPU and where each thread is at</li> <li><code>thread select</code>: Select a thread as the currently active thread</li> <li><code>thread step-in</code>: Source level single step in current thread</li> <li><code>thread step-over</code>: Source level single step in current thread, stepping over calls</li> <li><code>thread step-inst</code>: Single step one instruction in current thread</li> <li><code>thread step-inst-over</code>: Single step one instruction in current thread, stepping over calls</li> <li><code>thread step-out</code>: Finish executing the function of the currently selected frame and return to its call site</li> <li><code>thread until</code>: Run the current or specified thread until it reaches a given line number or address or leaves the current function</li> <li><code>thread backtrace</code>: Show the stack of the current thread</li> <li><code>frame select</code>: Select a frame by index from within the current thread and make it the current frame</li> <li><code>frame info</code>: List information about the currently selected frame in the current thread</li> <li><code>frame select --relative=&lt;n&gt; or up &lt;n&gt;</code>: Go up \u201cn\u201d frames in the stack (1 frame by default)</li> <li><code>frame select --relative=-&lt;n&gt; or down &lt;n&gt;</code>: Go down \u201cn\u201d frames in the stack (1 frame by default)</li> <li><code>frame variable</code>: Show frame variables</li> <li><code>target variable</code>: Read global variables for the DPU program</li> <li><code>breakpoint set|list|delete</code>: Manage breakpoint in the DPU program</li> <li><code>register read</code>: Dump the contents of one or more register values from the current frame</li> <li><code>register write</code>: Modify a single register value</li> <li><code>memory read</code>: Read from the memory of the DPU program</li> <li><code>memory write</code>: Write to the memory of the DPU program</li> <li><code>disassemble</code>: Disassemble specified instructions of the DPU program</li> </ul> <p>\u4e00\u4e9bdpu-lldb\u5e38\u89c1\u64cd\u4f5c\uff1a</p> <pre><code>dpu-lldb\nprocess launch --stop-at-entry\nprocess continue\nframe variable/x checksum\ntarget variable/x checksum\nbreakpoint set --source-pattern-regexp \"return\"\nparray/x 20 &amp;input[0]\nmemory read\nmemory write -i sample.bin '&amp;buffer[0]'\n</code></pre> <p>\u5185\u5b58\u6620\u5c04\uff1aDPU\u7684\u6240\u6709\u5185\u5b58\u90fd\u4f1a\u6620\u5c04\u5230<code>dpu-lldb</code>\u4e2d\u7684\u4e00\u4e2a\u5730\u5740\u7a7a\u95f4, IRAM\u9700\u8981\u901a\u8fc7<code>disassemble</code>\u6765\u8bfb\u53d6 + WRAM: <code>0x00000000 - 0x00010000</code> + MRAM: <code>0x08000000 - 0x0c000000</code> + IRAM: <code>0x80000000 - 0x80008000</code></p>"},{"location":"tech/coding/SwiftTransformer/","title":"SwiftTransformer","text":""},{"location":"tech/coding/SwiftTransformer/#_1","title":"\u8ba1\u5212\u6a21\u5757","text":"<p>\u6682\u5b9a\u4e3a(SeeleTransformer)\uff0c\u5177\u4f53\u8981\u5b9e\u73b0\u7684\u6a21\u5757\u5305\u62ec\u56db\u90e8\u5206\uff0cCuda Base Operator, Layer implementation, Model implementation,  Utils(Pytorch interface, weight convert bash)</p>"},{"location":"tech/coding/SwiftTransformer/#model-implementation","title":"Model Implementation","text":"<p>\u6682\u5b9a\u9996\u5148\u5b9e\u73b0GPT\u6a21\u578b\uff0c\u63a8\u7406\u6d41\u7a0b\u5206\u4e3a\u5982\u4e0b\u51e0\u4e2a\u8fc7\u7a0b\uff1a\u521d\u59cb\u5316\u901a\u4fe1\u5e93\uff0c\u52a0\u8f7d\u6743\u91cd\uff0c\u63a8\u7406\uff0c\u89e3\u7801\u7ed3\u679c</p> <ul> <li>\u6a21\u578b\u8d85\u53c2\u6570\uff1a<ul> <li>GPTHyperParam: <ul> <li>vocab_size</li> <li>max_position_embeddings</li> <li>hidden_size</li> <li>num_layers</li> <li>num_q_heads</li> <li>num_kv_heads</li> <li>head_dim</li> <li>ffn_inter_dim</li> <li>is_rotary_posi_embedding\uff08for rope alternative\uff09</li> <li>is_rmsnorm(for rmsnorm)</li> <li>is_attn_qkv_biased</li> <li>is_attn_out_biased</li> <li>ffn_activation_type</li> </ul> </li> <li>GptParallelismParam<ul> <li>tensor_para_size</li> <li>tensor_para_rank</li> <li>pipeline_para_size</li> <li>pipeline_para_rank<ul> <li>layer_begin, layer_end, local_layer_num</li> </ul> </li> </ul> </li> <li>GptPagedAttnParam<ul> <li>block_size</li> <li>max_num_block_per_req</li> </ul> </li> </ul> </li> <li>\u6a21\u578b\u7c7b\u5b9a\u4e49:<ul> <li>weight_params</li> <li>communicator_params</li> <li>GPU buffers for requests:<ul> <li>inputs: decoder_input/output, d_input_lens, d_sum_prev_input_lens?</li> <li>input embedding: d_token_ids, d_position_ids</li> <li>input indexing: ith_context_req_req_index, ith_context_req_token_index, ith_decoding_req_req_index, ith_decoding_req_token_index</li> <li>layer internal computation: qkv_buf, attn_out_buf, ffn_inter_buf_1, ffn_inter_buf_2, context_stage_kernel_m_buf, context_stage_kernel_l_buf</li> <li>forwardDecoder: attention_out</li> <li>output projection: output_projection_last_tokens_buf, output_projection_tokens_buf, output_projection_result_buf</li> </ul> </li> </ul> </li> </ul> <ul> <li>\u901a\u4fe1\u5e93\u521d\u59cb\u5316\uff1a\u6682\u5b9a\u5b9e\u73b0tp\u548cpp\uff0c\u9700\u8981\u521d\u59cb\u5316MPI\uff0cNCCL\uff0c\u5176\u4e2dMPI\u5212\u5206\u4e3a\u6bcf\u4e2app\u548ctp\u901a\u4fe1\u7ec4(\u6682\u65f6\u4e0d\u7528PP)\uff0cNCCL\u5206\u4e3aTP\u548cPP \u901a\u4fe1\u5668(\u6682\u65f6\u4e0d\u7528PP)</li> <li>\u52a0\u8f7d\u6743\u91cd\uff1a<ul> <li>\u6743\u91cd\u8f6c\u6362\u811a\u672c\uff1a\u4ecetorch.load()\u8f6c\u6362\u4e3aSwiftTransformer\u7684\u683c\u5f0f<ul> <li>\u8f6c\u6362\u903b\u8f91\uff1a<ul> <li>\u9996\u5148\u4eceinput\u4e2d\u8bfb\u53d6\u6587\u4ef6\uff0c\u5982\u679c\u6743\u91cd\u672a\u88ab\u5206\u7247\uff0c\u76f4\u63a5\u8fd4\u56de\u6a21\u578b\u6743\u91cd(state_dict)\uff0c\u5426\u5219\u8fdb\u884c\u5904\u7406\uff0ctensorMergeFunc\u662f\u4e00\u4e2a\u5728\u4e0d\u540c\u7ef4\u5ea6\u4e0a\u5bf9\u4e0d\u540c\u6743\u91cd\u8fdb\u884c\u62fc\u63a5\u7684\u51fd\u6570\uff0c\u4e0d\u540c\u7c7b\u578b\u7684\u6743\u91cd\u9700\u8981\u5728\u4e0d\u540c\u7684\u7ef4\u5ea6\u4e0a\u8fdb\u884ccat\u6765\u62fc\u63a5\u6210\u4e00\u4e2astate_dict\u3002\u5177\u4f53\u8fc7\u7a0b\u662f\uff0c\u9996\u5148\u662fresharedWeight\u51fd\u6570\uff0c\u9996\u5148\u5c06\u6240\u6709\u76f8\u540ckey(weight)\u7684tensor\u653e\u5230\u4e00\u8d77\u5f97\u5230<code>sharded_tensors: dict[str, List[torch.Tensor]]</code>\uff0c\u7136\u540e\u8c03\u7528<code>tensor_merge_func</code>\u5c06\u8fd9\u4e2a\u6bcf\u4e2alist\u8fdb\u884c\u62fc\u63a5\uff0c\u5f97\u5230<code>dict[str, torch.Tensor]</code>\uff0c\u5c31\u662f\u8f6c\u6362\u6743\u91cd\u524d\u6240\u7528\u7684<code>state_dict</code>\u3002</li> <li>\u7136\u540e\u8fdb\u884c\u5177\u4f53\u7684\u8f6c\u6362\u903b\u8f91\uff0c\u5bf9\u4e8ellama\u6765\u8bf4\uff0c\u5c31\u662f\u4ecestate_dict\u4e2d\u901a\u8fc7\u6b63\u5219\u5f97\u5230\u6a21\u578b\u5c42\u6570\uff0c\u7136\u540e\u5bf9state_dict\u4e2dwqkv\u62fc\u63a5\u5230\u4e00\u8d77\uff0c\u5e76\u5c06wo\u8fdb\u884c\u8f6c\u7f6e\uff0c\u6700\u540e\u5c06tensor_dict\u5206\u5272\u5e76\u4fdd\u5b58\u3002\u5728\u8fdb\u884c\u5206\u5272\u548c\u4fdd\u5b58\u65f6\uff0c\u4ee5llama2\u4e3a\u4f8b\uff0c\u5b9a\u4e49\u4e00\u4e2a\u547d\u540d\u6c60\uff0c\u5bf9\u4e8e\u4e0d\u540c\u7c7b\u578b\u7684\u6743\u91cd\uff0c\u5c06\u5176\u5728\u4e0d\u540c\u7ef4\u5ea6\u4e0a\u62c6\u62108\u4efd\u5b58\u5230\u6587\u4ef6\u4e2d\uff0c\u800c\u5bf9\u4e8eshared_tensor\uff0c\u5219\u76f4\u63a5\u5b58\u5230\u6587\u4ef6\u4e2d</li> </ul> </li> </ul> </li> <li>\u5177\u4f53\u52a0\u8f7d\u6743\u91cd\uff1a<ul> <li>Embedding:<ul> <li>embed_token_weight</li> <li>embed_positioins_weight</li> </ul> </li> <li>Transformer<ul> <li>attn_qkv_weight/bias</li> <li>attn_out_weight/bias</li> <li>attn_layernorm_weight</li> <li>attn_layernorm_bias(rmsnorm\u4e0d\u8981)</li> <li>ffn1_weight/bias</li> <li>ffn2_weight/bias</li> <li>ffn3_weight?(gated_ffn\u9700\u8981)</li> <li>final_layernorm_weight/bias(GeluFFN\u524d\u7684layernorm)</li> </ul> </li> <li>Final:<ul> <li>final_layernorm_weight/bias</li> <li>final_logitgemm_weight</li> </ul> </li> </ul> </li> <li>\u52a0\u8f7d\u903b\u8f91\uff1a\u9996\u5148\u6839\u636e\u662f\u5426\u6709embedding_layer\u52a0\u8f7dembedding weights\uff0c\u7136\u540e\u6839\u636e\u5f53\u524dlayer\u8303\u56f4\u52a0\u8f7dlayer\u6743\u91cd\uff0c\u6700\u540e\u6839\u636e\u662f\u5426\u662fpp\u6700\u540e\u4e00\u9636\u6bb5\u52a0\u8f7dfinal_layernorm\u6743\u91cd</li> <li>\u5176\u4e2doutput_weight\uff0cffn1_weight, ffn2_weight, ffn3_weight\u9700\u8981\u8fdb\u884ctp</li> <li>\u521d\u59cb\u5316\u6743\u91cd</li> </ul> </li> <li>\u63a8\u7406\u8fc7\u7a0b\uff1a<ul> <li>\u5206\u914dk/v cache\u5185\u5b58\uff1a\u91c7\u7528PagedAttention\uff0c\u4e00\u5f00\u59cb\u5c31\u5148\u5728GPU\u4e0a\u5206\u914d\u6240\u6709\u7684Block, \u8bb0\u5f55\u4e86\u6bcf\u4e2aRequest=\u5206\u914d\u7684block\u6570\u91cf\uff0c\u7136\u540e\u521d\u59cb\u5316block_table, \u8fd9\u4e2ablock_table\u5b58\u50a8\u4e86\u6bcf\u4e2arequest\u6240\u5206\u914d\u7684\u5757\u7684\u7d22\u5f15(\u4ece0-max_num_block_per_req) </li> <li>\u4e3adecoding stage\u7684\u6570\u7ec4\u5206\u914d\u5185\u5b58\uff0c\u4fdd\u5b58\u4e86output of the last token</li> <li>Context Stage\uff0c \u6267\u884cgpt.forward</li> <li>Decoding Stage: \u5728Decoding stage\u4e2d\uff0cinput\u53ea\u7528\u5305\u62ec\u6240\u6709unfinished request\u7684last token\uff0c\u5224\u65ad\u6bcf\u4e2arequest(input tokens + output tokens)\u662f\u5426\u9700\u8981\u5206\u914d\u65b0\u7684Block\uff0c\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u8bb0\u5f55\u6bcf\u4e2aRequest\u7684\u4e0b\u4e00\u8f6e\u7684input tokens\u3002\u4f46\u662f\u7531\u4e8erequest\u53ef\u80fd\u5728\u672c\u8f6e\u4e2d\u7ed3\u675f\uff0c\u6240\u4ee5kvcache\u7684\u4f4d\u7f6e\u9700\u8981\u79fb\u52a8<ul> <li>\u4e00\u6b21forward\u7684\u5b9e\u73b0\uff1a\u9996\u5148\u521d\u59cb\u5316\u4e09\u4e2ahost/device\u6570\u7ec4\uff0ch_input_lens, h_is_context_stage, h_sum_prev_input_lens\u548cnum_tokens\u3002\u7136\u540e\u56e0\u4e3aPP\uff0c\u6240\u4ee5\u5bf9\u7b2c\u4e00\u4e2aStage\u8fdb\u884c\u7279\u6b8a\u5904\u7406\uff0c\u8fdb\u884cEmbedingandPositionEncode, \u540c\u7406\u6700\u540e\u4e00\u4e2aStage\u9700\u8981\u7279\u6b8a\u5904\u7406\uff0c\u9700\u8981\u8c03\u7528layernorm\u3002\u4e2d\u95f4\u8c03\u7528forwardDecoder\uff0c\u9996\u5148\u4ece\u4e0a\u4e00\u4e2a\u9636\u6bb5\u6536\u53d6\u6570\u636e\uff0c\u5e76\u5c06\u6570\u636e\u5e7f\u64ad\u7ed9tp\u5185\u6240\u6709\u7684\u8bbe\u5907\u3002</li> <li>forwardDecoder\u7684\u5b9e\u73b0\uff1a\u5206\u914d\u5185\u5b58\u540e\uff0c\u8c03\u7528\u4e4b\u524d\u5199\u7684attention\u548clayernorm, addbias</li> </ul> </li> </ul> </li> <li>\u89e3\u7801\u7ed3\u679c\uff1a<ul> <li>VocabDecoder</li> </ul> </li> </ul>"},{"location":"tech/coding/SwiftTransformer/#layer-implementation","title":"Layer implementation","text":"<ul> <li>attention.cc</li> <li>ffn.cc</li> <li>gated_ffn.cc</li> </ul>"},{"location":"tech/coding/SwiftTransformer/#operator","title":"Operator","text":"<ul> <li>addbias.cu</li> <li>count_nan.cu</li> <li>embedding.cu</li> <li>findmax.cu</li> <li>fused_activ_multiply.cu</li> <li>fused_addbias_activ.cu</li> <li>fused_context_stage_attention.cu</li> <li>fused_decoding_stage_attention.cu</li> <li>fused_decoding_stage_attention_mha.cu</li> <li>gather_last_tokens.cu</li> <li>kvcache_mgmt.cu</li> <li>layernorm.cu</li> <li>reduction.cu</li> <li>rmsnorm.cu</li> <li>rotary_posi_embedding.cu</li> <li>unfused_attention.cu</li> <li>xformers_attention.cu</li> </ul>"},{"location":"tech/coding/SwiftTransformer/#utils","title":"Utils","text":"<ul> <li>Cublas Wrapper</li> </ul>"},{"location":"tech/coding/SwiftTransformer/#_2","title":"\u6846\u67b6\u4ee3\u7801\u5206\u6790","text":""},{"location":"tech/coding/SwiftTransformer/#_3","title":"\u63a8\u7406\u6d41\u7a0b","text":"<p>Prompts -&gt; Tokenizer -&gt; Embeding+positional encoding -&gt; LLM(TransformerxN) -&gt; Samplings -&gt; New Token -&gt; Embedding+positional encoding</p> <p>GPT\u6a21\u578b\u7ed3\u6784\uff1a</p> <p></p> <p>\u4e24\u9636\u6bb5\u7684Attention\u7ed3\u6784 + Tensor Parallelism</p> <p></p>"},{"location":"tech/coding/SwiftTransformer/#_4","title":"\u9879\u76ee\u4f9d\u8d56","text":"<p>\u8be5\u9879\u76ee\u6dfb\u52a0\u4e86Conda, Cudatookit, MPI, NCCL, Python, LibTorch, GoogleTest, nlohmann_json, argPrase, Pybinding, tpqd\u5e93\uff0c\u4f7f\u7528xformers\u7684cuda kernel\u4f5c\u52a0\u901f</p>"},{"location":"tech/coding/SwiftTransformer/#_5","title":"\u6a21\u5757\u5212\u5206","text":"<p>\u6a21\u5757\u4e3b\u8981\u5206\u4e3akernel, layer\u3001model\u548cutils\u56db\u4e2a\u6587\u4ef6\u5939</p> <ul> <li> <p>Kernel: \u5f15\u7528\u4e86xformers\u5e93\uff0c\u57fa\u4e8e\u8be5\u5e93\u5b9e\u73b0\u4e86\u4ee5\u4e0b\u6587\u4ef6</p> <ul> <li>activation_types.cuh: \u6fc0\u6d3b\u51fd\u6570\u5728GPU\u4e0a\u7684\u5177\u4f53\u5b9e\u73b0\uff0cinline+constexpr, \u5305\u62ec\u4e86RELU, SILU\u548cGELU</li> <li>addbias.cu: \u4e24\u4e2a\u6570\u7ec4point-wise\u7684\u76f8\u52a0, and batched version</li> <li>count_nan.cu: \u8ba1\u7b97\u4e00\u4e2a\u6570\u7ec4\u5185\u7684\u975e\u96f6\u5143\u7d20\u4e2a\u6570</li> <li>embedding.cu: batched embedding and positional encoding</li> <li>findmax.cu: \u5728\u4e00\u4e2a\u6570\u7ec4\u4e2d\u5bfb\u627e\u6700\u5927\u5143\u7d20\uff0c\u8fd4\u56de\u4e0b\u6807\uff0c\u5e76\u4e14\u5b9e\u73b0\u4e86batched\u7248\u672c</li> <li>fused_activ_multiply.cu: \u5b9e\u73b0\u4e86<code>output[i] = activation(input1[i]) * input2[i]</code></li> <li>fused_addbias_activ.cu: \u5b9e\u73b0\u4e86batched\u7684<code>output[i] = activation(input[i] + bias[i])</code></li> <li>fused_context_stage_attention.cu: \u5b9e\u73b0\u4e86context stage\u7684attention\u64cd\u4f5c\uff0c\u5373\u8003\u8651\u8f93\u5165<code>Q,K,V</code>\uff0c\u8f93\u51fa<code>softmax(QK^T\u00b7scale+mask)*V</code>\uff0c\u4f18\u5316\u5305\u62ecflash-attention, tensorcore, group query attention\uff0c\u8ba1\u7b97\u4e86input\u4e2d\u6bcf\u4e2atoken\u7684attention score</li> <li>fused_decoding_stage_attention.cu: \u5b9e\u73b0\u4e86decoding stage\u7684attention\u64cd\u4f5c\uff0c\u5177\u4f53\u6765\u8bf4\uff0c i.e. the decoding stage. It takes input tokens, k cache and v cache, calculate softmax(qK^T)V (Here q is a vector of length num_heads*head_dim), and store the result in <code>result</code>\u3002\u548ccontext\u9636\u6bb5\u4e0d\u540c\u7684\u662f\uff0cdecoding\u9636\u6bb5\u6bcf\u4e2atoken/prompts\u53ea\u7528\u8003\u8651\u6700\u8fd1\u7684\u4e00\u4e2atoken</li> <li>fused_decoding_stage_attention_mha.cu: \u5b9e\u73b0\u4e86decoding stage\u7684attention_mha\u64cd\u4f5c\uff0c\u9488\u5bf9MHA\u505a\u4e86\u4f18\u5316</li> <li>gather_last_token.cu: \u83b7\u53d6\u6bcf\u4e2arequest\u7684\u6700\u540e\u4e00\u4e2atoken\u52a0\u5165\u5230arary\u4e2d, \u7531\u4e8e\u6bcf\u4e2arequest\u53ef\u80fd\u5904\u4e8e\u4e0d\u540c\u7684\u9636\u6bb5\uff0c\u56e0\u6b64\u9700\u8981\u83b7\u53d6\u4e0d\u540c\u9636\u6bb5\u7684\u6700\u540e\u4e00\u4e2atoken</li> <li>kvcache_mgmt.cu: \u5b9e\u73b0\u4e86\u5c06\u521a\u521a\u8ba1\u7b97\u51fa\u7684q/k/vs\u5b58\u5165Kvcache\u7684\u64cd\u4f5c</li> <li>layernom.cu: \u5b9e\u73b0\u4e86layernorm\u7684\u64cd\u4f5c</li> <li>reduction.cuh: \u5b9e\u73b0\u4e86warpReduceSum, blockReduceSum, warpReduceMax, blockReduceMax </li> <li>rmsnorm.cu: \u5b9e\u73b0\u4e86rmsnorm\u7684\u64cd\u4f5c\uff0crmsnorm\u662flayernorm\u7684\u5e73\u66ff...</li> <li>rotary_posi_embedding.cu: \u5b9e\u73b0\u4e86rotary positional embedding\u7684token\u64cd\u4f5c</li> <li>unfused_attention.cu: \u4eceQKV buffer\u4e2d\u8bfb\u51faq,k,v\u5e76\u5b58\u5165q_buf, k_buf, and v_buf, \u4ee5\u53ca\u5c06contextDecode\u4ea7\u751f\u7684output attention matrix\u878d\u5165\u5230\u4e00\u4e2a\u77e9\u9635\u4e2d</li> <li>xformers_attention.cu: xformers\u5b9e\u73b0\u7684attention\u64cd\u4f5c</li> </ul> </li> </ul> <ul> <li>Layer:<ul> <li>attention.cc: attention layer\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u5305\u62ec\u4e86Selective batching, Paged Attention, FlashAttention\u548cTensor Parallelism <p>attention\u64cd\u4f5c\u7684\u5177\u4f53\u8fc7\u7a0b\u662f\u9996\u5148\u8ba1\u7b97QKV Gemm\u5f97\u5230QKV matrix, \u7b2c\u4e8c\u6b65\u662f\u7ed9qkv\u52a0\u4e0aBias\u5e76\u8fdb\u884cembedding\uff0c\u7b2c\u4e09\u6b65\u662f\u8fdb\u884cfusedattention\u8ba1\u7b97(softmax(QK^T)V)\uff0c\u5177\u4f53\u662f\u9996\u5148\u4fdd\u5b58ContextStage\u7684Kvcache, \u7136\u540e\u8fdb\u884cattention\u8ba1\u7b97\uff0c\u5982\u679c\u662fDecodingStage\u5c31\u76f4\u63a5\u8fdb\u884cAttention\u8ba1\u7b97\u3002\u6700\u540e\u4e00\u6b65\u662fOutput GEMM</p> </li> <li>ffn.cc: FFN\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u5305\u62ec\u4e86Tensor Parallelism\u7684\u4f18\u5316\u3002\u5177\u4f53\u5305\u62ec\u4e86\u4e24\u4e2a\u7ebf\u6027\u5c42\uff0c\u6700\u540e\u7528nccl\u89c4\u7ea6</li> <li>gated_ffn.cc\uff1a\u5b9e\u73b0\u4e86gatedFFN(llama2)</li> </ul> </li> </ul> <ul> <li>Model: (\u4ec5\u8003\u8651llama2)<ul> <li>llama2op.cc: llama2OP\u7684\u5b9e\u73b0\uff0c</li> <li>llama2op.h: llama2OP\u7684\u5b9a\u4e49</li> <li>gpt_base.h: GPT\u7684\u62bd\u8c61\u7c7b\uff0c\u6ce8\u610fPytorch binding\u9700\u8981\u4e00\u4e2anon-template class, \u5bf9\u4e8e\u4e00\u4e2aGPT\u62bd\u8c61\u7c7b\u6765\u8bf4\uff0c\u9700\u8981\u5b9e\u73b0GptHyperParam, GptPagedAttnParam, GptParallelismParam\u4e09\u4e2a\u53c2\u6570\u7c7b\uff0cloadWeight\u64cd\u4f5c\uff0cinitDummyWeight\u64cd\u4f5c, forward\u64cd\u4f5c\uff0ccommunicator\u521d\u59cb\u5316</li> <li>gpt_hyper_param.h: \u6a21\u578b\u672c\u8eab\u7684\u8d85\u53c2\u6570\u548c\u4e00\u4e9b\u914d\u7f6e\uff0c\u5305\u62ecvocab_size(positional embedding\u4e4b\u524d\u7684embedding\u77e9\u9635\u7ef4\u5ea6)\uff0cmax_positional_embeddings, hidden_size, num_layers, num_q_heads, num_kv_heads, head_dim,ffn_inter_dim. \u914d\u7f6e\uff1ais_pre_layernorm, is_rotary_posi_embedding, is_gated_ffn, is_rmsnorm, is_attn_qkv_biased, is_attn_out_biased</li> <li>gpt_pagedattn_param.h: pageattention\u7684\u53c2\u6570\uff0cblock_size, max_num_block_per_req</li> <li>gpt_parallelism_param.h: Parallelism\u7684\u53c2\u6570\uff0ctensor_para_size, tensor_para_rank, pipeline_para_size, pipeline_para_rank, layer_begin, layer_end(\u5f53\u524dpipeline stage\u7684layer range)</li> <li>gptop_base.cc: \u5bf9\u4e8e\u64cd\u4f5c\u7684\u5305\u88c5\u7c7b</li> <li>gpt_weight.cc: \u5b9e\u73b0\u4e86\u5355\u4e2aGPT Layer\u7684Weight\u7684\u64cd\u4f5c\uff0c\u5305\u62ecinit, loadWeight, initDummyWeight, weight\u5305\u62ecattn_qkv_kernel/bias attn_out_kernel/bias,  attn_layernorm_weight/bias,ffn_fc1_weight/bias,  ffn_fc2_weight/bias,ffn_fc3_weight, final_layernorm_weiht/bias,(\u5206\u4e3a\u56db\u90e8\u5206\uff0cpre_layernorm_weights, attention_weights, attention_layernorm_weight, ffn_weight)</li> <li>gpt.cc: \u6a21\u578b\u7684\u5177\u4f53\u5b9e\u73b0\uff0c\u5177\u4f53\u5305\u62ec<code>inputBatchEmbedAndPosiEncode</code>\uff0c<code>selectOutputTokenBatched</code>\uff0c<code>forwardDecoder</code>,<code>forward(decoderxN+layernorm)</code></li> </ul> </li> </ul> <ul> <li>Utils:<ul> <li>cublas_wrapper.cc: \u5bf9cublas GEMM\u7684\u5c01\u88c5\uff0c\u5305\u62ec<code>gemmStridedBatched</code>, <code>gemmBatched</code>\u548c<code>gemm</code>, <code>getCublasComputeType</code></li> <li>cuda_utils.h\uff1a\u5b9a\u4e49\u4e86\u5e38\u7528\u7684cuda\u5b8f</li> <li>debug_utils.h\uff1a\u63d0\u4f9b\u4e86assert\u51fd\u6570\uff0c\u53ef\u4ee5\u53c2\u8003</li> <li>torch_utils.h\uff1a\u5b9a\u4e49\u4e86torch tensor\u76f8\u5173\u7684\u4e00\u4e9b\u64cd\u4f5c</li> <li>nccl_utils.cc\uff1a\u5b9a\u4e49\u4e86nccl\u7684\u76f8\u5173\u64cd\u4f5c\uff0c\u6ca1\u5199\u8fc7</li> <li>py_block_migrations.cc\uff1acudaIPCMemHandle_t\u548cpython</li> <li>py_nccl.cc\uff1atorch function</li> <li>py_swapping.cc\uff1aPerform swapping between GPU blocks and CPU blocks</li> <li>st_datatypes.h\uff1a\u5b9a\u4e49\u4e86\u4e00\u4e9b\u539f\u578b</li> </ul> </li> </ul> <ul> <li>pybinding.cc: \u5b9a\u4e49\u81ea\u5b9a\u4e49\u7684PyTorch\uff0c\u6ca1\u5199\u8fc7</li> </ul>"},{"location":"tech/coding/modernC%2B%2B/","title":"modernC++","text":""},{"location":"tech/coding/modernC%2B%2B/#modernc","title":"ModernC++ \u5b66\u4e60\u7b14\u8bb0","text":"<p>\u53c2\u8003\u6765\u81eahttps://changkun.de/modern-cpp/zh-cn</p>"},{"location":"tech/coding/modernC%2B%2B/#_1","title":"\u4e00\u3001\u8bed\u8a00\u53ef\u7528\u6027","text":""},{"location":"tech/coding/modernC%2B%2B/#_2","title":"\u5e38\u91cf","text":"<p>nullptr\u66ff\u6362NULL\uff0cconstexpr\u8ba9\u7528\u6237\u663e\u5f0f\u7684\u58f0\u660e\u51fd\u6570\u6216\u5bf9\u8c61\u6784\u9020\u51fd\u6570\u5728\u7f16\u8bd1\u671f\u4f1a\u6210\u4e3a\u5e38\u91cf\u8868\u8fbe\u5f0f</p> <pre><code>static constexpr int lowbit(int x){\n    return x &amp; (-x);\n}\n</code></pre> <p>if/switch\uff1a\u6761\u4ef6\u4e2d\u53ef\u4ee5\u6709\u4e34\u65f6\u53d8\u91cf</p> <pre><code>if (const std::vector&lt;int&gt;::iterator itr = std::find(vec.begin(), vec.end(), 3);\n    itr != vec.end()) {\n    *itr = 4;\n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_3","title":"\u53d8\u91cf\u53ca\u521d\u59cb\u5316","text":"<p>\u521d\u59cb\u5316\u5217\u8868\uff1a<code>std::initializer_list</code>\uff0c\u7528\u4e8e\u5927\u62ec\u53f7\u521d\u59cb\u5316\u5bf9\u8c61\u548c\u666e\u901a\u51fd\u6570\u7684\u5f62\u53c2</p> <pre><code>//\u5f62\u53c2\nvoid foo(std::initializer_list&lt;int&gt; list) {\n    for (std::initializer_list&lt;int&gt;::iterator it = list.begin();\n         it != list.end(); ++it) vec.push_back(*it);\n}\n//\u521d\u59cb\u5316\u5bf9\u8c61 after C++11\nclass MagicFoo {\npublic:\n    std::vector&lt;int&gt; vec;\n    MagicFoo(std::initializer_list&lt;int&gt; list) {\n        for (std::initializer_list&lt;int&gt;::iterator it = list.begin();\n             it != list.end(); ++it)\n            vec.push_back(*it);\n    }\n};\nMagicFoo magicFoo = {1, 2, 3, 4, 5};\n</code></pre> <p>\u7ed3\u6784\u5316\u7ed1\u5b9a\uff1a\u53ef\u4ee5\u8ba9\u51fd\u6570\u6709\u591a\u4e2a\u8fd4\u56de\u503c</p> <pre><code>std::tuple&lt;int, double, std::string&gt; f() {\n    return std::make_tuple(1, 2.3, \"456\");\n}\n\nint main() {\n    auto [x, y, z] = f();\n    std::cout &lt;&lt; x &lt;&lt; \", \" &lt;&lt; y &lt;&lt; \", \" &lt;&lt; z &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_4","title":"\u7c7b\u578b\u63a8\u5bfc","text":"<ul> <li>auto\uff0cdecltype\uff0cstd::is_same <p>auto\u4e0d\u80fd\u7528\u4e8e\u51fd\u6570\u5f62\u53c2\u8fdb\u884c\u7c7b\u578b\u63a8\u5bfc\uff0c\u4f46\u662f\u53ef\u4ee5\u7528\u4e8e\u63a8\u5bfc\u51fd\u6570\u8fd4\u56de\u503c</p> <p>decltype(auto) \u7528\u4e8e\u5bf9\u8f6c\u53d1\u51fd\u6570\u6216\u5c01\u88c5\u7684\u8fd4\u56de\u7c7b\u578b\u8fdb\u884c\u63a8\u5bfc\uff0c\u89c1\u4e0b\u793a\u4f8b</p> <pre><code>//\u5e38\u89c1\u7528\u6cd5\nauto x = 1;\nauto y = 2\u30020;\ndecltype(x+y) z;\nif (std::is_same&lt;decltype(z), int&gt;::value)\n    std::cout &lt;&lt; \"type z == int\" &lt;&lt; std::endl;\n//auto\u63a8\u5bfc\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u5c3e\u8fd4\u56de\u7c7b\u578b\u63a8\u5bfc\ntemplate&lt;typename T, typename U&gt;\nauto add2(T x, U y) -&gt; decltype(x+y){\n    return x + y;\n}\n//after C++14\ntemplate&lt;typename T, typename U&gt;\nauto add2(T x, U y){\n    return x + y;\n}\n//decltype(auto)\u7528\u6cd5\uff0c\u63a8\u5bfc\u5c01\u88c5\u51fd\u6570\u8fd4\u56de\u503c\ndecltype(auto) look_up_a_string_1() {\n    return lookup1();\n}\n//\u8be5\u51fd\u6570\u7b49\u540c\u4e8e\nstd::string look_up_a_string_1() {\n    return lookup1();\n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_5","title":"\u63a7\u5236\u6d41","text":"<p>C++17\u4e4b\u540e\uff0cconstexpr\u53ef\u4ee5\u5728if\u8bed\u53e5\u4e2d\uff0c\u5141\u8bb8\u5728\u4ee3\u7801\u4e2d\u58f0\u660e\u5e38\u91cf\u8868\u8fbe\u5f0f\u7684\u5224\u65ad\u6761\u4ef6\uff0c\u5982\u4e0b\u4f7f\u7528\u5219\u4ee3\u7801\u5b9e\u9645\u6267\u884c\u65f6\u8868\u73b0\u4e3a\u72ec\u7acb\u7684\u4e24\u4e2aprint_type_info\u51fd\u6570</p> <pre><code>#include &lt;iostream&gt;\n\ntemplate&lt;typename T&gt;\nauto print_type_info(const T&amp; t) {\n    if constexpr (std::is_integral&lt;T&gt;::value) {\n        return t + 1;\n    } else {\n        return t + 0.001;\n    }\n}\nint main() {\n    std::cout &lt;&lt; print_type_info(5) &lt;&lt; std::endl;\n    std::cout &lt;&lt; print_type_info(3.14) &lt;&lt; std::endl;\n}\n</code></pre> <p>\u533a\u95f4for\u8fed\u4ee3\uff1a\u6ce8\u610f\u5e26\u5f15\u7528\u548c\u4e0d\u5e26\u5f15\u7528\u7684\u533a\u522b</p> <pre><code>for (auto element : vec)\n        std::cout &lt;&lt; element &lt;&lt; std::endl; // read only\nfor (auto &amp;element : vec)\n    element += 1;                        // writeable\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_6","title":"\u6a21\u677f","text":"<p>\u4f5c\u4e3aC++\u7684\u4e00\u5927\u7279\u8272\uff0c\u8fd9\u91cc\u9700\u8981\u7740\u91cd\u8bb0\u5f55\u4e00\u4e0b</p> <ul> <li>\u5916\u90e8\u6a21\u677f\uff1a\u4f20\u7edf C++ \u4e2d\uff0c\u6a21\u677f\u53ea\u6709\u5728\u4f7f\u7528\u65f6\u624d\u4f1a\u88ab\u7f16\u8bd1\u5668\u5b9e\u4f8b\u5316\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u53ea\u8981\u5728\u6bcf\u4e2a\u7f16\u8bd1\u5355\u5143\uff08\u6587\u4ef6\uff09\u4e2d\u7f16\u8bd1\u7684\u4ee3\u7801\u4e2d\u9047\u5230\u4e86\u88ab\u5b8c\u6574\u5b9a\u4e49\u7684\u6a21\u677f\uff0c\u90fd\u4f1a\u5b9e\u4f8b\u5316\u3002\u901a\u8fc7\u5916\u90e8\u6a21\u677f\u53ef\u4ee5\u544a\u8bc9\u7f16\u8bd1\u5668\u4f55\u65f6\u8fdb\u884c\u5b9e\u4f8b\u5316</li> </ul> <pre><code>template class std::vector&lt;bool&gt;;          // \u5f3a\u884c\u5b9e\u4f8b\u5316\nextern template class std::vector&lt;double&gt;; // \u4e0d\u5728\u8be5\u5f53\u524d\u7f16\u8bd1\u6587\u4ef6\u4e2d\u5b9e\u4f8b\u5316\u6a21\n</code></pre> <ul> <li>using\u7684\u4f7f\u7528\uff1a\u4f8b\u5982\u5bf9\u51fd\u6570\u6307\u9488\uff0c\u5173\u4e8e\u8fd9\u4e2a\u51fd\u6570\u6307\u9488\uff0c\u4ee3\u8868\u7684\u662f\u5b83\u53ef\u4ee5\u6307\u5411\u4efb\u610f\u4e00\u4e2a\u6ee1\u8db3\u8fd4\u56de\u503c\u662fint\uff0c\u80fd\u591f\u63a5\u6536\u4e00\u4e2avoid *(\u5373\u4efb\u4f55\u6307\u9488\u7c7b\u578b)\u53c2\u6570\u7684\u51fd\u6570</li> </ul> <pre><code>typedef int (*process)(void *)\nusing process = int(*)(void *) // \u8868\u793a\u4e00\u4e2a\u51fd\u6570\u6307\u9488\u7684\u522b\u540d\n\nusing foo = void(int); // \u8868\u793a\u4e00\u4e2a\u51fd\u6570\u7c7b\u578b\u7684\u522b\u540d\uff0c\u4e24\u8005\u4f7f\u7528\u5e76\u65e0\u592a\u5927\u533a\u522b\n</code></pre> <ul> <li>\u53d8\u957f\u53c2\u6570\u6a21\u677f\uff1a\u5141\u8bb8\u4efb\u610f\u4e2a\u6570\uff0c\u4efb\u610f\u7c7b\u522b\u7684\u6a21\u677f\u53c2\u6570\uff0c\u5373\u4ee3\u88680-N\u4e2a</li> </ul> <pre><code>template&lt;typename R, typename... Ts&gt; class Magic;\n\nclass Magic&lt;int\n            std::vector&lt;int&gt;, \n            std::map&lt;std::string,std::vector&lt;int&gt;&gt;\n            &gt; darkMagic\n</code></pre> <p>\u540c\u6837\u7684\u51fd\u6570\u53c2\u6570\u4e5f\u4f7f\u7528\u540c\u6837\u7684\u8868\u793a\u4ee3\u8868\u4e0d\u5b9a\u957f\u53c2\u6570</p> <pre><code>//\u5b9a\u4e49\ntemplace&lt;typename... Args&gt; void printf(const std::string &amp;str, Args... )\n//\u5982\u4f55\u5904\u7406\u6a21\u677f\u53c2\u6570\n//\u65b9\u6cd5\u4e00\uff1a\u795e\u5947\u7684\u9012\u5f52\uff0c\u904d\u5386\u6a21\u677f\u53c2\u6570\n#include &lt;iostream&gt;\ntemplate&lt;typename T0&gt;\nvoid printf1(T0 value) {\n    std::cout &lt;&lt; value &lt;&lt; std::endl;\n}\ntemplate&lt;typename T, typename... Ts&gt;\nvoid printf1(T value, Ts... args) {\n    std::cout &lt;&lt; value &lt;&lt; std::endl;\n    printf1(args...);\n}\nint main() {\n    printf1(1, 2, \"123\", 1.1);\n    return 0;\n}\n//\u65b9\u6cd5\u4e8c\uff1a\u53d8\u53c2\u6a21\u677f\u5c55\u5f00\uff0cafter C++17\ntemplace&lt;typename T0, typename... T&gt;\nvoid printf2(T0, t0, T... t){\n    std::cout&lt;&lt;t0&lt;&lt;std::endl;\n    if constexpr (sizeof...(t) &gt; 0) printf2(t...)\n}\n</code></pre> <p>\u6298\u53e0\u8868\u8fbe\u5f0f\uff1a\u6709\u70b9\u62bd\u8c61\uff0c\u8868\u8fbe\u5f0f\u4e5f\u53ef\u4ee5</p> <pre><code>#include &lt;iostream&gt;\ntemplate&lt;typename... T&gt;\nauto sum(T... t) {\n    return (t + ...);\n}\nint main() {\n    std::cout &lt;&lt; sum(1, 2, 3, 4, 5, 6, 7, 8, 9, 10) &lt;&lt; std::endl;\n}\n</code></pre> <ul> <li>\u975e\u7c7b\u578b\u6a21\u677f\u53c2\u6570\uff1a\u5373\u5b57\u9762\u91cf\u6a21\u677f\u53c2\u6570\uff0c\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u8ba9\u5b57\u9762\u91cf10\u4f5c\u4e3a\u6a21\u677f\u53c2\u6570\u8fdb\u884c\u4f20\u9012\u3002\u751a\u81f3\u5728C++17\u4e4b\u540e\uff0c\u80fd\u591f\u4f7f\u7528auto</li> </ul> <pre><code>//\u5b9a\u4e49\u793a\u4f8b\ntemplate &lt;typename T, int BufSize&gt;\nclass buffer_t {\npublic:\n    T&amp; alloc();\n    void free(T&amp; item);\nprivate:\n    T data[BufSize];\n}\n\nbuffer_t&lt;int, 100&gt; buf;\n\n//auto\u5e2e\u52a9\u6211\u4eec\u8fdb\u884c\u5177\u4f53\u7c7b\u578b\u7684\u63a8\u5bfc\ntemplate &lt;auto value&gt; void foo() {\n    std::cout &lt;&lt; value &lt;&lt; std::endl;\n    return;\n}\n\nint main() {\n    foo&lt;10&gt;();  // value \u88ab\u63a8\u5bfc\u4e3a int \u7c7b\u578b\n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_7","title":"\u9762\u5411\u5bf9\u8c61","text":"<ul> <li>\u59d4\u6258\u6784\u9020\uff1a\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u8c03\u7528\u53e6\u4e00\u4e2a\u6784\u9020\u51fd\u6570</li> </ul> <pre><code>#include &lt;iostream&gt;\nclass Base {\npublic:\n    int value1;\n    int value2;\n    Base() {\n        value1 = 1;\n    }\n    Base(int value) : Base() { // \u59d4\u6258 Base() \u6784\u9020\u51fd\u6570\n        value2 = value;\n    }\n};\n\nint main() {\n    Base b(2);\n    std::cout &lt;&lt; b.value1 &lt;&lt; std::endl;\n    std::cout &lt;&lt; b.value2 &lt;&lt; std::endl;\n}\n</code></pre> <ul> <li>\u7ee7\u627f\u6784\u9020\uff1a\u5b50\u7c7b\u901a\u8fc7using\u4f7f\u5f97\u6784\u9020\u51fd\u6570\u4f20\u9012\u65f6\u4e0d\u9700\u8981\u4f20\u9012\u53c2\u6570</li> </ul> <pre><code>#include &lt;iostream&gt;\nclass Base {\npublic:\n    int value1;\n    int value2;\n    Base() {\n        value1 = 1;\n    }\n    Base(int value) : Base() { // \u59d4\u6258 Base() \u6784\u9020\u51fd\u6570\n        value2 = value;\n    }\n};\nclass Subclass : public Base {\npublic:\n    using Base::Base; // \u7ee7\u627f\u6784\u9020\n    Subclass(int value): Base(value){} //\u539f\u59cb\u5f62\u5f0f\n};\nint main() {\n    Subclass s(3);\n    std::cout &lt;&lt; s.value1 &lt;&lt; std::endl;\n    std::cout &lt;&lt; s.value2 &lt;&lt; std::endl;\n}\n</code></pre> <ul> <li>\u663e\u5f0f\u865a\u51fd\u6570\u91cd\u8f7d\uff1a</li> </ul> <p>\u5f53\u91cd\u8f7d\u865a\u51fd\u6570\u65f6\uff0c\u5f15\u5165 <code>override</code> \u5173\u952e\u5b57\u5c06\u663e\u5f0f\u7684\u544a\u77e5\u7f16\u8bd1\u5668\u8fdb\u884c\u91cd\u5199</p> <p><code>final</code> \u5219\u662f\u4e3a\u4e86\u9632\u6b62\u7c7b\u88ab\u7ee7\u7eed\u7ee7\u627f\u4ee5\u53ca\u7ec8\u6b62\u865a\u51fd\u6570\u7ee7\u7eed\u91cd\u5199\u5f15\u5165\u7684\u3002</p> <pre><code>struct Base {\n    virtual void foo(int);\n};\nstruct SubClass: Base {\n    virtual void foo(int) override; // \u5408\u6cd5\n    virtual void foo(float) override; // \u975e\u6cd5, \u7236\u7c7b\u6ca1\u6709\u6b64\u865a\u51fd\u6570\n};\n\nstruct Base {\n    virtual void foo() final;\n};\n\nstruct SubClass1 final: Base {\n}; // \u5408\u6cd5\n\nstruct SubClass2 : SubClass1 {\n}; // \u975e\u6cd5, SubClass1 \u5df2 final\n\nstruct SubClass3: Base {\n    void foo(); // \u975e\u6cd5, foo \u5df2 final\n};\n</code></pre> <ul> <li>\u663e\u5f0f\u7981\u7528\u9ed8\u8ba4\u51fd\u6570\uff1a\u5373\u7981\u7528\u7f16\u8bd1\u5668\u4e3a\u5bf9\u8c61\u751f\u6210\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u590d\u5236\u6784\u9020\uff0c\u8d4b\u503c\u8fd0\u7b97\u7b26\u4ee5\u53ca\u6790\u6784\u51fd\u6570\u3002\u4f8b\u5982\u60f3\u8ba9\u590d\u5236\u6784\u9020\u51fd\u6570\u4e3aprivate</li> </ul> <pre><code>class Magic {\n    public:\n    Magic() = default; // \u663e\u5f0f\u58f0\u660e\u4f7f\u7528\u7f16\u8bd1\u5668\u751f\u6210\u7684\u6784\u9020\n    Magic&amp; operator=(const Magic&amp;) = delete; // \u663e\u5f0f\u58f0\u660e\u62d2\u7edd\u7f16\u8bd1\u5668\u751f\u6210\u6784\u9020\n    Magic(int magic_number);\n}\n</code></pre> <ul> <li>\u5f3a\u7c7b\u578b\u679a\u4e3e\uff1a\u5f15\u5165\u679a\u4e3e\u7c7benum class<ul> <li>\u4f20\u7edfC++\u4e2d\u540c\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\u4e2d\u7684\u4e0d\u540c\u679a\u4e3e\u7c7b\u578b\u7684\u679a\u4e3e\u503c\u540d\u5b57\u4e0d\u80fd\u76f8\u540c</li> <li>\u7c7b\u578b\u5b89\u5168\uff0c\u4e0d\u4f1a\u88ab\u9690\u5f0f\u8f6c\u6362\u4e3a\u6574\u6570</li> <li>\u4e0d\u80fd\u591f\u5c06\u5176\u4e0e\u6574\u6570\u6570\u5b57\u8fdb\u884c\u6bd4\u8f83\uff0c \u4e0d\u53ef\u80fd\u5bf9\u4e0d\u540c\u7684\u679a\u4e3e\u7c7b\u578b\u7684\u679a\u4e3e\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u4f46\u76f8\u540c\u679a\u4e3e\u503c\u4e4b\u95f4\u5982\u679c\u6307\u5b9a\u7684\u503c\u76f8\u540c\uff0c\u90a3\u4e48\u53ef\u4ee5\u8fdb\u884c\u6bd4\u8f83\uff1a\u672a\u6307\u5b9a\u679a\u4e3e\u503c\u7c7b\u578b\u9ed8\u8ba4\u4e3aint</li> </ul> </li> </ul> <pre><code>//\u5b9a\u4e49\nenum class new_enum : unsigned int {\n    value1,\n    value2,\n    value3 = 100,\n    value4 = 100\n};\n\n//\u6bd4\u8f83\u679a\u4e3e\u503c\nif (new_enum::value3 == new_enum::value4) {\n    // \u4f1a\u8f93\u51fa\n    std::cout &lt;&lt; \"new_enum::value3 == new_enum::value4\" &lt;&lt; std::endl;\n}\n\n//\u91cd\u8f7d&lt;&lt;\uff0c\u83b7\u5f97\u679a\u4e3e\u503c\u7684\u503c\n#include &lt;iostream&gt;\ntemplate&lt;typename T&gt;\nstd::ostream&amp; operator&lt;&lt;(\n    typename std::enable_if&lt;std::is_enum&lt;T&gt;::value,\n        std::ostream&gt;::type&amp; stream, const T&amp; e)\n{\n    return stream &lt;&lt; static_cast&lt;typename std::underlying_type&lt;T&gt;::type&gt;(e);\n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_8","title":"\u4e8c\u3001\u8bed\u8a00\u8fd0\u884c\u671f","text":""},{"location":"tech/coding/modernC%2B%2B/#lambda","title":"Lambda\u8868\u8fbe\u5f0f","text":"<p>\u6355\u83b7\u5217\u8868\u6307\u7684\u662f\u4f20\u9012\u5916\u90e8\u6570\u636e\uff0c\u5206\u4e3a\u503c\u6355\u83b7\uff0c\u5f15\u7528\u6355\u83b7\u548c\u9690\u5f0f\u6355\u83b7\u3002</p> <ul> <li>\u503c\u6355\u83b7\uff1a\u88ab\u6355\u83b7\u7684\u53d8\u91cf\u5728 Lambda \u8868\u8fbe\u5f0f\u88ab\u521b\u5efa\u65f6\u62f7\u8d1d</li> <li>\u5f15\u7528\u6355\u83b7\uff1a\u4e0e\u5f15\u7528\u4f20\u53c2\u7c7b\u4f3c\uff0c\u5f15\u7528\u6355\u83b7\u4fdd\u5b58\u7684\u662f\u5f15\u7528\uff0c\u503c\u4f1a\u53d1\u751f\u53d8\u5316</li> <li>\u9690\u5f0f\u6355\u83b7\uff1a\u53ef\u4ee5\u5728\u6355\u83b7\u5217\u8868\u4e2d\u5199\u4e00\u4e2a <code>&amp;</code> \u6216 <code>=</code> \u5411\u7f16\u8bd1\u5668\u58f0\u660e\u91c7\u7528\u5f15\u7528\u6355\u83b7\u6216\u8005\u503c\u6355\u83b7\uff0c\u8ba9\u7f16\u8bd1\u5668\u81ea\u884c\u63a8\u5bfc\u6355\u83b7\u5217\u8868</li> </ul> <pre><code>[\u6355\u83b7\u5217\u8868](\u53c2\u6570\u5217\u8868) mutable(\u53ef\u9009) \u5f02\u5e38\u5c5e\u6027 -&gt; \u8fd4\u56de\u7c7b\u578b {\n// \u51fd\u6570\u4f53\n}\n\n//\u793a\u4f8b\nvoid lambda_reference_capture() {\n    int value = 1;\n    auto copy_value = [&amp;value]{\n        return value;\n    }\n    //\u7b49\u6548\u4e8e\n    auto copy_value = [&amp;]{\n        return value;\n    }\n    value = 100;\n    auto stored_value = copy_value();\n    std::cout &lt;&lt; \"stored_value = \" &lt;&lt; stored_value &lt;&lt; std::endl;\n    // \u8fd9\u65f6, stored_value == 100, value == 100.\n    // \u56e0\u4e3a copy_value \u4fdd\u5b58\u7684\u662f\u5f15\u7528\n}\n</code></pre> <ul> <li>\u8868\u8fbe\u5f0f\u6355\u83b7\uff1aC++14\u4e4b\u540e\uff0c\u53ef\u4ee5\u6355\u83b7\u53f3\u503c(\u5141\u8bb8\u6355\u83b7\u7684\u6210\u5458\u7528\u4efb\u610f\u7684\u8868\u8fbe\u5f0f\u8fdb\u884c\u521d\u59cb\u5316)</li> </ul> <p>important \u662f\u4e00\u4e2a\u72ec\u5360\u6307\u9488\uff0c\u662f\u4e0d\u80fd\u591f\u88ab \"=\" \u503c\u6355\u83b7\u5230\uff0c\u8fd9\u65f6\u5019\u6211\u4eec\u53ef\u4ee5\u5c06\u5176\u8f6c\u79fb\u4e3a\u53f3\u503c\uff0c\u5728\u8868\u8fbe\u5f0f\u4e2d\u521d\u59cb\u5316\u3002</p> <pre><code>#include &lt;memory&gt;  // std::make_unique\n#include &lt;utility&gt; // std::move\n\nvoid lambda_expression_capture() {\n    auto important = std::make_unique&lt;int&gt;(1);\n    auto add = [v1 = 1, v2 = std::move(important)](int x, int y) -&gt; int {\n        return x+y+v1+(*v2);\n    };\n    std::cout &lt;&lt; add(3,4) &lt;&lt; std::endl;\n}\n</code></pre> <ul> <li>\u6cdb\u578bLambda\uff1a\u51fd\u6570\u53c2\u6570\u4e5f\u53ef\u4ee5\u7528auto, after C++14</li> </ul> <pre><code>auto add(auto x, auto y){\n    return x + y;\n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_9","title":"\u51fd\u6570\u5bf9\u8c61\u5305\u88c5\u5668","text":"<p><code>std::function</code>\uff1a\u53ef\u8c03\u7528\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u5b83\u7684\u5b9e\u4f8b\u53ef\u4ee5\u5bf9\u4efb\u4f55\u53ef\u4ee5\u8c03\u7528\u7684\u76ee\u6807\u5b9e\u4f53\u8fdb\u884c\u5b58\u50a8\u3001\u590d\u5236\u548c\u8c03\u7528\u64cd\u4f5c\u3002\u53ef\u4ee5\u7406\u89e3\u4e3a\u51fd\u6570\u7684\u5bb9\u5668</p> <p>Lambda \u8868\u8fbe\u5f0f\u7684\u672c\u8d28\u662f\u4e00\u4e2a\u548c\u51fd\u6570\u5bf9\u8c61\u7c7b\u578b\u76f8\u4f3c\u7684\u7c7b\u7c7b\u578b\uff08\u79f0\u4e3a\u95ed\u5305\u7c7b\u578b\uff09\u7684\u5bf9\u8c61\uff08\u79f0\u4e3a\u95ed\u5305\u5bf9\u8c61\uff09\uff0c\u6355\u83b7\u5217\u8868\u4e3a\u7a7a\u65f6\u9000\u5316\u4e3a\u51fd\u6570\u6307\u9488\u53ef\u8fdb\u884c\u4f20\u9012</p> <p>\u7c7b\u578b\u5b89\u5168\uff1aC++\u4e2d\uff0c\u7c7b\u578b\u5b89\u5168\u610f\u5473\u7740\u7f16\u8bd1\u5668\u80fd\u591f\u68c0\u67e5\u7c7b\u578b\u5339\u914d\uff0c\u9632\u6b62\u4e0d\u540c\u7c7b\u578b\u4e4b\u95f4\u7684\u4e0d\u5408\u6cd5\u64cd\u4f5c\uff0c\u4ece\u800c\u51cf\u5c11\u7a0b\u5e8f\u4e2d\u7684\u9519\u8bef\u3002\u4e3e\u4f8b\uff1a\u6bd4\u5982\u51fd\u6570\u6307\u9488\u53ef\u4ee5\u6307\u5411\u53c2\u6570\u5217\u8868\u4e0d\u5339\u914d\u7684\u51fd\u6570\uff0c\u6216\u8005\u8fd4\u56de\u7c7b\u578b\u4e0d\u5339\u914d\u7684\u51fd\u6570\uff0c\u8fd9\u6837\u7684\u64cd\u4f5c\u662f\u4e0d\u5b89\u5168\u7684</p> <pre><code>#include &lt;iostream&gt;\n\nusing foo = void(int); \nvoid functional(foo f) { \n    f(1); \n}\n\nint main() {\n    auto f = [](int value) {\n        std::cout &lt;&lt; value &lt;&lt; std::endl;\n    };\n    functional(f); // \u51fd\u6570\u7c7b\u578b\u8c03\u7528\uff0c\u4f20\u9012\u95ed\u5305\u5bf9\u8c61\uff0c\u9690\u5f0f\u8f6c\u6362\u4e3a foo* \u7c7b\u578b\u7684\u51fd\u6570\u6307\u9488\u503c\n    f(1); // lambda \u8868\u8fbe\u5f0f\u8c03\u7528 \n\n    //\u4f7f\u7528std::function\n    int important = 10;\n    std::function&lt;int(int)&gt; func = f;\n    std::function&lt;int(int)&gt; func2 = [&amp;](int value) -&gt; int{\n        return 1 + value + important;\n    };\n    return 0;\n}\n</code></pre> <p><code>std::bind, std::placeholder</code>\uff1a\u800c <code>std::bind</code> \u5219\u662f\u7528\u6765\u7ed1\u5b9a\u51fd\u6570\u8c03\u7528\u7684\u53c2\u6570\u7684\uff0c \u5b83\u89e3\u51b3\u7684\u9700\u6c42\u662f\u6211\u4eec\u6709\u65f6\u5019\u53ef\u80fd\u5e76\u4e0d\u4e00\u5b9a\u80fd\u591f\u4e00\u6b21\u6027\u83b7\u5f97\u8c03\u7528\u67d0\u4e2a\u51fd\u6570\u7684\u5168\u90e8\u53c2\u6570\uff0c\u901a\u8fc7\u8fd9\u4e2a\u51fd\u6570\uff0c \u6211\u4eec\u53ef\u4ee5\u5c06\u90e8\u5206\u8c03\u7528\u53c2\u6570\u63d0\u524d\u7ed1\u5b9a\u5230\u51fd\u6570\u8eab\u4e0a\u6210\u4e3a\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u5728\u53c2\u6570\u9f50\u5168\u540e\uff0c\u5b8c\u6210\u8c03\u7528</p> <pre><code>int foo(int a, int b, int c) {\n    ;\n}\nint main() {\n    // \u5c06\u53c2\u65701,2\u7ed1\u5b9a\u5230\u51fd\u6570 foo \u4e0a\uff0c\n    // \u4f46\u4f7f\u7528 std::placeholders::_1 \u6765\u5bf9\u7b2c\u4e00\u4e2a\u53c2\u6570\u8fdb\u884c\u5360\u4f4d\n    auto bindFoo = std::bind(foo, std::placeholders::_1, 1,2);\n    // \u8fd9\u65f6\u8c03\u7528 bindFoo \u65f6\uff0c\u53ea\u9700\u8981\u63d0\u4f9b\u7b2c\u4e00\u4e2a\u53c2\u6570\u5373\u53ef\n    bindFoo(1);\n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_10","title":"\u53f3\u503c\u5f15\u7528","text":"<p>\u4e2a\u4eba\u8ba4\u4e3a\u8fd9\u4e5f\u662fC++11\u540e\u6700\u7ecf\u5178\u7684\u8ba9\u4eba\u56f0\u60d1\u7684\u95ee\u9898\uff0c\u5173\u4e8e\u53f3\u503c\u5f15\u7528\u548c\u901a\u7528\u5f15\u7528\uff0c\u8fd9\u91cc\u4f1a\u505a\u8be6\u7ec6\u8bf4\u660e</p> <ul> <li>\u901a\u7528\u5f15\u7528\uff1a<code>auto &amp;&amp;</code>\uff0c\u56e0\u4e3a\u5f53auto\u88ab\u63a8\u5230\u4e3a\u4e0d\u540c\u7684\u5de6\u53f3\u5f15\u7528\u65f6\uff0c\u4e0e <code>&amp;&amp;</code> \u7684\u574d\u7f29\u7ec4\u5408\u662f\u5b8c\u7f8e\u8f6c\u53d1</li> </ul> <pre><code>//A simple Example:\ntemplate &lt;typename Key, typename Value, typename F&gt;\nvoid update(std::map&lt;Key, Value&gt;&amp; m, F foo) {\n    for (auto&amp;&amp; [key, value] : m ) value = foo(key);\n}\nupdate(m, [](std::string key) -&gt; long long int {\n        return std::hash&lt;std::string&gt;{}(key);\n});\n</code></pre> <p>\u5de6\u503c(lvalue)\uff1a\u8868\u8fbe\u5f0f\u7ed3\u675f\u540e\u4f9d\u7136\u5b58\u5728\u7684\u6301\u4e45\u5bf9\u8c61</p> <p>\u53f3\u503c(rvalue)\uff1a\u8868\u8fbe\u5f0f\u7ed3\u675f\u540e\u5c31\u4e0d\u518d\u5b58\u5728\u7684\u4e34\u65f6\u5bf9\u8c61</p> <ul> <li>\u7eaf\u53f3\u503c(prvalue)\uff1a\u975e\u5f15\u7528\u8fd4\u56de\u7684\u4e34\u65f6\u53d8\u91cf\u3001\u8fd0\u7b97\u8868\u8fbe\u5f0f\u4ea7\u751f\u7684\u4e34\u65f6\u53d8\u91cf\u3001 \u539f\u59cb\u5b57\u9762\u91cf(\u9664\u4e86\u5b57\u7b26\u4e32\u5b57\u9762\u91cf)\u3001Lambda \u8868\u8fbe\u5f0f\u90fd\u5c5e\u4e8e\u7eaf\u53f3\u503c\u3002</li> <li>\u4f46\u662f\u6570\u7ec4\u53ef\u4ee5\u88ab\u9690\u5f0f\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u6307\u9488\u7c7b\u578b\uff0c\u8f6c\u6362\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u82e5\u4e0d\u662f\u5de6\u503c\u5f15\u7528\uff0c\u5219\u4e00\u5b9a\u662f\u4e2a\u53f3\u503c\uff08\u7ed3\u679c\u662f\u53f3\u503c\u5f15\u7528\u4e3a\u5c06\u4ea1\u503c\uff0c\u5426\u5219\u4e3a\u7eaf\u53f3\u503c</li> </ul> <pre><code>const char (&amp;left)[6] = \"01234\"; // \u6b63\u786e\uff0c\"01234\" \u7c7b\u578b\u4e3a const char [6]\uff0c\u56e0\u6b64\u662f\u5de6\u503c\nconst char*   p   = \"01234\";  // \u6b63\u786e\uff0c\"01234\" \u88ab\u9690\u5f0f\u8f6c\u6362\u4e3a const char*\nconst char*&amp;&amp; pr  = \"01234\";  // \u6b63\u786e\uff0c\"01234\" \u88ab\u9690\u5f0f\u8f6c\u6362\u4e3a const char*\uff0c\u8be5\u8f6c\u6362\u7684\u7ed3\u679c\u662f\u7eaf\u53f3\u503c\n</code></pre> <ul> <li> <p>\u5c06\u4ea1\u503c(xvalue)\uff1a\u4e34\u65f6\u7684\u503c\u80fd\u591f\u88ab\u8bc6\u522b\u3001\u540c\u65f6\u53c8\u80fd\u591f\u88ab\u79fb\u52a8\u3002</p> <p>\u6b64\u5904\u7684\u5de6\u503c <code>temp</code> \u4f1a\u88ab\u8fdb\u884c\u9690\u5f0f\u53f3\u503c\u8f6c\u6362\uff0c \u7b49\u4ef7\u4e8e <code>static_cast&lt;std::vector&lt;int&gt; &amp;&amp;&gt;(temp)</code>\uff0c\u8fdb\u800c\u6b64\u5904\u7684 <code>v</code> \u4f1a\u5c06 <code>foo</code> \u5c40\u90e8\u8fd4\u56de\u7684\u503c\u8fdb\u884c\u79fb\u52a8\u53d8\u6210\u5de6\u503c\u3002</p> </li> </ul> <pre><code>std::vector&lt;int&gt; foo() {\n    std::vector&lt;int&gt; temp = {1, 2, 3, 4};\n    return temp;\n}\n\nstd::vector&lt;int&gt; v = foo();\n</code></pre> <p>\u53f3\u503c\u5f15\u7528\u662f\u4ec0\u4e48\uff1a\u8981\u62ff\u5230\u4e00\u4e2a\u5c06\u4ea1\u503c\uff0c\u5c31\u9700\u8981\u7528\u5230\u53f3\u503c\u5f15\u7528\uff1a<code>T &amp;&amp;</code>\uff0c\u53ea\u8981\u53d8\u91cf\u8fd8\u6d3b\u7740\uff0c\u5c06\u4ea1\u503c\u5c31\u8fd8\u6d3b\u7740</p> <ul> <li><code>std::move()</code>\uff1a\u7528\u4e8e\u5c06\u5de6\u503c\u53c2\u6570\u65e0\u6761\u4ef6\u8f6c\u6362\u4e3a\u53f3\u503c</li> </ul> <pre><code>std::string lv1 = \"string,\"; // lv1 \u662f\u4e00\u4e2a\u5de6\u503c\nstd::string&amp;&amp; rv1 = std::move(lv1); // \u5408\u6cd5, std::move\u53ef\u4ee5\u5c06\u5de6\u503c\u8f6c\u79fb\u4e3a\u53f3\u503c\n\nconst std::string&amp; lv2 = lv1 + lv1; // \u5408\u6cd5, \u5e38\u91cf\u5de6\u503c\u5f15\u7528\u80fd\u591f\u5ef6\u957f\u4e34\u65f6\u53d8\u91cf\u7684\u751f\u547d\u5468\u671f\nstd::string&amp; lv2 = lv1 + lv1; //\u975e\u6cd5\uff0c\u5de6\u503c\u5f15\u7528\u7684\u521d\u59cb\u503c\u5fc5\u987b\u662f\u4e00\u4e2a\u5de6\u503c\n\nstd::string&amp;&amp; rv2 = lv1 + lv2; // \u5408\u6cd5, \u53f3\u503c\u5f15\u7528\u5ef6\u957f\u4e34\u65f6\u5bf9\u8c61\u751f\u547d\u5468\u671f\n//\u867d\u7136rv2\u5f15\u7528\u4e86\u4e00\u4e2a\u53f3\u503c\uff0c\u4f46\u662f\u5b83\u672c\u8eab\u662f\u4e2a\u5f15\u7528\uff0c\u6240\u4ee5\u662f\u4e00\u4e2a\u5de6\u503c\n</code></pre> <p>\u79fb\u52a8\u8bed\u4e49\uff1a\u89e3\u51b3\u300e\u79fb\u52a8\u300f\u548c\u300e\u62f7\u8d1d\u300f\u4e24\u4e2a\u6982\u5ff5\u7684\u6df7\u6dc6\u95ee\u9898</p> <p>\u4e00\u4e2avector\u7684\u4f8b\u5b50</p> <pre><code>int main() {\n    std::string str = \"Hello world.\";\n    std::vector&lt;std::string&gt; v;\n\n    // \u5c06\u4f7f\u7528 push_back(const T&amp;), \u5373\u4ea7\u751f\u62f7\u8d1d\u884c\u4e3a\n    v.push_back(str);\n    // \u5c06\u8f93\u51fa \"str: Hello world.\"\n    std::cout &lt;&lt; \"str: \" &lt;&lt; str &lt;&lt; std::endl;\n\n    // \u5c06\u4f7f\u7528 push_back(const T&amp;&amp;), \u4e0d\u4f1a\u51fa\u73b0\u62f7\u8d1d\u884c\u4e3a\n    // \u800c\u6574\u4e2a\u5b57\u7b26\u4e32\u4f1a\u88ab\u79fb\u52a8\u5230 vector \u4e2d\uff0c\u6240\u4ee5\u6709\u65f6\u5019 std::move \u4f1a\u7528\u6765\u51cf\u5c11\u62f7\u8d1d\u51fa\u73b0\u7684\u5f00\u9500\n    // \u8fd9\u6b65\u64cd\u4f5c\u540e, str \u4e2d\u7684\u503c\u4f1a\u53d8\u4e3a\u7a7a\n    v.push_back(std::move(str));\n    // \u5c06\u8f93\u51fa \"str: \"\n    std::cout &lt;&lt; \"str: \" &lt;&lt; str &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>\u4e00\u4e2a\u5bf9\u8c61\u7684\u4f8b\u5b50\uff1a</p> <ul> <li>\u89e3\u91ca\uff1a\u9996\u5148\u4f1a\u5728 <code>return_rvalue</code> \u5185\u90e8\u6784\u9020\u4e24\u4e2a <code>A</code> \u5bf9\u8c61\uff0c\u4e8e\u662f\u83b7\u5f97\u4e24\u4e2a\u6784\u9020\u51fd\u6570\u7684\u8f93\u51fa\u3002\u51fd\u6570\u8fd4\u56de\u540e\uff0c\u4ea7\u751f\u4e00\u4e2a\u5c06\u4ea1\u503c\uff0c\u88ab <code>A</code> \u7684\u79fb\u52a8\u6784\u9020\uff08<code>A(A&amp;&amp;)</code>\uff09\u5f15\u7528\uff0c\u4ece\u800c\u5ef6\u957f\u751f\u547d\u5468\u671f\uff0c\u5e76\u5c06\u8fd9\u4e2a\u53f3\u503c\u4e2d\u7684\u6307\u9488\u62ff\u5230\uff0c\u4fdd\u5b58\u5230\u4e86 <code>obj</code> \u4e2d\uff0c\u800c\u5c06\u4ea1\u503c\u7684\u6307\u9488\u88ab\u8bbe\u7f6e\u4e3a <code>nullptr</code>\uff0c\u9632\u6b62\u4e86\u8fd9\u5757\u5185\u5b58\u533a\u57df\u88ab\u9500\u6bc1\u3002</li> </ul> <pre><code>#include &lt;iostream&gt;\nclass A {\npublic:\n    int *pointer;\n    A():pointer(new int(1)) {\n        std::cout &lt;&lt; \"\u6784\u9020\" &lt;&lt; pointer &lt;&lt; std::endl;\n    }\n    A(A&amp; a):pointer(new int(*a.pointer)) {\n        std::cout &lt;&lt; \"\u62f7\u8d1d\" &lt;&lt; pointer &lt;&lt; std::endl;\n    } // \u65e0\u610f\u4e49\u7684\u5bf9\u8c61\u62f7\u8d1d\n    A(A&amp;&amp; a):pointer(a.pointer) {\n        a.pointer = nullptr;\n        std::cout &lt;&lt; \"\u79fb\u52a8\" &lt;&lt; pointer &lt;&lt; std::endl;\n    }\n    ~A(){\n        std::cout &lt;&lt; \"\u6790\u6784\" &lt;&lt; pointer &lt;&lt; std::endl;\n        delete pointer;\n    }\n};\n// \u9632\u6b62\u7f16\u8bd1\u5668\u4f18\u5316\nA return_rvalue(bool test) {\n    A a,b;\n    if(test) return a; // \u7b49\u4ef7\u4e8e static_cast&lt;A&amp;&amp;&gt;(a);\n    else return b;     // \u7b49\u4ef7\u4e8e static_cast&lt;A&amp;&amp;&gt;(b);\n}\nint main() {\n    A obj = return_rvalue(false);\n    std::cout &lt;&lt; \"obj:\" &lt;&lt; std::endl;\n    std::cout &lt;&lt; obj.pointer &lt;&lt; std::endl;\n    std::cout &lt;&lt; *obj.pointer &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre> <p>\u5b8c\u7f8e\u8f6c\u53d1\uff1a\u4e00\u4e2a\u58f0\u660e\u7684\u53f3\u503c\u5f15\u7528\u5176\u5b9e\u662f\u4e00\u4e2a\u5de6\u503c\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u9700\u8981<code>std::forward()</code>\uff0c\u53ef\u4ee5\u4fdd\u6301\u539f\u6765\u7684\u53c2\u6570\u7c7b\u578b\u3002</p> <ul> <li> <p>\u5f15\u7528\u574d\u7f29\u89c4\u5219\uff1a\u65e0\u8bba\u6a21\u677f\u53c2\u6570\u662f\u4ec0\u4e48\u7c7b\u578b\u7684\u5f15\u7528\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b9e\u53c2\u7c7b\u578b\u4e3a\u53f3\u5f15\u7528\u65f6\uff0c\u6a21\u677f\u53c2\u6570\u624d\u80fd\u88ab\u63a8\u5bfc\u4e3a\u53f3\u5f15\u7528\u7c7b\u578b</p> <p></p> </li> </ul> <ul> <li>\u5728\u5982\u4e0b\u7684\u793a\u4f8b\u4e2d\uff1a\u65e0\u8bba\u4f20\u9012\u53c2\u6570\u4e3a\u5de6\u503c\u8fd8\u662f\u53f3\u503c\uff0c\u666e\u901a\u4f20\u53c2\u90fd\u4f1a\u5c06\u53c2\u6570\u4f5c\u4e3a\u5de6\u503c\u8fdb\u884c\u8f6c\u53d1\uff0c<code>std::move()</code>\u90fd\u4f1a\u5c06\u4f20\u5165\u7684\u5de6\u503c\u4f5c\u4e3a\u53f3\u503c\u4f20\u9012\uff0c<code>std::forward()</code>\u4f1a\u4fdd\u6301\u5f15\u7528\u7c7b\u578b</li> </ul> <pre><code>void reference(int&amp; v) {\n    std::cout &lt;&lt; \"\u5de6\u503c\" &lt;&lt; std::endl;\n}\nvoid reference(int&amp;&amp; v) {\n    std::cout &lt;&lt; \"\u53f3\u503c\" &lt;&lt; std::endl;\n}\n\ntemplate &lt;typename T&gt;\nvoid pass(T&amp;&amp; v) {\n    std::cout &lt;&lt; \"\u666e\u901a\u4f20\u53c2:\";\n    reference(v); // \u59cb\u7ec8\u8c03\u7528 reference(int&amp;)\n\n    std::cout &lt;&lt; \"       std::move \u4f20\u53c2: \";\n    reference(std::move(v));\n\n    std::cout &lt;&lt; \"    std::forward \u4f20\u53c2: \";\n    reference(std::forward&lt;T&gt;(v));\n\n    std::cout &lt;&lt; \"static_cast&lt;T&amp;&amp;&gt; \u4f20\u53c2: \";\n    reference(static_cast&lt;T&amp;&amp;&gt;(v));\n}\nint main() {\n    std::cout &lt;&lt; \"\u4f20\u9012\u53f3\u503c:\" &lt;&lt; std::endl;\n    pass(1); // 1\u662f\u53f3\u503c, \u4f46\u8f93\u51fa\u662f\u5de6\u503c\n    std::cout &lt;&lt; \"\u4f20\u9012\u5de6\u503c:\" &lt;&lt; std::endl;\n    int l = 1;\n    pass(l); // l \u662f\u5de6\u503c, \u8f93\u51fa\u5de6\u503c\n    return 0;\n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_11","title":"\u4e09\u3001\u5bb9\u5668","text":""},{"location":"tech/coding/modernC%2B%2B/#_12","title":"\u7ebf\u6027\u5bb9\u5668","text":"<p><code>std::array</code>\uff0c\u4e0e<code>vector</code>\u4e0d\u540c\uff0c<code>std::array</code>\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u4f5c\u7528\u662f\u8ba9\u4ee3\u7801\u53d8\u5f97\u66f4\u52a0\u73b0\u4ee3\u5316\uff0c\u4ee5\u53ca\u5c01\u88c5\u4e86\u4e00\u4e9b\u64cd\u4f5c\u51fd\u6570</p> <pre><code>std::array&lt;int, 4&gt; arr = {1, 2, 3, 4};\n\narr.empty(); // \u68c0\u67e5\u5bb9\u5668\u662f\u5426\u4e3a\u7a7a\narr.size();  // \u8fd4\u56de\u5bb9\u7eb3\u7684\u5143\u7d20\u6570\n// \u8fed\u4ee3\u5668\u652f\u6301\nfor (auto &amp;i : arr){}\n\n// \u7528 lambda \u8868\u8fbe\u5f0f\u6392\u5e8f\nstd::sort(arr.begin(), arr.end(), [](int a, int b) {\n    return b &lt; a;\n});\n\n// \u6570\u7ec4\u5927\u5c0f\u53c2\u6570\u5fc5\u987b\u662f\u5e38\u91cf\u8868\u8fbe\u5f0f\nconstexpr int len = 4;\nstd::array&lt;int, len&gt; arr = {1, 2, 3, 4};\n\n//C\u98ce\u683c\u63a5\u53e3\u4f20\u53c2\uff0c\u6ce8\u610f\u65e0\u6cd5\u9690\u5f0f\u8f6c\u6362\u4e3a\u9000\u5316\u7684\u6307\u9488\nvoid foo(int *p, int len) {\n    return;\n}\n\nfoo(&amp;arr[0], arr.size());\nfoo(arr.data(), arr.size());\n</code></pre> <p>Tips: <code>vector</code>\u5bb9\u5668clear\u4e4b\u540e\uff0c\u9700\u8981\u8c03\u7528<code>shrink_to_fit()</code>\u6765\u6e05\u7a7a\u5185\u5b58</p> <p><code>std::forward_list</code>\uff0c\u548c <code>std::list</code> \u7684\u53cc\u5411\u94fe\u8868\u7684\u5b9e\u73b0\u4e0d\u540c\uff0c<code>std::forward_list</code> \u4f7f\u7528\u5355\u5411\u94fe\u8868\u8fdb\u884c\u5b9e\u73b0\uff0c \u63d0\u4f9b\u4e86 <code>O(1)</code> \u590d\u6742\u5ea6\u7684\u5143\u7d20\u63d2\u5165\uff0c\u4e0d\u652f\u6301\u5feb\u901f\u968f\u673a\u8bbf\u95ee\uff08\u8fd9\u4e5f\u662f\u94fe\u8868\u7684\u7279\u70b9\uff09\uff0c \u4e5f\u662f\u6807\u51c6\u5e93\u5bb9\u5668\u4e2d\u552f\u4e00\u4e00\u4e2a\u4e0d\u63d0\u4f9b <code>size()</code> \u65b9\u6cd5\u7684\u5bb9\u5668\u3002\u5f53\u4e0d\u9700\u8981\u53cc\u5411\u8fed\u4ee3\u65f6\uff0c\u5177\u6709\u6bd4 <code>std::list</code> \u66f4\u9ad8\u7684\u7a7a\u95f4\u5229\u7528\u7387\u3002</p>"},{"location":"tech/coding/modernC%2B%2B/#_13","title":"\u65e0\u5e8f\u5bb9\u5668","text":"<p>\u73b0\u5728\u5e38\u7528\u7684<code>std::unordered_map</code>/<code>std::unordered_multimap</code> \u548c<code>std::unordered_set</code>/<code>std::unordered_multiset</code>\u90fd\u662f\u5728C++11\u4e4b\u540e\u5f15\u5165\u7684\uff0c\u4f46\u662f\u662f\u65e0\u5e8f\u7684</p> <p><code>multiset</code>\u548c<code>set</code>\u7684\u533a\u522b\uff1amultiset\u5141\u8bb8\u5bb9\u5668\u6709\u91cd\u590d\u7684\u5143\u7d20\u3002\u5b83\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u5e8f\u5217\uff0c\u63d2\u5165\u4e00\u4e2a\u6570\uff0c \u5220\u9664\u4e00\u4e2a\u6570\u90fd\u80fd\u591f\u5728O(logn)\u7684\u65f6\u95f4\u5185\u5b8c\u6210\uff0c\u800c\u4e14\u4ed6\u80fd\u65f6\u523b\u4fdd\u8bc1\u5e8f\u5217\u4e2d\u7684\u6570\u662f\u6709\u5e8f\u7684\uff0c\u800c\u4e14\u5e8f\u5217\u4e2d\u53ef\u4ee5\u5b58\u5728\u91cd\u590d\u7684\u6570</p>"},{"location":"tech/coding/modernC%2B%2B/#_14","title":"\u5143\u7ec4","text":"<p><code>std::tuple</code>\uff0c\u7c7b\u4f3c\u4e8ePython\uff0c\u4f7f\u7528\u6838\u5fc3\u6709\u4e09\u4e2a\u51fd\u6570<code>std::make_tuple, std::get, std::tie</code></p> <pre><code>auto get_student(int id){\n    // \u8fd4\u56de\u7c7b\u578b\u88ab\u63a8\u65ad\u4e3a std::tuple&lt;double, char, std::string&gt;\n    return std::make_tuple(0,0, 'D', \"null\");\n}\ndouble gpa; char grade; std::string name;\n//\u62c6\u5305\nstd::tie(gpa, grade, name) = get_student(1);\n//get\u901a\u8fc7\u7c7b\u578b\u548c\u4f4d\u7f6e\u83b7\u53d6\uff0c\u4f4d\u7f6e\u5fc5\u987b\u662f\u4e00\u4e2a\u5e38\u6570\nstd::tuple&lt;std::string, double, double, int&gt; t(\"123\", 4.5, 6.7, 8);\nstd::cout &lt;&lt; std::get&lt;std::string&gt;(t) &lt;&lt; std::endl;\nstd::cout &lt;&lt; std::get&lt;double&gt;(t) &lt;&lt; std::endl; // \u975e\u6cd5, \u5f15\u53d1\u7f16\u8bd1\u671f\u9519\u8bef, \u6709\u4e24\u4e2adouble\nstd::cout &lt;&lt; std::get&lt;3&gt;(t) &lt;&lt; std::endl;\n</code></pre> <p>\u4e3a\u4e86\u89e3\u51b3<code>std::get</code>\u4f9d\u8d56\u7f16\u8bd1\u5668\u5e38\u91cf\u7684\u95ee\u9898\uff0cC++17\u5f15\u5165\u4e86<code>std::variant&lt;T&gt;</code>\uff0c\u4ece\u800c\u5bb9\u7eb3\u63d0\u4f9b\u7684\u51e0\u79cd\u7c7b\u578b\u7684\u53d8\u91cf</p> <ul> <li>\u975e\u5e38\u5177\u6709\u73b0\u4ee3C++\u7279\u8272\u7684tuple\u904d\u5386</li> </ul> <pre><code>#include &lt;variant&gt;\ntemplate &lt;size_t n, typename... T&gt;\nconstexpr std::variant&lt;T...&gt; _tuple_index(const std::tuple&lt;T...&gt;&amp; tpl, size_t i) {\n    if constexpr (n &gt;= sizeof...(T))\n        throw std::out_of_range(\"\u8d8a\u754c.\");\n    if (i == n)\n        return std::variant&lt;T...&gt;{ std::in_place_index&lt;n&gt;, std::get&lt;n&gt;(tpl) };\n    return _tuple_index&lt;(n &lt; sizeof...(T)-1 ? n+1 : 0)&gt;(tpl, i);\n}\ntemplate &lt;typename... T&gt;\nconstexpr std::variant&lt;T...&gt; tuple_index(const std::tuple&lt;T...&gt;&amp; tpl, size_t i) {\n    return _tuple_index&lt;0&gt;(tpl, i);\n}\ntemplate &lt;typename T0, typename ... Ts&gt;\nstd::ostream &amp; operator&lt;&lt; (std::ostream &amp; s, std::variant&lt;T0, Ts...&gt; const &amp; v) { \n    std::visit([&amp;](auto &amp;&amp; x){ s &lt;&lt; x;}, v); \n    return s;\n}\n\nint i = 1;\nstd::cout &lt;&lt; tuple_index(t, i) &lt;&lt; std::endl;\n</code></pre> <p>\u5143\u7ec4\u5408\u5e76\u548c\u904d\u5386\uff1a<code>std::tuple_cat</code></p> <pre><code>std::tuple&lt;std::string, double, double, int&gt; t(\"123\", 4.5, 6.7, 8);\nauto new_tuple = std::tuple_cat(std::make_tuple(0.0, 'D', \"null\"), std::move(t));\n\ntemplate &lt;typename T&gt;\nauto tuple_len(T &amp;tpl) {\n    return std::tuple_size&lt;T&gt;::value;\n}\nfor(int i = 0; i != tuple_len(new_tuple); ++i)\n    std::cout &lt;&lt; tuple_index(new_tuple, i) &lt;&lt; std::endl;\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_15","title":"\u56db\u3001\u667a\u80fd\u6307\u9488\u548c\u5185\u5b58","text":"<p>\u667a\u80fd\u6307\u9488\uff1a\u4f7f\u7528\u5f15\u7528\u8ba1\u6570\uff0c\u5bf9\u4e8e\u52a8\u6001\u5206\u914d\u7684\u5bf9\u8c61\uff0c\u8fdb\u884c\u5f15\u7528\u8ba1\u6570\uff0c\u6bcf\u5f53\u589e\u52a0\u4e00\u6b21\u8be5\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u8ba1\u6570\u5c31\u52a0\u4e00\uff0c\u5f53\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570\u4e3a0\u65f6\uff0c\u5c31\u5220\u9664\u6307\u5411\u7684\u5806\u5185\u5b58\u3002\u8fd9\u79cd\u673a\u5236\u79f0\u4e3aRAII</p> <p><code>std::shared_ptr, std::unique_ptr, std::weak_ptr</code>\uff0c\u9700\u8981\u5934\u6587\u4ef6<code>&lt;memory&gt;</code></p>"},{"location":"tech/coding/modernC%2B%2B/#stdshared_ptr","title":"std::shared_ptr","text":"<p>\u5f3a\u5f15\u7528\u6307\u9488\uff0c\u53ef\u4ee5\u8bb0\u5f55\u591a\u4e2aPtr\u5171\u540c\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6d88\u9664\u663e\u5f0f\u7684delete\uff0c\u4e0d\u80fd\u76f4\u63a5new\u3002\u4f46\u662f\u6709\u5185\u5b58\u6cc4\u9732\u7684\u98ce\u9669\uff0c\u8003\u8651\u4e24\u4e2a\u5bf9\u8c61\u91cc\u6709\u4e24\u4e2a\u6307\u9488\u4e92\u76f8\u6307\u5411\u5404\u81ea\u3002</p> <ul> <li><code>get()</code>\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u539f\u59cb\u6307\u9488</li> <li><code>reset()</code>\u65b9\u6cd5\u51cf\u5c11\u4e00\u4e2a\u5f15\u7528\u8ba1\u6570\uff0c<code>use_count()</code>\u67e5\u770b\u4e00\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u8ba1\u6570</li> </ul> <pre><code>int main() {\n    // auto pointer = new int(10); // illegal, no direct assignment\n    // Constructed a std::shared_ptr\n    auto pointer = std::make_shared&lt;int&gt;(10);\n    auto pointer2 = pointer; // \u5f15\u7528\u8ba1\u6570+1\n    auto pointer3 = pointer; // \u5f15\u7528\u8ba1\u6570+1\n    int *p = pointer.get();  // \u8fd9\u6837\u4e0d\u4f1a\u589e\u52a0\u5f15\u7528\u8ba1\u6570\n    std::cout &lt;&lt; \"pointer.use_count() = \" &lt;&lt; pointer.use_count() &lt;&lt; std::endl;   // 3\n    pointer2.reset();\n    std::cout &lt;&lt; \"pointer.use_count() = \" &lt;&lt; pointer.use_count() &lt;&lt; std::endl;   // 2\n    std::cout &lt;&lt; \"pointer2.use_count() = \"\n          &lt;&lt; pointer2.use_count() &lt;&lt; std::endl;           // pointer2 \u5df2 reset; 0\n    std::cout &lt;&lt; *pointer &lt;&lt; std::endl; // 10\n    // The shared_ptr will be destructed before leaving the scope\n    return 0;\n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#stdunique_ptr","title":"std::unique_ptr\uff1a","text":"<p>\u72ec\u5360\u6307\u9488\uff0c\u7981\u6b62\u5176\u4ed6\u667a\u80fd\u6307\u9488\u4e0e\u5176\u5171\u4eab\u4e00\u4e2a\u5bf9\u8c61\uff0c\u4e0d\u53ef\u590d\u5236\uff0c\u4f46\u662f\u53ef\u4ee5\u7528<code>std::move</code>\u8f6c\u79fb\u7ed9\u5176\u4ed6\u6307\u9488</p> <pre><code>std::unique_ptr&lt;int&gt; pointer = std::make_unique&lt;int&gt;(10); //after C++14\nstd::unique_ptr&lt;int&gt; pointer2 = pointer; // \u975e\u6cd5\n\ntemplate&lt;typename T, typename ...Args&gt;\nstd::unique_ptr&lt;T&gt; make_unique( Args&amp;&amp; ...args ) {\n  return std::unique_ptr&lt;T&gt;( new T( std::forward&lt;Args&gt;(args)... ) );\n}\n\nstd::unique_ptr&lt;Foo&gt; p1(std::make_unique&lt;Foo&gt;());\nstd::unique_ptr&lt;Foo&gt; p2(std::move(p1));\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#stdweak_ptr","title":"std::weak_ptr\uff1a","text":"<p>\u5f31\u5f15\u7528\u6307\u9488\uff0c\u5f31\u5f15\u7528\u4e0d\u4f1a\u5f15\u8d77\u5f15\u7528\u8ba1\u6570\u589e\u52a0\u3002\u4f46\u662f\u4e5f\u4e0d\u80fd\u5bf9\u8d44\u6e90\u8fdb\u884c\u64cd\u4f5c</p> <p><code>std::weak_ptr</code> \u6ca1\u6709 <code>*</code> \u8fd0\u7b97\u7b26\u548c <code>-&gt;</code> \u8fd0\u7b97\u7b26\uff0c\u6240\u4ee5\u4e0d\u80fd\u591f\u5bf9\u8d44\u6e90\u8fdb\u884c\u64cd\u4f5c</p> <p>\u5b83\u53ef\u4ee5\u7528\u4e8e\u68c0\u67e5 <code>std::shared_ptr</code> \u662f\u5426\u5b58\u5728\uff0c\u5176 <code>expired()</code> \u65b9\u6cd5\u80fd\u5728\u8d44\u6e90\u672a\u88ab\u91ca\u653e\u65f6\uff0c\u4f1a\u8fd4\u56de <code>false</code>\uff0c\u5426\u5219\u8fd4\u56de <code>true</code>\uff1b</p> <p>\u9664\u6b64\u4e4b\u5916\uff0c\u5b83\u4e5f\u53ef\u4ee5\u7528\u4e8e\u83b7\u53d6\u6307\u5411\u539f\u59cb\u5bf9\u8c61\u7684 <code>std::shared_ptr</code> \u6307\u9488\uff0c\u5176 <code>lock()</code> \u65b9\u6cd5\u5728\u539f\u59cb\u5bf9\u8c61\u672a\u88ab\u91ca\u653e\u65f6\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u539f\u59cb\u5bf9\u8c61\u7684 <code>std::shared_ptr</code> \u6307\u9488\uff0c\u8fdb\u800c\u8bbf\u95ee\u539f\u59cb\u5bf9\u8c61\u7684\u8d44\u6e90\uff0c\u5426\u5219\u8fd4\u56de<code>nullptr</code>\u3002</p>"},{"location":"tech/coding/modernC%2B%2B/#_16","title":"\u4e94\u3001\u6b63\u5219\u8868\u8fbe\u5f0f","text":""},{"location":"tech/coding/modernC%2B%2B/#_17","title":"\u6b63\u5219\u8868\u8fbe\u5f0f","text":"<p>\u5206\u4e3a\u7279\u6b8a\u5b57\u7b26\u548c\u9650\u5b9a\u7b26\uff0c\u5c06\u4ed6\u4eec\u7ec4\u5408\u5728\u4e00\u8d77\u5c31\u662f\u6b63\u5219\u3002\u4e2d\u62ec\u53f7\u8868\u8fbe\u5f0f\u5c31\u662f\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53</p> <p></p> <p></p>"},{"location":"tech/coding/modernC%2B%2B/#stdregex","title":"std::regex","text":"<p>\u64cd\u4f5c<code>std::string</code>\u5bf9\u8c61\uff0c\u5229\u7528\u6a21\u5f0f<code>std::regex</code>\uff0c\u901a\u8fc7<code>std::regex_match</code>\u8fdb\u884c\u5339\u914d\uff0c\u4ece\u800c\u5dee\u751f<code>std::smatch</code></p> <ul> <li><code>std::smatch</code>\u5b58\u653e\u4e86\u5339\u914d\u7684\u7ed3\u679c</li> </ul> <pre><code>std::string fnames[] = {\"foo.txt\", \"bar.txt\", \"test\", \"a0.txt\", \"AAA.txt\"};\n// \u4e3a\u4f7f \\. \u4f5c\u4e3a\u6b63\u5219\u8868\u8fbe\u5f0f\u4f20\u9012\u8fdb\u53bb\u751f\u6548\uff0c\u9700\u8981\u5bf9 \\ \u8fdb\u884c\u4e8c\u6b21\u8f6c\u4e49\uff0c\u4ece\u800c\u6709 \\\\.\nstd::regex txt_regex(\"[a-z]+\\\\.txt\");\nfor (const auto &amp;fname: fnames)\n    std::cout &lt;&lt; fname &lt;&lt; \": \" &lt;&lt; std::regex_match(fname, txt_regex) &lt;&lt; std::endl;\n}\n\nstd::regex base_regex(\"([a-z]+)\\\\.txt\");\nstd::smatch base_match;\nfor(const auto &amp;fname: fnames) {\n    if (std::regex_match(fname, base_match, base_regex)) {\n        // std::smatch \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5339\u914d\u6574\u4e2a\u5b57\u7b26\u4e32\n        // std::smatch \u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20\u5339\u914d\u4e86\u7b2c\u4e00\u4e2a\u62ec\u53f7\u8868\u8fbe\u5f0f\n        if (base_match.size() == 2) {\n            std::string base = base_match[1].str();\n            std::cout &lt;&lt; \"sub-match[0]: \" &lt;&lt; base_match[0].str() &lt;&lt; std::endl;\n            std::cout &lt;&lt; fname &lt;&lt; \" sub-match[1]: \" &lt;&lt; base &lt;&lt; std::endl;\n        }\n    }\n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_18","title":"\u516d\u3001\u5e76\u884c\u4e0e\u5e76\u53d1","text":""},{"location":"tech/coding/modernC%2B%2B/#stdthread","title":"std::thread","text":"<p>\u57fa\u4e8e<code>std::thread</code>\u7684\u4e00\u5957api\uff0c\u793a\u4f8b\u5982\u4e0b</p> <ul> <li><code>get_id()</code>\u83b7\u53d6\u6240\u521b\u5efa\u7ebf\u7a0b\u7684\u7ebf\u7a0bID\uff0c<code>join()</code>\u6765\u7b49\u5f85\u4e00\u4e2a\u7ebf\u7a0b\u7ed3\u675f</li> </ul> <pre><code>#include&lt;thread&gt;\n\nint main() {\n    std::thread t([](){\n        std::cout &lt;&lt; \"hello world.\" &lt;&lt; std::endl;\n    });\n    t.join();\n    return 0;\n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#stdmutex","title":"std::mutex","text":"<ul> <li><code>lock()</code>\u4e0a\u9501\uff0c<code>unlock()</code>\u89e3\u9501\uff0c\u8c03\u7528<code>lock()</code>\u540e\u9700\u8981\u5728\u6bcf\u4e2a\u4e34\u754c\u533a\u7684\u51fa\u53e3\u5904\u8c03\u7528<code>unlock()</code></li> <li>RAII\u8bed\u6cd5\uff0c\u6a21\u677f\u7c7b<code>std::lock_guard</code>\uff0c\u4e34\u754c\u533a\u7684\u4e92\u65a5\u91cf\u7684\u521b\u5efa\u53ea\u9700\u8981\u5728\u4f5c\u7528\u57df\u7684\u5f00\u59cb\u90e8\u5206</li> </ul> <pre><code>#include&lt;mutex&gt;\n#include&lt;thread&gt;\n\nint v = 1;\n\nvoid critical_section(int change_v) {\n    static std::mutex mtx;\n    std::lock_guard&lt;std::mutex&gt; lock(mtx);\n\n    // \u6267\u884c\u7ade\u4e89\u64cd\u4f5c\n    v = change_v;\n\n    // \u79bb\u5f00\u6b64\u4f5c\u7528\u57df\u540e mtx \u4f1a\u88ab\u91ca\u653e\n}\n\nint main(){\n    std::thread t1(critical_section, 3), t2(critical_section, 3);\n    t1.join();\n    t2.join();\n}\n</code></pre> <ul> <li><code>std::unique_lock</code>\uff1a\u4ee5\u72ec\u5360\u6240\u6709\u6743\u7684\u65b9\u5f0f\u7ba1\u7406mutex\u5bf9\u8c61\u4e0a\u7684\u4e0a\u9501\u548c\u89e3\u9501\u7684\u64cd\u4f5c\uff0c\u548c<code>std::lock_guard</code>\u76f8\u6bd4\uff0c\u53ef\u4ee5\u5728\u58f0\u660e\u540e\u4efb\u610f\u4f4d\u7f6e\u663e\u793a\u8c03\u7528<code>lock</code>\u548c<code>unlock</code>\uff0c\u4ece\u800c\u63a7\u5236\u9501\u7684\u4f5c\u7528\u8303\u56f4\u3002<code>std::condition_variable::wait</code>\u5fc5\u987b\u8981\u7528<code>std::unique_lock</code>\u4f5c\u4e3a\u53c2\u6570</li> </ul> <pre><code>void critical_section(int change_v){\n    static std::mutex mtx;\n    std::unique_lock&lt;std::mutex&gt; lock(mtx);\n    v = change_v;\n    std::cout &lt;&lt; v &lt;&lt; std::endl;\n    // \u5c06\u9501\u8fdb\u884c\u91ca\u653e\n    lock.unlock();\n\n    // \u5728\u6b64\u671f\u95f4\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u62a2\u593a v \u7684\u6301\u6709\u6743\n\n    // \u5f00\u59cb\u53e6\u4e00\u7ec4\u7ade\u4e89\u64cd\u4f5c\uff0c\u518d\u6b21\u52a0\u9501\n    lock.lock();\n    v += 1;\n    std::cout &lt;&lt; v &lt;&lt; std::endl;      \n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#stdfuture","title":"std::future","text":"<p>\u7528\u4e8e\u83b7\u53d6\u5f02\u6b65\u4efb\u52a1\u7684\u7ed3\u679c\u3002</p> <ul> <li><code>std::packaged_task</code>\uff1a\u7528\u4e8e\u5c01\u88c5\u4efb\u4f55\u53ef\u4ee5\u8c03\u7528\u7684\u76ee\u6807\uff0c\u4ece\u800c\u7528\u4e8e\u5b9e\u73b0\u5f02\u6b65\u7684\u8c03\u7528</li> <li>\u5c01\u88c5\u597d\u8c03\u7528\u76ee\u6807\u540e\uff0c<code>get_future()</code>\u53ef\u4ee5\u83b7\u5f97\u4e00\u4e2a<code>std::future()</code>\u5bf9\u8c61\u4ee5\u4fbf\u7528\u4e8e\u5b9e\u65bd\u7ebf\u7a0b\u540c\u6b65</li> </ul> <pre><code>#include&lt;future&gt;\n#include&lt;thread&gt;\n\nint main(){\n    std::packaged_task&lt;int()&gt; task([]({return 7;}));\n    std::future&lt;int&gt; result = task.get_future(); // \u5728\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u6267\u884c task\n    std::thread(std::move(task)).detach();\n    std::cout &lt;&lt; \"waiting...\";\n    result.wait(); // \u5728\u6b64\u8bbe\u7f6e\u5c4f\u969c\uff0c\u963b\u585e\u5230\u671f\u7269\u7684\u5b8c\u6210\n    std::cout &lt;&lt; \"done!\" &lt;&lt; std:: endl &lt;&lt; \"future result is \"\n              &lt;&lt; result.get() &lt;&lt; std::endl;\n}\n</code></pre> <p><code>std::condition_variable</code></p> <ul> <li>\u6761\u4ef6\u53d8\u91cf\u7528\u4e8e\u89e3\u51b3\u6b7b\u9501</li> <li><code>notify_one()</code>\u7528\u4e8e\u5524\u9192\u4e00\u4e2a\u7ebf\u7a0b\uff0c<code>notify_all()</code>\u901a\u77e5\u6240\u6709\u7ebf\u7a0b</li> </ul> <pre><code>#include &lt;condition_variable&gt;\n#include &lt;chrono&gt;\nint main(){\n    std::queue&lt;int&gt; produced_nums;\n    std::mutex mtx;\n    std::condition_variable cv;\n    bool notified = false;\n\n    auto producer = [&amp;](){\n        for(int i = 0; ;i++){\n            std::this_thread::sleep_for(std::chrono::milliseconds(900));\n            std::unique_lock&lt;std::mutex&gt; lock(mtx);\n            std::cout&lt;&lt; \"producing \"&lt;&lt;i&lt;&lt;std::endl;\n            produced_nums.push(i);\n            notified = true;\n            cv.notified_all();\n        }\n    };\n\n    auto consumer = [&amp;](){\n        while(true){\n             std::unique_lock&lt;std::mutex&gt; lock(mtx);\n            while(!notified){ // \u907f\u514d\u865a\u5047\u5524\u9192\n                cv.wait(lock);\n            }\n            // \u77ed\u6682\u53d6\u6d88\u9501\uff0c\u4f7f\u5f97\u751f\u4ea7\u8005\u6709\u673a\u4f1a\u5728\u6d88\u8d39\u8005\u6d88\u8d39\u7a7a\u524d\u7ee7\u7eed\u751f\u4ea7\n            lock.unlock();\n            std::this_thread::sleep_for(std::chrono::milliseconds(1000));\n            lock.lock();\n            while (!produced_nums.empty()) {\n                std::cout &lt;&lt; \"consuming \" &lt;&lt; produced_nums.front() &lt;&lt; std::endl;\n                produced_nums.pop();\n            }\n            notified = false;                    \n        }\n    }\n\n    std::thread p(producer);\n    std::thread cs[2];\n    for (int i = 0; i &lt; 2; ++i) {\n        cs[i] = std::thread(consumer);\n    }\n    p.join();\n    for (int i = 0; i &lt; 2; ++i) {\n        cs[i].join();\n    }\n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_19","title":"\u539f\u5b50\u64cd\u4f5c\u548c\u5185\u5b58\u6a21\u578b","text":"<p>\u4ee5guide\u4e2d\u7684\u4f8b\u5b50\u4e3e\u4f8b\uff1a\u7531\u4e8ea\u548cflag\u4e24\u4e2a\u53d8\u91cf\u5728\u5e76\u884c\u7684\u7ebf\u7a0b\u4e2d\u88ab\u8bfb\u5199\uff0c\u51fa\u73b0\u4e86\u7ade\u4e89\uff0c\u4ee5\u53ca\u7f16\u8bd1\u5668\u5bf9\u6307\u4ee4\u91cd\u6392\u7684\u5f71\u54cd\u9020\u6210b\u7684\u6700\u7ec8\u7ed3\u679c\u4e0d\u786e\u5b9a</p> <pre><code>int main() {\n    int a = 0;\n    int flag = 0;\n\n    std::thread t1([&amp;]() {\n        while (flag != 1);\n\n        int b = a;\n        std::cout &lt;&lt; \"b = \" &lt;&lt; b &lt;&lt; std::endl;\n    });\n\n    std::thread t2([&amp;]() {\n        a = 5;\n        flag = 1;\n    });\n\n    t1.join();\n    t2.join();\n    return 0;\n}\n</code></pre> <p><code>std::mutex()</code>\u592a\u5f3a\u4e86\uff0c\u5bf9\u4e8e\u90a3\u4e9b\u6ca1\u6709\u4e2d\u95f4\u72b6\u6001\u7684\u53d8\u91cf\u6765\u8bf4\uff0c\u53ef\u4ee5\u4f7f\u7528<code>std::atomic</code>\u6765\u9488\u5bf9\u5171\u4eab\u53d8\u91cf\u7684\u8bfb\u5199\uff0c\u5c06\u539f\u5b50\u7c7b\u578b\u7684\u8bfb\u5199\u4ece\u4e00\u7ec4CPU\u6307\u4ee4\u6700\u5c0f\u5316\u5230\u5355\u4e2aCPU\u6307\u4ee4</p> <ul> <li><code>fetch_add, fetchsub</code>\u5b9e\u73b0\u57fa\u672c\u7684\u52a0\u51cf\uff0c\u57fa\u672c\u7c7b\u578b\u5df2\u7ecf\u91cd\u8f7d\u8fdb\u4e86\u8fd0\u7b97\u7b26</li> <li><code>std::atomic&lt;T&gt;::is_lock_free</code>\u68c0\u67e5\u67d0\u4e2a\u539f\u5b50\u7c7b\u578b\u662f\u5426\u652f\u6301\u539f\u5b50\u64cd\u4f5c</li> </ul> <pre><code>std::atomic&lt;int&gt; count = {0};\nstd::thread t1([](){\n    count.fetch_add(1);\n});\nstd::thread t2([](){\n    count++;        // \u7b49\u4ef7\u4e8e fetch_add\n    count += 1;     // \u7b49\u4ef7\u4e8e fetch_add\n});\n\nstruct A{float x; int y; long long z;};\n\nstd::atomic&lt;A&gt; a;\nstd::cout &lt;&lt; std::boolalpha &lt;&lt; a.is_lock_free() &lt;&lt; std::endl;\n</code></pre> <ul> <li> <p>\u4e00\u81f4\u6027\u6a21\u578b\uff1a</p> <ul> <li>\u7ebf\u6027\u4e00\u81f4\u6027\uff1a\u8981\u6c42\u4efb\u4f55\u4e00\u6b21\u8bfb\u64cd\u4f5c\u90fd\u80fd\u8bfb\u5230\u67d0\u4e2a\u6570\u636e\u7684\u6700\u8fd1\u4e00\u6b21\u5199\u7684\u6570\u636e\uff0c\u5e76\u4e14\u6240\u6709\u7ebf\u7a0b\u7684\u64cd\u4f5c\u987a\u5e8f\u4e0e\u5168\u5c40\u65f6\u949f\u4e0b\u7684\u987a\u5e8f\u662f\u4e00\u81f4\u7684</li> <li>\u987a\u5e8f\u4e00\u81f4\u6027\uff1a\u8981\u6c42\u4efb\u4f55\u4e00\u6b21\u8bfb\u64cd\u4f5c\u90fd\u80fd\u8bfb\u5230\u67d0\u4e2a\u6570\u636e\u7684\u6700\u8fd1\u4e00\u6b21\u5199\u7684\u6570\u636e\u3002</li> <li>\u56e0\u679c\u4e00\u81f4\u6027\uff1a\u53ea\u9700\u8981\u6709\u56e0\u679c\u5173\u7cfb\u7684\u64cd\u4f5c\u987a\u5e8f\u5f97\u5230\u4fdd\u969c</li> <li>\u6700\u7ec8\u4e00\u81f4\u6027\uff1a\u4fdd\u969c\u67d0\u4e2a\u64cd\u4f5c\u5728\u672a\u6765\u7684\u67d0\u4e2a\u65f6\u95f4\u8282\u70b9\u4e0a\u4f1a\u88ab\u89c2\u5bdf\u5230\uff0c\u4f46\u5e76\u672a\u8981\u6c42\u88ab\u89c2\u5bdf\u5230\u7684\u65f6\u95f4</li> </ul> </li> </ul> <ul> <li> <p>\u5185\u5b58\u6a21\u578b\uff1aC++\u4e3a\u539f\u5b50\u64cd\u4f5c\u5b9a\u4e49\u7684\u516d\u79cd\u5185\u5b58\u987a\u5e8f<code>std::memory_order</code>\uff0c\u53ef\u4ee5\u4f53\u73b0\u56db\u79cd\u540c\u6b65\u6a21\u578b</p> <ul> <li><code>std::memory_order_relaxed</code>\uff0c\u5355\u4e2a\u7ebf\u7a0b\u5185\u7684\u539f\u5b50\u64cd\u4f5c\u90fd\u662f\u987a\u5e8f\u6267\u884c\u7684\uff0c\u4e0d\u5141\u8bb8\u6307\u4ee4\u91cd\u6392\uff0c\u4f46\u4e0d\u540c\u7ebf\u7a0b\u95f4\u539f\u5b50\u64cd\u4f5c\u7684\u987a\u5e8f\u662f\u4efb\u610f\u7684</li> <li><code>std::memory_order_consume</code>\uff0c\u9650\u5236\u8fdb\u7a0b\u95f4\u7684\u64cd\u4f5c\u987a\u5e8f</li> </ul> <pre><code>// \u521d\u59cb\u5316\u4e3a nullptr \u9632\u6b62 consumer \u7ebf\u7a0b\u4ece\u91ce\u6307\u9488\u8fdb\u884c\u8bfb\u53d6\nstd::atomic&lt;int*&gt; ptr(nullptr);\nint v;\nstd::thread producer([&amp;]() {\n    int* p = new int(42);\n    v = 1024;\n    ptr.store(p, std::memory_order_release);\n});\nstd::thread consumer([&amp;]() {\n    int* p;\n    while(!(p = ptr.load(std::memory_order_consume)));\n\n    std::cout &lt;&lt; \"p: \" &lt;&lt; *p &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"v: \" &lt;&lt; v &lt;&lt; std::endl;\n});\nproducer.join();\nconsumer.join();\n</code></pre> <ul> <li><code>std::memory_order_release</code>\u548c<code>std::memory_order_acquire</code>\uff1a\u8fdb\u4e00\u6b65\u52a0\u7d27\u5bf9\u4e0d\u540c\u7ebf\u7a0b\u95f4\u539f\u5b50\u64cd\u4f5c\u7684\u987a\u5e8f\u7684\u9650\u5236\u3002release\u4e4b\u524d\u7684\u6240\u6709\u5199\u64cd\u4f5c\uff0c\u5bf9\u5176\u4ed6\u7ebf\u7a0b\u7684\u4efb\u4f55acquire\u64cd\u4f5c\u90fd\u662f\u53ef\u89c1\u7684\u3002</li> </ul> <p><code>std::memory_order_release</code> \u786e\u4fdd\u4e86\u5b83\u4e4b\u524d\u7684\u5199\u64cd\u4f5c\u4e0d\u4f1a\u53d1\u751f\u5728\u91ca\u653e\u64cd\u4f5c\u4e4b\u540e\uff0c\u662f\u4e00\u4e2a\u5411\u540e\u7684\u5c4f\u969c\uff08backward\uff09\uff0c\u800c <code>std::memory_order_acquire</code> \u786e\u4fdd\u4e86\u5b83\u4e4b\u524d\u7684\u5199\u884c\u4e3a\u4e0d\u4f1a\u53d1\u751f\u5728\u8be5\u83b7\u53d6\u64cd\u4f5c\u4e4b\u540e\uff0c\u662f\u4e00\u4e2a\u5411\u524d\u7684\u5c4f\u969c\uff08forward\uff09\u3002\u5bf9\u4e8e\u9009\u9879 <code>std::memory_order_acq_rel</code> \u800c\u8a00\uff0c\u5219\u7ed3\u5408\u4e86\u8fd9\u4e24\u8005\u7684\u7279\u70b9\uff0c\u552f\u4e00\u786e\u5b9a\u4e86\u4e00\u4e2a\u5185\u5b58\u5c4f\u969c\uff0c\u4f7f\u5f97\u5f53\u524d\u7ebf\u7a0b\u5bf9\u5185\u5b58\u7684\u8bfb\u5199\u4e0d\u4f1a\u88ab\u91cd\u6392\u5e76\u8d8a\u8fc7\u6b64\u64cd\u4f5c\u7684\u524d\u540e</p> <p><code>compare_exchange_strong(compare-and-swap)</code>:\u6bd4\u8f83\u4ea4\u6362\u539f\u8bed</p> <pre><code>std::vector&lt;int&gt; v;\nstd::atomic&lt;int&gt; flag = {0};\nstd::thread release([&amp;]() {\n    v.push_back(42);\n    flag.store(1, std::memory_order_release);\n});\nstd::thread acqrel([&amp;]() {\n    int expected = 1; // must before compare_exchange_strong\n    while(!flag.compare_exchange_strong(expected, 2, std::memory_order_acq_rel))\n        expected = 1; // must after compare_exchange_strong\n    // flag has changed to 2\n});\nstd::thread acquire([&amp;]() {\n    while(flag.load(std::memory_order_acquire) &lt; 2);\n\n    std::cout &lt;&lt; v.at(0) &lt;&lt; std::endl; // must be 42\n});\nrelease.join();\nacqrel.join();\nacquire.join();\n</code></pre> <ul> <li><code>std::memory_order_seq_cst</code>\uff1a\u539f\u5b50\u64cd\u4f5c\u6ee1\u8db3\u987a\u5e8f\u4e00\u81f4\u6027\uff0c\u635f\u8017\u6027\u80fd</li> </ul> </li> </ul>"},{"location":"tech/coding/modernC%2B%2B/#_20","title":"\u4e03\u3001\u5176\u4ed6\u6742\u9879","text":""},{"location":"tech/coding/modernC%2B%2B/#stdchrono","title":"std::chrono","text":"<p>\u4e00\u4e2atime library\uff0c\u7528\u4e8e\u5904\u7406\u65f6\u95f4\u7684\u6a21\u677f\u5e93\uff0c\u5305\u62ec<code>duration</code>\u3001<code>time_point</code>\u3001<code>clock</code>\u4e09\u4e2a\u6982\u5ff5</p> <p><code>duration</code>:  \u8868\u793a\u4e00\u6bb5\u65f6\u95f4</p> <ul> <li><code>Rep</code>\u8868\u793aPeriod\u7684\u6570\u91cf\uff0c<code>Period</code>\u7528\u6765\u8868\u793a\u7528\u79d2\u8868\u793a\u7684\u65f6\u95f4\u5355\u4f4d</li> </ul> <ul> <li><code>template &lt;intmax_t N, intmax_t D = 1&gt; class ratio</code>\uff1aN\u662f\u5206\u5b50\uff0cD\u662f\u5206\u6bcd</li> <li><code>duration</code>\u4e4b\u95f4\u7684\u8f6c\u6362\u4f7f\u7528<code>std::chrono::duration_cast&lt;type&gt;(variable)</code>,\u6210\u5458\u51fd\u6570<code>count()</code>\u8fd4\u56deRep\u7c7b\u578b\u7684Period\u6570\u91cf</li> </ul> <pre><code>template &lt;class Rep, class Period = ratio&lt;1&gt; &gt; class duration;\nratio&lt;3600, 1&gt; //\u4ee3\u88681 hour\n</code></pre> <pre><code>#include&lt;chrono&gt;\n#include&lt;ratio&gt;\n\nint main(){\n    typedef std::chrono::duration&lt;int&gt; seconds_type;\n    typedef std::chrono::duration&lt;int,std::milli&gt; milliseconds_type;\n    typedef std::chrono::duration&lt;int,std::ratio&lt;60*60&gt;&gt; hours_type;\n\n    hours_type h_oneday (24);                  // 24h\n    seconds_type s_oneday (60*60*24);\n    seconds_type s_onehour (60*60); \n    hours_type h_onehour (std::chrono::duration_cast&lt;hours_type&gt;(s_onehour)); //\u7c7b\u578b\u8f6c\u6362\n    std::milliseconds foo(1000);   //1s\n    foo *= 60;\n\n    std::cout &lt;&lt; foo.count() * milliseconds::period::num / milliseconds::period::den; //60000 * 1 / 1000\u5373Ratio\u7684\u5206\u5b50\u4e0e\u5206\u6bcd\n    std::cout &lt;&lt; \" seconds.\\n\"; \n\n}\n</code></pre> <p><code>Time point</code>\uff1a\u8868\u793a\u4e00\u4e2a\u5177\u4f53\u65f6\u95f4</p> <ul> <li><code>template &lt;class Clock, class Duration = typename Clock::duration&gt;  class time_point;</code></li> <li><code>time_from_eproch()</code>\u7528\u6765\u83b7\u5f971970\u5e741\u67081\u65e5\u5230time_point\u65f6\u95f4\u7ecf\u8fc7\u7684duration</li> </ul> <pre><code>using namespace std::chrono;\n\ntime_point &lt;system_clock,duration&lt;int&gt;&gt; tp_seconds (duration&lt;int&gt;(1));\n\nsystem_clock::time_point tp (tp_seconds);\n\nstd::cout &lt;&lt; \"1 second since system_clock epoch = \";\nstd::cout &lt;&lt; tp.time_since_epoch().count();\nstd::cout &lt;&lt; \" system_clock periods.\" &lt;&lt; std::endl;\n\n// display time_point:\nstd::time_t tt = system_clock::to_time_t(tp);\nstd::cout &lt;&lt; \"time_point tp is: \" &lt;&lt; ctime(&amp;tt);\n</code></pre> <p><code>Clocks</code>: \u8868\u793a\u5f53\u65f6\u949f\uff0c\u6700\u5e38\u7528</p> <ul> <li><code>std::chrono::system_clock</code>\u8868\u793a\u5f53\u524d\u7684\u7cfb\u7edf\u65f6\u949f\uff0c\u7cfb\u7edf\u4e2d\u8fd0\u884c\u7684\u6240\u6709\u8fdb\u7a0b\u4f7f\u7528now()\u5f97\u5230\u7684\u65f6\u95f4\u662f\u4e00\u81f4\u7684</li> </ul> <ul> <li><code>now()</code>\u3001<code>to_time_t()</code>\u3001<code>from_time_t()</code></li> </ul> <pre><code>using std::chrono::system_clock;\n\nstd::chrono::duration&lt;int,std::ratio&lt;60*60*24&gt; &gt; one_day (1);\nsystem_clock::time_point today = system_clock::now()\nsystem_clock::time_point tomorrow = today + one_day;\n\nstd::time_t tt;\n\ntt = system_clock::to_time_t ( today );\nstd::cout &lt;&lt; \"today is: \" &lt;&lt; ctime(&amp;tt);    \n</code></pre> <ul> <li><code>std::chrono::steady_clock</code>: \u8868\u793a\u7a33\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\uff0c\u5373\u4e2d\u9014\u4fee\u6539\u4e86\u7cfb\u7edf\u65f6\u95f4\uff0c\u4e5f\u4e0d\u5f71\u54cd<code>now()</code>\u7684\u7ed3\u679c</li> </ul> <pre><code>using namespace std::chrono;\n\nsteady_clock::time_point t1 = steady_clock::now();\n\nstd::cout &lt;&lt; \"printing out 1000 stars...\\n\";\nfor (int i=0; i&lt;1000; ++i) std::cout &lt;&lt; \"*\";\nstd::cout &lt;&lt; std::endl;\n\nsteady_clock::time_point t2 = steady_clock::now();\n\nduration&lt;double&gt; time_span = duration_cast&lt;duration&lt;double&gt;&gt;(t2 - t1);\n\nstd::cout &lt;&lt; \"It took me \" &lt;&lt; time_span.count() &lt;&lt; \" seconds.\";\nstd::cout &lt;&lt; std::endl;\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#stdfilesystem","title":"std::filesystem","text":"<p>\u65b9\u4fbf\u7684\uff0c\u8de8\u5e73\u53f0\u7684\u4e0e\u6587\u4ef6\u7cfb\u7edf\u4ea4\u4e92</p> <p>\u6838\u5fc3\u7279\u6027\uff1a</p> <ul> <li>path object\uff1a\u8def\u5f84\u5bf9\u8c61</li> <li>directory_entry\uff1a\u6587\u4ef6\u5165\u53e3</li> <li>directory iterators\uff1a\u83b7\u53d6\u6587\u4ef6\u7cfb\u7edf\u76ee\u5f55\u4e2d\u6587\u4ef6\u7684\u8fed\u4ee3\u5668\u5bb9\u5668\uff0c\u5143\u7d20\u4e3a<code>directory_entry</code>\u5bf9\u8c61</li> <li>file status: \u7528\u4e8e\u83b7\u53d6\u548c\u4fee\u6539\u6587\u4ef6\uff08\u6216\u76ee\u5f55\uff09\u7684\u5c5e\u6027</li> <li>supportive functions<ul> <li>getting information about the path</li> <li>files manipulation: copy, move, create, symlinks</li> <li>last write time</li> <li>permissions</li> <li>space/filesize</li> </ul> </li> </ul> <p>\u4f7f\u7528\u5b9e\u4f8b\uff1a</p> <ul> <li>\u68c0\u67e5\u8def\u5f84\u5b58\u5728\uff0c\u6839\u8def\u5f84\u540d\uff0c\u6839\u76ee\u5f55\u8def\u5f84\uff0c\u4e0e\u6839\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84\uff0c\u5177\u4f53\u6587\u4ef6\u7684\u7236\u76ee\u5f55\u8def\u5f84\u3001\u6587\u4ef6\u540d\u3001\u6587\u4ef6\u540d\u7684stem\u548c\u6269\u5c55\u540d</li> </ul> <pre><code>namespace fs = std::experimental::filesystem\n\nfs::path Path(\"\"C:\\\\Windows\\\\system.ini\"\");\ncout &lt;&lt; \"exists() = \" &lt;&lt; fs::exists(pathToShow) &lt;&lt; \"\\n\"\n     &lt;&lt; \"root_name() = \" &lt;&lt; pathToShow.root_name() &lt;&lt; \"\\n\"\n     &lt;&lt; \"root_path() = \" &lt;&lt; pathToShow.root_path() &lt;&lt; \"\\n\"\n     &lt;&lt; \"relative_path() = \" &lt;&lt; pathToShow.relative_path() &lt;&lt; \"\\n\"\n     &lt;&lt; \"parent_path() = \" &lt;&lt; pathToShow.parent_path() &lt;&lt; \"\\n\"\n     &lt;&lt; \"filename() = \" &lt;&lt; pathToShow.filename() &lt;&lt; \"\\n\"\n     &lt;&lt; \"stem() = \" &lt;&lt; pathToShow.stem() &lt;&lt; \"\\n\"\n     &lt;&lt; \"extension() = \" &lt;&lt; pathToShow.extension() &lt;&lt; \"\\n\";\n</code></pre> <ul> <li>\u904d\u5386\u4e00\u4e2aPath\u7684\u6bcf\u4e2a\u90e8\u5206\uff1a</li> </ul> <pre><code>int i = 0;\nfor (const auto&amp; part : Path)\n    cout &lt;&lt; \"path part: \" &lt;&lt; i++ &lt;&lt; \" = \" &lt;&lt; part &lt;&lt; \"\\n\";\n</code></pre> <ul> <li>\u6dfb\u52a0Path\u5b57\u7b26\u4e32\uff1a</li> </ul> <pre><code>fs::path p1(\"C:\\\\temp\");\np1 /= \"user\"; //\u7b49\u6548\u4e8ep1 += \"\\\\user\", \u4f1a\u4ea7\u751fC:\\\\temp\\\\user\n</code></pre> <ul> <li>\u83b7\u53d6\u6587\u4ef6\u5927\u5c0f\uff1a<ul> <li>\u68c0\u67e5\u4e86\u8fb9\u754c\u503c\uff0c<code>static_cast&lt;uintmax_t&gt;(-1)</code>\u662f\u6700\u5927\u53ef\u80fd\u6574\u6570\u503c\u7684\u65e0\u7b26\u53f7\u6574\u6570\u3002</li> </ul> </li> </ul> <pre><code>uintmax_t ComputeFileSize(const fs:path&amp; Path){\n    if(fs::exists(Path) &amp;&amp; fs::is_regular_file(Path)){\n            auto err = std::error_code();\n            auto filesize = fs::file_size(Path, err);\n            if(filesize != static_cast&lt;uintmax_t&gt;(-1)){\n                return filesize;\n            }\n    }\n    return static_cast&lt;uintmax_t&gt;(-1);\n}\n</code></pre> <ul> <li>\u83b7\u53d6\u6700\u540e\u4fee\u6539\u65f6\u95f4\uff1a<ul> <li><code>std::localtime()</code> \u51fd\u6570\u5c06 <code>time_t</code> \u7c7b\u578b\u7684\u65f6\u95f4\u8f6c\u6362\u4e3a\u672c\u5730\u65f6\u95f4\u7684\u7ed3\u6784\u4f53\u8868\u793a\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u8be5\u7ed3\u6784\u4f53\u7684\u6307\u9488\u3002</li> <li><code>std::asctime()</code> \u51fd\u6570\u5c06\u8be5\u7ed3\u6784\u4f53\u6307\u9488\u4f5c\u4e3a\u53c2\u6570\uff0c\u5c06\u5176\u683c\u5f0f\u5316\u4e3a\u5b57\u7b26\u4e32\u5f62\u5f0f</li> </ul> </li> </ul> <pre><code>auto timeEntry = fs::last_write_time(entry);\ntime_t cftime = chrono::system_clock::to_time_t(timeEntry);\ncout &lt;&lt; std::asctime(std::localtime(&amp;cftime));\n</code></pre> <ul> <li>\u904d\u5386\u76ee\u5f55\uff1a</li> </ul> <pre><code>void DisplayDirTree(const fs::path&amp; pathToShow, int level)\n{\n    if (fs::exists(pathToShow) &amp;&amp; fs::is_directory(pathToShow))\n    {\n        auto lead = std::string(level * 3, ' ');\n        for (const auto&amp; entry : fs::directory_iterator(pathToShow))\n        {\n            auto filename = entry.path().filename();\n            if (fs::is_directory(entry.status()))\n            {\n                cout &lt;&lt; lead &lt;&lt; \"[+] \" &lt;&lt; filename &lt;&lt; \"\\n\";\n                DisplayDirTree(entry, level + 1);\n                cout &lt;&lt; \"\\n\";\n            }\n            else if (fs::is_regular_file(entry.status()))\n                DisplayFileInfo(entry, lead, filename);\n            else\n                cout &lt;&lt; lead &lt;&lt; \" [?]\" &lt;&lt; filename &lt;&lt; \"\\n\";\n        }\n    }\n}\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#noexcept","title":"noexcept","text":"<ul> <li>\u7528\u4e8e\u4fee\u9970\u51fd\u6570\u4e0d\u53ef\u80fd\u629b\u51fa\u5f02\u5e38\uff0c\u5982\u679c\u629b\u51fa\u5f02\u5e38\uff0c\u7f16\u8bd1\u5668\u4f1a\u4f7f\u7528<code>std::terminate()</code>\u6765\u7ec8\u6b62\u7a0b\u5e8f\u8fd0\u884c</li> <li>\u4fee\u9970\u8868\u8fbe\u5f0f\uff0c\u8868\u8fbe\u5f0f\u65e0\u5f02\u5e38\u65f6\u8fd4\u56de<code>true</code></li> <li>\u5c01\u9501\u5f02\u5e38\u6269\u6563\uff0c\u5982\u679c\u5185\u90e8\u4ea7\u751f\u5f02\u5e38\uff0c\u5916\u90e8\u4e5f\u4e0d\u4f1a\u89e6\u53d1</li> <li>\u53ef\u4ee5\u8ba9\u7f16\u8bd1\u5668\u4f18\u5316\u4ee3\u7801</li> </ul> <p><code>std::boolalhpa</code>\uff1a\u8ba9bool\u503c\u4ee5true\u6216false\u7684\u5f62\u5f0f\u8f93\u51fa\uff0c\u800c\u4e0d\u662f1\u548c0</p> <pre><code>void no_throw() noexcept{\n    return;\n}\n\nauto block_throw = []() noexcept{\n    no_throw();\n};\n\nstd::cout&lt;&lt;std::boolalpha&lt;&lt; \"lno_throw() noexcept? \" &lt;&lt; noexcept(block_throw()) &lt;&lt; std::endl;\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_21","title":"\u539f\u59cb\u5b57\u7b26\u4e32\u5b57\u9762\u91cf","text":"<p>\u4e0d\u9700\u8981\u4f7f\u7528<code>\\</code>\u6765\u4fee\u9970\u7279\u6b8a\u7b26\u53f7</p> <pre><code>std::string str = R\"(C:\\File\\To\\Path)\";\nstd::cout &lt;&lt; str &lt;&lt; std::endl;\n</code></pre> <p>\u81ea\u5b9a\u4e49\u5b57\u9762\u91cf\uff1a\u901a\u8fc7\u91cd\u8f7d<code>\"\"</code>\u8fd0\u7b97\u7b26\u6765\u5b9e\u73b0</p> <pre><code>std::string operator\"\" _wow1(const char *wow1, size_t len) {\n    return std::string(wow1)+\"woooooooooow, amazing\";\n}\n\nstd::string operator\"\" _wow2 (unsigned long long i) {\n    return std::to_string(i)+\"woooooooooow, amazing\";\n}\n\nauto str = \"abc\"_wow1;\nauto num = 1_wow2;\n</code></pre>"},{"location":"tech/coding/modernC%2B%2B/#_22","title":"\u5185\u5b58\u5bf9\u9f50","text":"<p><code>alignof\u3001alignas</code>: \u7528\u4e8e\u5bf9\u5185\u5b58\u5bf9\u9f50\u8fdb\u884c\u63a7\u5236\uff0c\u524d\u8005\u80fd\u591f\u83b7\u5f97\u4e0e\u5e73\u53f0\u76f8\u5173\u7684<code>std::size_t</code>\u7684\u503c\uff0c\u540e\u8005\u53ef\u4ee5\u91cd\u65b0\u4fee\u9970\u67d0\u4e2a\u7ed3\u6784\u7684\u5b9a\u4e49\u65b9\u5f0f</p> <p><code>std::max_align_t</code>\uff1a\u8981\u6c42\u6bcf\u4e2a\u6807\u91cf\u7c7b\u578b\u7684\u5bf9\u9f50\u65b9\u5f0f\u4e00\u6837\u5e76\u4e3a\u6700\u5927\u6807\u91cf\uff0c\u5927\u90e8\u5206\u5e73\u53f0\u90fd\u662flong double</p> <pre><code>#include&lt;iostream&gt;\n\nstruct Storage {\n    char      a;\n    int       b;\n    double    c;\n    long long d;\n};\n\nstruct alignas(std::max_align_t) AlignasStorage {\n    char      a;\n    int       b;\n    double    c;\n    long long d;\n};\n\nint main() {\n    std::cout &lt;&lt; alignof(Storage) &lt;&lt; std::endl;\n    std::cout &lt;&lt; alignof(AlignasStorage) &lt;&lt; std::endl;\n    return 0;\n}\n</code></pre>"},{"location":"tech/ml/Linear%20Algebra/","title":"Linear Algebra","text":""},{"location":"tech/ml/Linear%20Algebra/#_1","title":"\u77e9\u9635\u5206\u89e3","text":""},{"location":"tech/ml/Linear%20Algebra/#qr","title":"QR(\u6b63\u4ea4\u5411\u91cf)\u5206\u89e3","text":"<p>\\(A=QR\\)</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u5217\u5411\u91cf\u7ebf\u6027\u65e0\u5173\u7684\uff0c\\(m\\times n \\(\u5b9e\u77e9\u9635\\)A\\)\uff0c\u53ef\u5206\u89e3\u6210\\(A=QR\\)\uff0c\u5176\u4e2d\\(Q\\)\u7684\u5217\u5411\u91cf\u7ec4\u662f\u6b63\u4ea4\u5355\u4f4d\u5411\u91cf\u7ec4\uff0c\\(R\\)\u4e3a\u4e3b\u5bf9\u89d2\u5143\u5168\u4e3a\u6b63\u6570\u7684\u4e0a\u4e09\u89d2\u77e9\u9635</p>"},{"location":"tech/ml/Linear%20Algebra/#_2","title":"\u7279\u5f81\u503c\u5206\u89e3","text":"<p>\u7279\u5f81\u503c\uff1a\\(Ax=\\lambda x \\(\uff0c\u5176\u4e2d\\)A\\)\u662f\u4e00\u4e2a\\(n\\times n\\)\u77e9\u9635\uff0c\\(x\\)\u662f\u77e9\u9635\\(A\\)\u7684\u7279\u5f81\u503c\\(\\lambda\\)\u6240\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\u3002</p> <p>\u6807\u51c6\u5316\uff1a\u5bf9\u4e8en\u4e2a\u7279\u5f81\u5411\u91cf\\(\\omega_1,...,\\omega_n\\)\uff0c\u8fdb\u884c\u6807\u51c6\u5316(\u5411\u91cf\u9664\u4ee5\u5411\u91cf\u6a21\u957f)\u540e\u6ee1\u8db3\\(||\\omega_i||^2=1\\text{ or }\\omega_i^T\\omega_i=1\\)\uff0c\u79f0\u8fd9n\u4e2a\u7279\u5f81\u5411\u91cf\u4e3a\u6807\u51c6\u6b63\u4ea4\u57fa\u3002\u6b64\u65f6\\(W\\)\u6ee1\u8db3\\(W^T=W^{-1}\\)\u548c\\(W^TW=I\\)\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2an\u9636\u65b9\u9635\\(A\\)\uff0cn\u4e2a\u7279\u5f81\u503c\u5206\u522b\u4e3a\\(\\lambda_1\\leq \\lambda_2\\leq ...\\leq \\lambda_n\\)\uff0c\u4ee5\u53ca\u5bf9\u5e94\u7684\u7279\u5f81\u5411\u91cf\\(\\omega_1,...,\\omega_n\\)\uff0c\u90a3\u4e48\u77e9\u9635\\(A\\)\u5c31\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b\u5206\u89e3\uff1a</p> \\[A=W\\Sigma W^{-1}\\] <p>\u5176\u4e2d\\(W\\)\u662f\u7531\u8fd9n\u4e2a\u7279\u5f81\u5411\u91cf\u7ec4\u6210\u7684n\u9636\u65b9\u9635\uff0c\\(\\Sigma\\)\u662f\u8fd9n\u4e2a\u7279\u5f81\u503c\u7ef4\u4e3b\u5bf9\u89d2\u7ebf\u7684n\u9636\u65b9\u9635</p> <p>\u5f53\u628a\\(W\\)\u7684n\u4e2a\u7279\u5f81\u5411\u91cf\u6807\u51c6\u5316\u540e\uff0c\u7279\u5f81\u5206\u89e3\u53ef\u4ee5\u5199\u6210\\(A=W\\Sigma W^T\\)</p>"},{"location":"tech/ml/Linear%20Algebra/#svd","title":"SVD(\u5947\u5f02\u503c)\u5206\u89e3","text":"<p>\\(A=U\\Sigma V^T\\)</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\\(m\\times n\\)\u5b9e\u77e9\u9635\\(A\\)\uff0c\u53ef\u5206\u89e3\u6210\\(A=U\\Sigma V^T\\)\uff0c\u5176\u4e2d\\(U\\)\u662f\\(m\\)\u7ea7\u65b9\u9635\uff0c\\(\\Sigma\\)\u662f\u4e00\u4e2a\\(m\\times n\\)\u7684\u77e9\u9635\uff0c\u9664\u4e86\u4e3b\u5bf9\u89d2\u4e0a\u7684\u5143\u7d20\u4ee5\u5916\u5168\u4e3a0\uff0c\u4e3b\u5bf9\u89d2\u5143\\(\\sigma_1,...,\\sigma_1\\)\u5168\u4e3a\u975e\u8d1f\u6570\u79f0\u4e3a\u5947\u5f02\u503c\uff0c\\(V\\)\u662fn\u7ea7\u65b9\u9635\uff0c\u6ee1\u8db3\\(U^TU=I, V^TV=I,\\Sigma^T=\\Sigma\\)</p> <p>\u90a3\u4e48\u5982\u4f55\u6c42\u89e3\u4e09\u4e2a\u77e9\u9635\u5462\uff1a</p> <ul> <li>\u5bf9\u4e8e\\(V\\)\u6765\u8bf4\uff0c\u5229\u7528\u65b9\u9635\\((A^TA)v_i=\\lambda_iv_i\\)\uff0c\u5bf9\u5176\u8fdb\u884c\u7279\u5f81\u503c\u5206\u89e3\uff0c\u90a3\u4e48\u5c06\\(\\lambda_1,...,\\lambda_n\\)\u7ec4\u6210\u4e00\u4e2am\u9636\u65b9\u9635\\(V\\)\uff0c\u79f0\u4e3a\u53f3\u5947\u5f02\u77e9\u9635</li> </ul> <ul> <li>\u5bf9\u4e8e\\(U\\)\u6765\u8bf4\uff0c\u5229\u7528\u65b9\u9635\\((AA^T)u_i=\\lambda_iu_i\\)\uff0c\u5bf9\u5176\u8fdb\u884c\u7279\u5f81\u503c\u5206\u89e3\uff0c\u90a3\u4e48\u5c06\\(\\lambda_1,...,\\lambda_n\\)\u7ec4\u6210\u4e00\u4e2an\u9636\u65b9\u9635\\(U\\)\uff0c\u79f0\u4e3a\u5de6\u5947\u5f02\u77e9\u9635</li> </ul> <ul> <li> <p>\u5bf9\u4e8e\\(\\Sigma\\)\u6765\u8bf4\uff0c\u7531\u4e8e\u9664\u4e86\u4e3b\u5bf9\u89d2\u4e0a\u7684\u5143\u7d20\u4ee5\u5916\u5168\u4e3a0\uff0c\u90a3\u4e48\u53ef\u4ee5\u6839\u636e\u5982\u4e0b\u63a8\u5bfc\u5f0f\u6c42\u51fa\u6bcf\u4e2a\u5947\u5f02\u503c\\(\\sigma\\)\uff0c\\(A=U\\Sigma V^T \\Rightarrow AV = U\\Sigma \\Rightarrow Av_i=\\sigma_iu_i \\Rightarrow \\sigma_i=Av_i/u_i\\)</p> <p>\u6b64\u5916\uff0c\\(A^TA\\)\u7279\u5f81\u503c\u77e9\u9635\u7b49\u4e8e\u5947\u5f02\u503c\u77e9\u9635\u7684\u5e73\u65b9\uff0c\u6240\u4ee5\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u6c42\u51fa\\(\\sigma_i\\)</p> <p>\\(\\sigma_i=\\sqrt{\\lambda_i}\\)</p> </li> </ul> <p>SVD\u7684\u7279\u6027\uff1a</p> <ul> <li> <p>\u5947\u5f02\u503c\u77e9\u9635\u4e2d\u5947\u5f02\u503c\u6309\u7167\u4ece\u5927\u5230\u5c0f\u6392\u5217\uff0c\u5e76\u4e14\u4e0b\u964d\u5f88\u5feb\u5728\uff0c\u5f88\u591a\u60c5\u51b5\u4e0b\uff0c\u524d10%\u751a\u81f31%\u7684\u5947\u5f02\u503c\u7684\u548c\u5c31\u5360\u4e86\u5168\u90e8\u7684\u5947\u5f02\u503c\u4e4b\u548c\u768499%\u4ee5\u4e0a\u7684\u6bd4\u4f8b\u3002</p> <p>\u56e0\u6b64\u53ef\u4ee5\u5bf9\\(\\Sigma\\)\u77e9\u9635\u8fdb\u884c\u8fd1\u4f3c\uff0c\u5373\u7528\u6700\u5927\u7684k\u4e2a\u5947\u5f02\u503c\u548c\u5bf9\u5e94\u7684\u5de6\u53f3\u5947\u5f02\u5411\u91cf\u6765\u8fd1\u4f3c\u77e9\u9635\uff0c\u53ef\u4ee5\u7528\u6765\u820d\u5f03\u4e0d\u91cd\u8981\u7684\u7279\u5f81\u503c</p> <p>\\(A_{m\\times n}=U_{m\\times m}\\Sigma_ {m\\times n}V^T_{n\\times n} \\approx  U_{m\\times m}\\Sigma_ {k\\times k}V^T_{n\\times n}\\)</p> </li> </ul> <p></p> <ul> <li>\u5de6\u5947\u5f02\u77e9\u9635\u53ef\u4ee5\u7528\u4e8e\u884c\u6570\u7684\u538b\u7f29\uff0c\u53f3\u5947\u5f02\u77e9\u9635\u53ef\u4ee5\u7528\u4e8e\u5217\u6570\u5373\u7279\u5f81\u7ef4\u5ea6\u7684\u538b\u7f29</li> </ul>"},{"location":"tech/ml/Linear%20Algebra/#lu","title":"LU(\u4e09\u89d2)\u5206\u89e3","text":"<p>\\(A=LU\\)</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u53ef\u9006\u65b9\u9635\\(A\\)\uff0c\u5982\u679c\u5b83\u7684\u6240\u6709\u987a\u5e8f\u4e3b\u5b50\u5f0f\u90fd\u4e0d\u4e3a0\uff0c\u53ef\u4ee5\u5206\u89e3\u6210\u4e00\u4e2a\u4e0a\u4e09\u89d2\u77e9\u9635\u548c\u4e00\u4e2a\u4e0b\u4e09\u89d2\u77e9\u9635\u7684\u4e58\u79ef\u5f62\u5f0f\uff0c\u5373\\(A=LU\\)</p>"},{"location":"tech/ml/Linear%20Algebra/#_3","title":"\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5","text":"<p>reference:\u4f18\u5316-\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5</p> <p>\u975e\u7ebf\u6027\u4f18\u5316\u4e2d\u7684 KKT \u6761\u4ef6\u8be5\u5982\u4f55\u7406\u89e3</p> <ul> <li>\u62c9\u683c\u6717\u65e5\u4e58\u5b50\u6cd5\u662f\u662f\u4e00\u79cd\u5bfb\u627e\u591a\u5143\u51fd\u6570\u5728\u4e00\u7ec4\u7ea6\u675f\u4e0b\u7684\u6781\u503c\u7684\u65b9\u6cd5</li> <li>\u901a\u8fc7\u5f15\u5165\u62c9\u683c\u6717\u65e5\u4e58\u5b50\uff0c\u53ef\u5c06\u6709 \ud835\udc51 \u4e2a\u53d8\u91cf\u4e0e \ud835\udc58 \u4e2a\u7ea6\u675f\u6761\u4ef6\u7684\u6700\u4f18\u5316\u95ee\u9898\u8f6c\u5316\u4e3a\u5177\u6709 \ud835\udc51+\ud835\udc58 \u4e2a\u53d8\u91cf\u7684\u65e0\u7ea6\u675f\u4f18\u5316\u95ee\u9898\u6c42\u89e3</li> </ul> <p>\u7b49\u5f0f\u60c5\u51b5</p> <p>\u5bf9\u4e8e\\(f(x,y)\\)\u5728\u7ea6\u675f\u6761\u4ef6\\(g(x,y)=0\\)\u4e0b\u7684\u6781\u503c\uff0c\u5373\\(\\(minf(x) \\quad s.t.g(x)=0\\)\\)</p> <p>\u6839\u636e\u5982\u4e0b\u6781\u503c\u70b9\u6761\u4ef6\uff0c\u4fbf\u53ef\u4ee5\u5f97\u5230\u62c9\u683c\u6717\u65e5\u51fd\u6570\\(L(\\lambda,x)=f(x)+\\lambda g(x)\\)\uff0c\u7b49\u540c\u4e8e\u6c42\u8be5\u51fd\u6570\u7684\u6781\u503c\u70b9</p> <p>\\(\\begin{equation}\\left\\{\\begin{array}{l} \\nabla f(\\textbf x) + \\lambda\\nabla g(\\textbf x)=0 \\\\ g(\\textbf x) =0 \\end{array}\\right.\\end{equation}\\)</p> <p>\u4e0d\u7b49\u5f0f\u60c5\u51b5</p> <p>\u5bf9\u4e8e\\(f(x,y)\\)\u5728\u7ea6\u675f\u6761\u4ef6\\(g(x,y)\\)\u4e0b\u7684\u6781\u503c\uff0c\u5373\\(\\(minf(x) \\quad s.t.g(x)\\leq0\\)\\)</p> <p>\u53ef\u4ee5\u8f6c\u5316\u6210\u5728\u5982\u4e0b\u4e09\u4e2a\u7ea6\u675f\u4e0b\u6700\u5c0f\u5316\u62c9\u683c\u6717\u65e5\u51fd\u6570\\(L(\\lambda,x)=f(x)+\\lambda g(x)\\)\uff0c\u8fd9\u4e2a\u5f0f\u5b50\u79f0\u4e3aKKT\u6761\u4ef6</p> <p>\\(\\begin{equation}\\left\\{\\begin{array}{l} g(x)\\leq0 \\\\ \\lambda \\geq 0 \\\\ \\lambda g(x) = 0\\end{array}\\right.\\end{equation}\\)</p> <p>\u4e00\u822c\u60c5\u51b5</p> <p>\u591a\u5143\u51fd\u6570\u7684\u68af\u5ea6\uff1a\u7ed9\u5b9a\\(f(x,y,z)\\)\uff0c\\(\\nabla f =\\vec e_x\\frac{\\partial}{\\partial x}+\\vec e_y\\frac{\\partial}{\\partial y}+\\vec e_z\\frac{\\partial}{\\partial z}\\)\uff0c\u5176\u4e2d\\(\\vec e_i\\)\u5747\u4e3a\u5404\u65b9\u5411\u4e0a\u7684\u5355\u4f4d\u5411\u91cf</p> <p>\u5bf9\u4e8eKKT\u6761\u4ef6\uff0c\u7ed9\u5b9a\u4f18\u5316\u95ee\u9898\uff0c\u5728\u82e5\u5e72\u7b49\u5f0f\u548c\u4e0d\u7b49\u5f0f\u7ea6\u675f\u6761\u4ef6\u4e0b\uff0c\u4ee5n\u7ef4\u5411\u91cf\\(x\\)\u7ef4\u81ea\u53d8\u91cf\u6700\u5927\u5316\u76ee\u6807\u51fd\u6570\\(f\\)</p> \\[max_xf(x) \\quad s.t. h_j(x)=0,j=1,\\dots,m \\text{\\quad and \\quad} g_i(x)\\leq 0,i=1,\\dots,n\\] <p>\u90a3\u4e48\u6839\u636eKKT\u6761\u4ef6\uff0c\u6781\u503c\u70b9\u6ee1\u8db3\u5982\u4e0b\u4e09\u4e2a\u5f0f\u5b50 $$ \\nabla f(x^)=\\sum_j\\lambda_j\\nabla h_j(x^)+\\sum_i\\mu_i\\nabla g_i(x^) \\ \\mu_i\\geq 0 \\ \\mu_ig_i(x^)=0 $$ \u76f4\u89c2\u7406\u89e3\uff1a</p> <p>\u7ed9\u5b9a\u4e00\u4e2a\u4f18\u5316\u95ee\u9898\uff0c\u6211\u4eec\u628a\u6ee1\u8db3\u6240\u6709\u7ea6\u675f\u6761\u4ef6\u7684n\u7ef4\u7a7a\u95f4\u533a\u57df\u79f0\u4e3a\u53ef\u884c\u57df\u3002\u4ece\u53ef\u884c\u57df\u4e2d\u7684\u6bcf\u4e00\u4e2a\u70b9 \\(x\\)\u671d\u67d0\u4e2a\u65b9\u5411 \\(v\\)\u51fa\u53d1\u8d70\u4e00\u70b9\u70b9\uff0c\u5982\u679c\u8fd8\u5728\u53ef\u884c\u57df\u4e2d\uff0c\u6216\u8005\u504f\u79bb\u53ef\u884c\u57df\u7684\u7a0b\u5ea6\u5f88\u5c0f\uff0c\u51c6\u786e\u5730\u8bf4\uff0c\u504f\u79fb\u91cf\u662f\u884c\u8fdb\u8ddd\u79bb\u7684\u9ad8\u9636\u65e0\u7a77\u5c0f\u91cf\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u8bf4\\(v\\)\u662f\u4e00\u4e2a\u53ef\u884c\u65b9\u5411\u3002\u6211\u4eec\u7528 \\(F(x)\\)\u8868\u793a\u70b9\\(x\\)\u7684\u6240\u6709\u53ef\u884c\u65b9\u5411\u7684\u96c6\u5408 \u3002 </p> <p>\u5bf9\u4e8e\u53ef\u884c\u57df\u4e2d\u7684\u4e00\u4e2a\u6781\u5927\u503c\u70b9\\(x^*\\) \uff0c\u5b83\u7684\u53ef\u884c\u65b9\u5411\u96c6\u5408\u4e3a \\(F(x^*)\\)\uff0c\u4ece \\(x^*\\)\u671d $F(x^) $\u4e2d\u7684\u67d0\u4e2a\u65b9\u5411\u8d70\u4e00\u5c0f\u6b65\uff0c\u90a3\u4e48\u843d\u70b9\u4ecd\u7136\uff08\u8fd1\u4f3c\uff09\u5728\u53ef\u884c\u57df\u4e2d\u3002 \\(x^*\\)\u662f\u5c40\u90e8\u6700\u5927\u503c\u70b9\u5c31\u610f\u5473\u7740\u5728\u8fd9\u4e9b\u53ef\u884c\u65b9\u5411\u4e0a\u76ee\u6807\u51fd\u6570 \\(f(x)\\)\u4e0d\u80fd\u589e\u5927*\uff0c\u4ece\u800c\u6211\u4eec\u5f97\u5230\u4e0b\u9762\u8fd9\u6837\u4e00\u4e2a\u7ed3\u8bba\uff1a</p> <p>\u5728\u6781\u503c\u70b9\\(x^*\\) \uff0c\u8ba9\u76ee\u6807\u51fd\u6570\u589e\u5927\u7684\u65b9\u5411\u4e0d\u80fd\u5728\\(F(x^*)\\)\u4e2d\u3002</p>"},{"location":"tech/ml/MachineLearning/","title":"ML Basic Knowledge","text":""},{"location":"tech/ml/MachineLearning/#_1","title":"\u4e00\u3001\u7ecf\u5178\u7b97\u6cd5","text":""},{"location":"tech/ml/MachineLearning/#1-knn","title":"1. KNN \u805a\u7c7b\u7b97\u6cd5","text":"<p>\u4f5c\u4e3a\u4e00\u79cd\u6709\u76d1\u7763\u7b97\u6cd5\uff0c\u5b83\u9700\u8981\u6837\u672c\u70b9\u7c7b\u522b\u5df2\u77e5\uff0c\u6765\u5224\u65ad\u65b0\u7684\u6837\u672c\u70b9\u5c5e\u4e8e\u54ea\u7c7b\u3002K\u4ee3\u8868\u7684\u662f\u6839\u636e\u4e34\u8fd1K\u4e2a\u70b9\u6765\u5224\u65ad\u7c7b\u522b\u3002</p> <p>\u7b97\u6cd5\u6d41\u7a0b\uff1a\u8ba1\u7b97\u5df2\u77e5\u7c7b\u522b\u6570\u636e\u96c6\u4e2d\u7684\u70b9\u4e0e\u5f53\u524d\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\uff0c\u9009\u53d6\u4e0e\u5f53\u524d\u70b9\u8ddd\u79bb\u6700\u5c0f\u7684k\u4e2a\u70b9\uff0c\u7136\u540e\u786e\u5b9a\u524dk\u4e2a\u70b9\u6240\u5728\u7c7b\u522b\u7684\u51fa\u73b0\u9891\u7387\uff0c\u6700\u540e\u8fd4\u56de\u524dk\u4e2a\u70b9\u51fa\u73b0\u9891\u7387\u6700\u9ad8\u7684\u7c7b\u522b\u4f5c\u4e3a\u5f53\u524d\u70b9\u7684\u9884\u6d4b\u5206\u7c7b\u3002</p>"},{"location":"tech/ml/MachineLearning/#2-k-means","title":"2. K-Means\u805a\u7c7b\u7b97\u6cd5","text":"<p>\u4f5c\u4e3a\u4e00\u79cd\u65e0\u76d1\u7763\u7b97\u6cd5\uff0c\u4e0d\u9700\u8981\u4eba\u5de5\u63d0\u4f9b\u6570\u636e\u7c7b\u522b\u3002K\u4ee3\u8868\u6700\u540e\u7c7b\u522b\u4e2a\u6570\u3002</p> <p>\u7b97\u6cd5\u6d41\u7a0b\uff1a\u968f\u673a\u751f\u6210k\u4e2a\u4e2d\u5fc3\u70b9\uff0c\u5bf9\u4e8eN\u4e2a\u70b9\uff0c\u8ba1\u7b97\u81ea\u5df1\u4e0e\u4e2d\u5fc3\u70b9\u7684\u8ddd\u79bb\uff0c\u5224\u65ad\u81ea\u5df1\u5c5e\u4e8e\u54ea\u4e00\u7c7b\u3002\u7136\u540e\u5bf9\u4e8ek\u4e2a\u4e2d\u5fc3\u70b9\uff0c\u5c06\u81ea\u5df1\u7684\u5750\u6807\u4fee\u6539\u4e3a\u81ea\u5df1\u8fd9\u4e00\u7c7b\u6240\u6709\u6570\u636e\u70b9\u7684\u4e2d\u5fc3\u70b9\u3002\u91cd\u590d\u4ee5\u4e0a\u6d41\u7a0b\uff0c\u76f4\u5230\u7b97\u6cd5\u6536\u655b\uff08\u4ee3\u4ef7\u51fd\u6570\u7684\u5dee\u5206\u503c\u5c0f\u4e8e\u4e00\u5b9a\u6570\u503c\uff09\u3002</p>"},{"location":"tech/others/BT/","title":"BT","text":""},{"location":"tech/others/BT/#bt","title":"BT\u539f\u7406\u5206\u4eab(\u8f6c)","text":"<p>BT\u539f\u7406\u5206\u4eab</p>"},{"location":"tech/others/BT/#bittorrent","title":"Bittorrent\u534f\u8bae","text":"<p>BT\u5168\u540d\u4e3aBitTorrent,\u662f\u4e00\u4e2ap2p\u8f6f\u4ef6,\u4f60\u5728\u4e0b\u8f7ddownload\u7684\u540c\u65f6\uff0c\u4e5f\u5728\u4e3a\u5176\u4ed6\u7528\u6237\u63d0\u4f9b\u4e0a\u4f20upload\uff0c\u56e0\u4e3a\u5927\u5bb6\u662f\u201c\u4e92\u76f8\u5e2e\u52a9\u201d\uff0c\u6240\u4ee5\u4e0d\u4f1a\u968f\u7740\u7528\u6237\u6570\u7684\u589e\u52a0\u800c\u964d\u4f4e\u4e0b\u8f7d\u901f\u5ea6\u3002</p> <p>\u6bd4\u8d77\u5176\u5b83\u7684P2P\u8f6f\u4ef6\uff0cBT\u6709\u4e2a\u72ec\u7279\u7684\u5730\u65b9\uff0c\u5b83\u5b58\u5728\u4e00\u4e2a\u4e2d\u95f4\u7684WEB\u670d\u52a1\u5668\uff0c\u5c31\u662f\u6211\u4eec\u5728\u53d1\u5e03\u7684\u65f6\u6240\u586b\u5199\u7684announce\u3002 \u8be5\u670d\u52a1\u5668\u63d0\u4f9b\u4e86\u53d1\u5e03\u7684\u7edf\u4e00\u7ba1\u7406\uff0c\u4e0d\u50cf\u5176\u5b83P2P\u8f6f\u4ef6\u90a3\u6837\u5230\u5904\u53bb\u627e\u54ea\u4e9b\u975e\u5e38\u4e0d\u7a33\u5b9a\u7684\u4e2a\u4eba\u670d\u52a1\u5668\uff0c\u76f8\u5bf9\u8d77\u6765\u8ba9\u4eba\u5b89\u5fc3\u7684\u591a\u3002</p> <p>BT\u670d\u52a1\u5668\u662f\u901a\u8fc7\u4e00\u79cd\u7c7b\u4f3c\u4f20\u9500\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u6587\u4ef6\u5171\u4eab\u7684\u3002\u4e3e\u4e2a\u4f8b\u5b50\u6765\u8bf4\u5427\uff0c\u4f8b\u5982BT\u670d\u52a1\u5668\u5c06\u4e00\u4e2a\u6587\u4ef6\u5206\u6210\u4e86N\u4e2a\u90e8\u5206\uff0c\u6709\u7532\u3001\u4e59\u3001\u4e19\u3001\u4e01\u56db\u4f4d\u7528\u6237\u540c\u65f6\u4e0b\u8f7d\uff0c\u90a3\u4e48BT\u5e76\u4e0d\u4f1a\u5b8c\u5168\u4ece\u670d\u52a1\u5668\u4e0b\u8f7d\u8fd9\u4e2a\u6587\u4ef6\u7684\u6240\u6709\u90e8\u5206\uff0c\u800c\u662f\u6839\u636e\u5b9e\u9645\u60c5\u51b5\u6709\u9009\u62e9\u5730\u4ece\u5176\u4ed6\u7528\u6237\u7684\u673a\u5668\u4e2d\u4e0b\u8f7d\u5df2\u4e0b\u8f7d\u5b8c\u6210\u7684\u90e8\u5206\u3002\u4f8b\u5982\u7532\u5df2\u7ecf\u4e0b\u8f7d\u4e86\u7b2c1\u90e8\u5206\uff0c\u4e59\u5df2\u7ecf\u4e0b\u8f7d\u4e86\u7b2c2\u90e8\u5206\uff0c\u90a3\u4e48\u4e19\u5c31\u4f1a\u4ece\u7532\u7684\u673a\u5668\u4e2d\u4e0b\u8f7d\u7b2c1\u90e8\u5206\uff0c\u4ece\u4e59\u7684\u673a\u5668\u4e2d\u4e0b\u8f7d\u7b2c2\u90e8\u5206\uff0c\u5f53\u7136\u7532\u3001\u4e59\u3001\u4e01\u4e09\u4f4d\u7528\u6237\u4e5f\u5728\u540c\u65f6\u4ece\u4e19\u7684\u673a\u5668\u4e2d\u4e0b\u8f7d\u76f8\u5e94\u7684\u90e8\u5206\uff0c\u8fd9\u5c31\u5927\u5927\u51cf\u8f7b\u4e86BT\u670d\u52a1\u5668\u7684\u8d1f\u8377\uff0c\u4e5f\u540c\u65f6\u52a0\u5feb\u4e86\u4e19\u7684\u4e0b\u8f7d\u901f\u5ea6\uff0c\u4e5f\u5c31\u662f\u8bf4\u6bcf\u53f0\u53c2\u52a0\u4e0b\u8f7d\u7684\u8ba1\u7b97\u673a\u65e2\u4ece\u5176\u4ed6\u7528\u6237\u7684\u8ba1\u7b97\u673a\u4e0a\u4e0b\u8f7d\u6587\u4ef6\uff0c\u540c\u65f6\u81ea\u8eab\u4e5f\u5411\u5176\u4ed6\u7528\u6237\u63d0\u4f9b\u4e0b\u8f7d\uff0c\u56e0\u6b64\u53c2\u4e0e\u4e0b\u8f7d\u7684\u7528\u6237\u6570\u91cf\u8d8a\u591a\uff0c\u4e0b\u8f7d\u901f\u5ea6\u4e5f\u8d8a\u9ad8\u3002</p>"},{"location":"tech/others/BT/#torrent","title":".torrent \u7684\u4f5c\u7528","text":"<p>\u5927\u5bb6\u90fd\u77e5\u9053\u6211\u4eec\u8981\u7528BT\u4e0b\u8f7d \uff0c\u5c31\u8981\u5148\u4e0b\u8f7d\u4e00\u4e2a.torrent\u6587\u4ef6\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5230\u5e95\u662f\u4ec0\u4e48\u5462\uff1a</p> <p>\u9996\u5148\u662f announce \u7eaa\u5f55\u4e86\u53d1\u5e03\u670d\u52a1\u5668\u7684\u4f4d\u7f6e\uff0c\u8ba9BT\u77e5\u9053\u662f\u90a3\u4e2aWEB\u670d\u52a1\u5668\u53d1\u5e03\u7684\uff0c\u7136\u540e\u662f\u4e00\u4e9b\u6587\u4ef6\u4fe1\u606f\uff0c\u6587\u4ef6\u540d\uff0c\u76ee\u5f55\u540d\uff0c\u957f\u5ea6\u7b49\u7b49\uff0c\u6700\u540e\u662f\u7247\u6bb5\u957f\u5ea6\uff0c\u548c\u7247\u6bb5\u7684 Sha1 \u6821\u9a8c\u7801\uff0c\uff08BT\u4e3a\u4e86\u4e8b\u73b0\u7eed\u4f20\u548c\u6587\u4ef6\u6821\u9a8c\uff0c\u5c31\u628a\u6587\u4ef6\u5206\u6210\u82e5\u5e72\u4e2a\u7247\u6bb5\uff09\uff0c\u5927\u5bb6\u53ef\u4ee5\u6253\u5f00torrent\u6587\u4ef6\u770b\u770b\uff0c\u5c31\u662f\u77e5\u9053\u4e2a\u5927\u6982\uff0c\u540e\u9762\u7684\u4e71\u7801\u662f\u7247\u6bb5 Sha1 \u6821\u9a8c\u7801\u3002</p> <p>BT \u6253\u5f00\u4e00\u4e2a torrent\u6587\u4ef6\u540e\uff0c\u5148\u8981\u4f60\u9009\u62e9\u6587\u4ef6\u4fdd\u5b58\u90a3\u91cc\u3002\u7136\u540e\u5224\u65ad\u6587\u4ef6\u4e0d\u5b58\u5728\u7684\u8bdd\u5c31\u5efa\u7acb\u65b0\u6587\u4ef6\uff0c\u5b58\u5728\u7684\u8bdd\u5c31\u7528 Sha1 \u6821\u9a8c\u7801\u53bb\u6821\u9a8c\u6587\u4ef6---\u9519\u8bef\u7684\u5c31\u662f\u8fd8\u6ca1\u4e0b\u8f7d\u7684\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b9e\u73b0\u7eed\u4f20\u4e86\uff0c\u4f46128\u4f4d\u6821\u9a8c\uff0c\u60f3\u4e0d\u6162\u90fd\u4e0d\u884c</p>"},{"location":"tech/others/BT/#_1","title":"\u670d\u52a1\u5668\u4f1a\u505a\u4ec0\u4e48","text":"<p>\u670d\u52a1\u5668\u4e2d\u6709\u4e2a\u4e00\u4e2a track \u7a0b\u5e8f\u6765\u7ba1\u7406\u8fd9\u4e9b\u8bf7\u6c42\uff0c\u5f97\u5230\u8fd9\u4e00\u4e32\u4ee3\u7801\u540e\u5c31\u4f1a\u7528 info_hash \u6765\u67e5\u627e\u5217\u8868\uff0c\u627e\u5230\u4f60\u5c31\u53ef\u4ee5\u4e0b\u8f7d\uff0c\u627e\u4e0d\u5230\u5c31\u5bf9\u4e0d\u8d77\u5566\u3002\u63a5\u7740\u5b83\u4f1a\u53cd\u8fde\uff08NatCheck\uff09\u4f60\u7684 IP \u548c Port\u8fd9\u6837\u5c31\u53ef\u4ee5\u77e5\u9053\u4f60\u662f\u5185\u7f51\u7528\u6237\u8fd8\u662f\u5171\u7f51\u7528\u6237\uff08\u5982\u679c\u4f60\u662f\u5185\u7f51\u7528\u6237\uff0c\u5b83\u662f\u8fde\u4e0d\u901a\u7684\uff0c\u56e0\u4e3a\u5b83\u4f1a\u8fde\u5230\u4f60\u7684\u670d\u52a1\u5668\u4e0a\uff0c\u4f60\u7684\u670d\u52a1\u5668\u5f53\u7136\u6ca1\u6709\u8fd9\u4e2a\u7aef\u53e3\u5566\uff09\uff0c\u7136\u540e\u670d\u52a1\u5668\u8fd4\u56de\u73b0\u5728\u6b63\u5728\u4e0b\u8f7d\u8fd9\u4e2a\u6587\u4ef6\u7684\u6240\u6709\u516c\u7f51\u7528\u6237\u7684IP\u548cport\uff0c\u5c31\u50cf\u662f\uff1ad8:intervali1800e5eersld2:ip14:xxx.xxx.xx.xxx7eerid20:00180531904b7e3abdd74orti6881eeee</p> <p>interval 1800 \u662f\u544a\u8bc9 BT \u9694\u591a\u5c11\u79d2\u6765\u67e5\u8be2\u4e00\u6b21\u8fd9\u91cc\u662f 30 \u5206\u949f \uff08\u6709\u70b9\u8fc7\u5206\u4e86\uff09\uff0c\u6700\u540e\u5982\u679c\u4f60\u662f\u516c\u7f51\u7528\u6237\u5b83\u4f1a\u628a\u4f60\u63d0\u4ea4\u7684 IP \u548c Port \u653e\u5230info_hash \u5bf9\u5e94\u7684\u5217\u8868\u4e2d\uff0c\u8fd9\u6837\u5176\u5b83\u4eba\u5c31\u53ef\u4ee5\u627e\u5230\u4f60</p> <p>\u5f97\u5230\u8fd9\u4e9b peer IP\u540e\uff0cBT\u5c31\u53ef\u4ee5\u627e\u5230\u5bf9\u5e94\u7684IP\u4e0b\u8f7d\u4e86\uff0cBT\u4f1a\u5230\u6240\u6709\u7684peer\u53bb\u5bfb\u627e\u81ea\u5df1\u8981\u4e0b\u8f7d\u7684\u4e1c\u897f\uff0c\u4e0d\u662f\u4e00\u5b9a\u8981\u5230seed\u4e0b\u8f7d\u3002BT\u6bcf\u627e\u5230\u4e00\u4e2apeer\u5c31\u548c\u5efa\u7acb\u4e00\u4e2aSocket\u6765\u4e0b\u8f7d\uff0c\u6240\u4ee5\u4e0b\u8f7d\u7684\u4eba\u8d8a\u591a\uff0c\u901f\u5ea6\u5c31\u8d8a\u5feb\u3002</p>"},{"location":"tech/others/BT/#send","title":"\u5185\u7f51\u7528\u6237\u53ef\u4ee5\u505aSend\u7684\u539f\u7406","text":"<p>\u4e0a\u9762\u8bf4\u5230\u670d\u52a1\u5668\u53ea\u4f1a\u8fd4\u56de\u516c\u7f51\u7684ip\u7684\uff0c\u90a3\u5185\u7f51\u7528\u6237\u600e\u4e48\u53ef\u4ee5\u505aSend\u5462\uff0c\u8fd9\u662f\u56e0\u4e3aBT\u662f\u4e00\u4e2a\u4e3b\u52a8\u8fde\u63a5\u7684\u8f6f\u4ef6\uff08\u5373\u4f7f\u4f60\u5df2\u7ecf\u4e0b\u8f7d\u5b8c\u4e86\uff0c\u4e5f\u4e0d\u4e5f\u4f1a\u4e3b\u52a8\u8fde\u63a5\u4ed6\u4eba\uff09\u4e0b\u9762\u662f\u4e00\u4e2a\u4eff\u771f\u6d41\u7a0b\uff1a</p> <p>1 \u5185\u7f51\u7528\u6237\u5f00\u59cb\u505a seed\uff0c</p> <p>2 \u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\uff0c\u7531\u4e8e\u662f\u7b2c\u4e00\u4e2a\u6240\u4ee5\u4e5f\u6ca1\u6709peer\u8fd4\u56de</p> <p>3 \u516c\u7f51\u7528\u6237\u63d0\u4ea4\u8bf7\u6c42\uff0c\u7531\u4e8eseed\u662f\u5185\u7f51\u7528\u6237\u6240\u4ee5\u4e5f\u6ca1\u6709peer\u8fd4\u56de\uff0c\u7b49\u5f85\u4e0b\u8f7d\uff0c\u4f46\u670d\u52a1\u5668\u4f1a\u628a\u5b83\u7684IP\u653e\u5230\u5217\u8868\u4e2d</p> <p>4 \u5185\u7f51\u7ecf\u8fc7 interval \u65f6\u95f4\u95f4\u9694\u540e\uff0c\u518d\u5411\u670d\u52a1\u5668\u653e\u51fa\u8bf7\u6c42\uff0c\u5f97\u5230\u4e0a\u9762\u5f97\u516c\u7f51IP</p> <p>5 \u5f97\u5230\u516c\u7f51IP\u540e\uff0c\u5185\u7f51\u9a6c\u4e0a\u8fdb\u884c\u8fde\u63a5</p> <p>6 \u516c\u7f51\u7528\u6237\u5efa\u7acb\u8fde\u63a5\uff0c\u6570\u636e\u5f00\u59cb\u4f20\u8f93 \uff08\u6ce8\u610f\u73b0\u5728\u662f\u516c\u7f51\u7528\u6237\u505a\u670d\u52a1\u5668\uff0c\u5185\u7f51\u7528\u6237\u505a\u5ba2\u6237\u7aef\uff0c\u662f\u4e0d\u662f\u6709\u70b9\u602a\uff09</p> <p>7 \u5176\u5b83\u5185\u7f51\u7528\u6237\u53bb\u4e0a\u9762\u516c\u7f51\u7528\u6237\u4e0b\u8f7d\u6570\u636e</p> <p>\u6240\u4ee5\uff0c\u5185\u7f51\u7528\u6237\u505a seed \u4e00\u5b9a\u8981\u6709\u516c\u7f51\u7528\u6237\u5f97\u53c2\u4e0e\uff0c\u5426\u5219\u5176\u5b83\u5185\u7f51\u7528\u6237\u65e0\u6cd5\u4e0b\u8f7d\u3002\u5982\u679c\u5168\u90e8\u662f\u5185\u7f51\u7528\u6237\uff0c\u90a3\u4e2a\u6240\u6709\u8fde\u63a5\u90fd\u4e0d\u4f1a\u6210\u7acb\uff0c\u5f53\u7136\u8fd9\u662f\u6bd4\u8f83\u6781\u7aef\u7684\u60c5\u51b5\u3002</p> <p>\u4ee5\u4e0a\u53ef\u89c1\uff0c\u5185\u7f51\u7528\u6237\u4e0d\u80fd\u548c\u5185\u7f51\u7528\u6237\u8fde\u63a5\uff0c\u5176\u5b83\u7528\u6237\u65e0\u6cd5\u4ece\u670d\u52a1\u5668\u67e5\u5230\u4f60\uff0c\u6240\u4ee5\u65e0\u6cd5\u4e3b\u52a8\u8fde\u63a5\u4f60\uff0c\u4f60\u53ea\u80fd\u6bcf\u969430\u5206\u949f\u4ece\u670d\u52a1\u5668\u627e\u5230\u516c\u7f51\u7528\u6237\u4e00\u4e2a\u4e2a\u8fdb\u884c\u8fde\u63a5\u3002</p>"},{"location":"tech/others/Memory_hardware/","title":"\u5185\u5b58\u786c\u4ef6\u57fa\u7840\u77e5\u8bc6","text":"<p>\u53c2\u8003blog</p>"},{"location":"tech/others/Memory_hardware/#_2","title":"\u5b58\u50a8\u5668\u5b50\u7cfb\u7edf","text":""},{"location":"tech/others/Memory_hardware/#_3","title":"\u5185\u5b58\u9897\u7c92\u5c42\u6b21\u7ed3\u6784","text":"<p>\u5185\u5b58\u63a7\u5236\u5668\u5230\u5185\u5b58\u9897\u7c92\u7684\u5185\u90e8\u903b\u8f91\uff0c\u4ece\u5927\u5230\u5c0f\u53ef\u4ee5\u5206\u4e3a\uff1a <code>Channel -&gt; DIMM -&gt; RANK -&gt; CHIP -&gt; BANK -&gt; Row/Column</code></p> <ul> <li>Memory Channel: \u5185\u5b58\u901a\u9053(Channel) \u662f\u5185\u5b58\u63a7\u5236\u5668\u548c\u5185\u5b58\u4e4b\u95f4\u901a\u4fe1\u7684\u603b\u7ebf\uff0c\u5176\u4e2d\u4e00\u7aef\u8fde\u63a5\u5185\u5b58\u63a7\u5236\u5668\uff0c\u53e6\u4e00\u7aef\u8fde\u63a5DIMM\u63d2\u69fd\u3002      \u5728\u670d\u52a1\u5668\u4e0a\u5916\u89c2\u770b\u6765\u8868\u73b0\u4e3a\u7d27\u7d27\u76f8\u90bb\u7684\u4e00\u7cfb\u5217 DIMM \u63d2\u69fd\uff0c\u5176\u4e2d\u76f8\u90bb\u4e24\u4e2a DIMM \u63d2\u69fd\u5c5e\u4e8e\u540c\u4e00\u4e2a\u5185\u5b58 Channel\uff0c\u901a\u5e38\u6709\u5355\u901a\u9053\uff0c\u53cc\u901a\u9053\uff0c\u56db\u901a\u9053\u7b49\u3002   \u5982\u679c\u8981\u63d0\u9ad8\u5185\u5b58\u7684\u8bbf\u95ee\u91cf\uff0c\u90a3\u4e48\u53ef\u4ee5\u540c\u65f6\u4f7f\u7528\u591a\u4e2a\u5185\u5b58\u63a7\u5236\u5668\u8bbf\u95ee\u5185\u5b58\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u5185\u5b58\u6761\u63d2\u5165\u5230\u4e0d\u540c\u7684 Channel\uff0c\u8fd9\u6837\u53ef\u4ee5\u63d0\u4f9b\u5185\u5b58\u603b\u4f53\u7684\u8bbf\u95ee\u901f\u5ea6(\u591a\u901a\u9053\u901f\u7387 = \u5355\u901a\u9053\u901f\u7387 x \u901a\u9053\u6570)<ul> <li>\u5355\u901a\u9053\u6a21\u5f0f\uff1a\u6307\u7684\u662f\u63d0\u4f9b\u5355\u901a\u9053\u7684\u5e26\u5bbd\u8fd0\u7b97\uff0c\u5728\u53ea\u5b89\u88c5\u4e00\u4e2a DIMM \u6216\u8005\u5b89\u88c5\u7684\u591a\u4e2a DIMM \u5185\u5b58\u5bb9\u91cf\u4e0d\u540c\u65f6\u542f\u7528\uff0c\u5e76\u4e14\u4f1a\u91c7\u7528\u901a\u9053\u6162\u7684\u5185\u5b58\u6761</li> <li>\u53cc\u901a\u9053\u6a21\u5f0f\uff1a\u5f53\u4e24\u4e2a DIMM \u5bb9\u91cf\u76f8\u7b49\u65f6\uff0c\u7cfb\u7edf\u53ef\u4ee5\u542f\u7528\u53cc\u901a\u9053\u6765\u63d0\u9ad8\u5185\u5b58\u7684\u541e\u5410\u91cf\uff0c\u9ed8\u8ba4\u4f1a\u91c7\u7528\u8f83\u6162\u7684\u5185\u5b58\u6761\u3002\u5982\u56feC\u6240\u793a\uff0c\u6b64\u65f6\u53ea\u8981A1\u548cB1, A2\u548cB2\u7684\u5bb9\u91cf\u76f8\u540c\u5373\u53ef\uff0c\u65e0\u9700\u5168\u90e8\u76f8\u540c\u3002</li> </ul> </li> </ul> <ul> <li>DIMM(Double-Inline Memory Module): DIMM \u4e5f\u5c31\u662f\u6211\u4eec\u4fd7\u79f0\u7684\u5185\u5b58\u6761\uff0c\u5b9e\u9645\u4e0a\u4e5f\u5c31\u662f\u4e00\u5757\u710a\u6709\u591a\u4e2a\u5185\u5b58\u82af\u7247\u7684\u7535\u8def\u677f\u3002    DIMM \u4e2d\u7684 double \u6307\u7684\u662f\u76f8\u8f83\u4e8e\u4ece\u524d\u7684 SIMM \u6765\u8bf4\uff0c\u5b83\u53ef\u4ee5\u5355\u4e2a\u5468\u671f\u5185\u8bfb\u53d6 8 \u4e2a\u5b57\u8282\uff0c\u5373\u4f4d\u5bbd\u662f 64 \u4f4d\u3002\u5982\u4eca\u5e38\u89c1\u7684 DIMM \u7c7b\u578b\u5982\u4e0b\uff1a<ul> <li>RDIMM: Registered DIMM\uff0c\u4e3b\u8981\u7528\u4e8e\u670d\u52a1\u5668\u4e0a\uff0c\u4e3a\u4e86\u7a33\u5b9a\u6027\u6709 ECC \u548c\u65e0 ECC \u4e24\u79cd\uff0c\u4e00\u822c\u662f\u81ea\u5e26 ECC \u7684</li> <li>UDIMM: UnBuffered DIMM\uff0c\u4e3b\u8981\u7528\u4e8e\u4e2a\u4eba PC \u4e0a\uff0c\u540c\u6837\u6709 ECC \u548c\u65e0 ECC \u4e24\u79cd\uff0c\u4e00\u822c\u4e0d\u5e26 ECC</li> <li>SO-DIMM: Small-Outline DIMM\uff0c\u4e3b\u8981\u7528\u4e8e\u7b14\u8bb0\u672c\uff0c\u4e5f\u5206 ECC \u548c\u65e0 ECC \u4e24\u79cd.</li> </ul> </li> </ul> <ul> <li>Memory Rank/Chip: Chip \u662f\u5b9e\u9645\u5b58\u50a8\u6570\u636e\u7684\u5730\u65b9\uff0c\u6bcf\u4e2a DIMM \u4e0a\u4f1a\u6709\u591a\u4e2a\u7c7b\u4f3c\u7684 Chip\uff0c\u5355\u4e2a Chip \u7684\u4f4d\u5bbd\u4e00\u822c\u662f4/8/16/32 bit\uff0c\u6240\u4ee5\u4f1a\u5c06\u591a\u4e2a Chip \u5e76\u8054\u8d77\u6765\u7ec4\u6210 64 bit\u7684\u4f4d\u5bbd\u96c6\u5408\uff0c\u8fd9\u4e2a\u96c6\u5408\u5c31\u79f0\u4e3a\u662f RANK.    \u5bf9\u4e8e\u67d0\u4e9b\u5185\u5b58\u6761\u6765\u8bf4\uff0c\u53ef\u80fd\u6b63\u53cd\u90fd\u6709\u5f88\u591a Chips\uff0c\u90a3\u4e48\u6b63\u53cd\u4e24\u9762\u6bcf\u4e00\u4e2a\u9762\u7684\u96c6\u5408\u90fd\u53eb\u505a RANK\uff0c\u5373\u6709\u4e24\u4e2a RANK</li> </ul> <ul> <li> <p>Memory Bank/Cell: Chip \u5185\u90e8\u5305\u542b\u4e86\u8bb8\u591a Bank, \u6bcf\u4e00\u4e2a Bank \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u5b58\u50a8\u77e9\u9635(Memory Array)\uff0c\u8fd9\u4e9b Bank \u5171\u4eab Chip \u5185\u7684 BA(Bank Address)\u7ebf\uff0c\u800c\u5728 Bank \u5185\u90e8\u901a\u8fc7\u884c\u5217\u5212\u5206\u4e3a\u4e00\u4e2a\u4e2a\u72ec\u7acb\u7684\u5b58\u50a8\u5355\u5143\uff0c\u79f0\u4e3a Cell\uff0c\u53ef\u4ee5\u4fdd\u5b58 1 bit \u7684\u6570\u636e\uff0cCell \u7531 Row Decoder/Column Decoder \u5bfb\u5740\u3002\u6bcf\u7ec4 Bank \u7684\u4e0b\u65b9\u4f1a\u6709\u4e00\u4e2a Row Buffer(Sense amplifer) \u6765\u5c06\u8bfb\u51fa\u7684 Row \u7f13\u5b58  </p> <p>\u5185\u5b58\u63a7\u5236\u5668\u53ef\u4ee5\u5bf9\u540c\u4e00\u4e2a Rank \u5185\u7684\u6240\u6709 Chip \u540c\u65f6\u8fdb\u884c\u8bfb\u5199\uff0c\u540c\u4e00\u4e2a Rank \u5185\u7684\u6240\u6709 Chip \u5171\u4eab\u540c\u6837\u7684\u63a7\u5236\u4fe1\u53f7\uff0c\u591a\u4e2a Rank \u53ef\u4ee5\u5171\u4eab\u540c\u4e00\u6839 Addr/Command \u4fe1\u53f7\u7ebf\uff0c\u5229\u7528 CS \u7ebf\u6765\u9009\u62e9\u4f7f\u7528\u54ea\u7ec4 Rank. </p> </li> </ul>"},{"location":"tech/others/odd/","title":"\u4e00\u4e9b\u5947\u602a\u7684\u77e5\u8bc6\u5408\u96c6","text":""},{"location":"tech/others/odd/#1","title":"1. \u4e3a\u4ec0\u4e48\u6587\u4ef6\u7cfb\u7edf\u4e2d\u6587\u4ef6\u5927\u5c0f\u548c\u5360\u7528\u7a7a\u95f4\u4e0d\u540c\uff1f","text":"<p>\u4e4b\u524d\u53ea\u77e5\u9053\u53ef\u80fd\u5360\u7528\u7a7a\u95f4\u4f1a\u53d8\u5927\uff0c\u4f46\u6700\u8fd1\u62f7\u6570\u636e\u65f6\u8fd8\u6709\u5360\u7528\u7a7a\u95f4\u5c0f\u4e8e\u6587\u4ef6\u5927\u5c0f\u7684\u60c5\u51b5</p> <ul> <li>\u5360\u7528\u7a7a\u95f4 &gt; \u6587\u4ef6\u5927\u5c0f: \u8fd9\u662f\u5341\u5206\u5e38\u89c1\u7684\u60c5\u51b5\uff0c\u7531\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6309\u7167\u7c07\u7684\u65b9\u5f0f\u7ed9\u6587\u4ef6\u5206\u914d\u5927\u5c0f(cluster &gt; block &gt; sector)\uff0c\u6240\u4ee5\u5f53\u4e00\u4e2a\u6587\u4ef6\u7684\u5927\u5c0f\u5c0f\u4e8e\u4e00\u4e2a\u7c07\u7684\u5927\u5c0f\u65f6\uff0c\u6240\u5206\u914d\u7684\u5360\u7528\u7a7a\u95f4\u662f\u5927\u4e8e\u6587\u4ef6\u5b9e\u9645\u5927\u5c0f\u7684</li> </ul> <ul> <li>\u5360\u7528\u7a7a\u95f4 &lt; \u6587\u4ef6\u5927\u5c0f: \u8fd9\u4e2a\u548c\u7a00\u758f\u6587\u4ef6\u6709\u5173(Sparse File)\uff0c\u7a00\u758f\u6587\u4ef6\u6307\u7684\u662f\u6587\u4ef6\u4e2d\u51fa\u73b0\u5927\u91cf\u76840\u6570\u636e\uff0c\u7279\u5b9a\u7684\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u91c7\u7528\u7b97\u6cd5\u5c06\u8fd9\u4e9b0\u6570\u636e\u538b\u7f29\uff0c\u4ece\u800c\u8fbe\u5230\u8282\u7701\u7a7a\u95f4\u7684\u76ee\u7684\uff0c\u90a3\u4e48\u6587\u4ef6\u6240\u58f0\u660e\u7684\u6587\u4ef6\u5927\u5c0f\u5c31\u4f1a\u5927\u4e8e\u6240\u5360\u7528\u7684\u7a7a\u95f4\u3002</li> </ul>"},{"location":"tech/others/odd/#2-pcie","title":"2. PCIE\u63d2\u69fd\u53ca\u5176\u89c4\u8303","text":"<p>\u5148\u653e\u4e00\u5f20PCIE\u5404\u7248\u672c\u89c4\u683c\u56fe\uff0c\u901a\u5e38\u6211\u4eec\u6240\u8bf4\u7684PCIE x16,x8\u7b49\uff0c\u90fd\u6307\u7684\u662fPCI-E\u901a\u9053\u6570\uff0c\u901a\u9053\u6570\u8d8a\u591a\u5e26\u5bbd\u8d8a\u9ad8\u3002 </p> <p>PCI-E\u63d2\u69fd\u6709x1\uff0cx2\uff0cx4\uff0cx8\uff0cx12\uff0cx16\u548cx32\u5171\u8ba17\u79cd\u7248\u672c\uff0c\u5bf9\u5e941/2/4/8/12/16/32\u901a\u9053\u3002\u5176\u4e2dPCI-E x32\u7531\u4e8e\u4f53\u79ef\u539f\u56e0\u4ec5\u4f7f\u7528\u5728\u7279\u6b8a\u573a\u5408\uff0cPCI-E x12\u4e3b\u8981\u7528\u5728\u670d\u52a1\u5668\u9886\u57df\uff0cPCI-E x2\u5219\u4e3b\u8981\u7528\u4e8e\u5185\u90e8\u7684\u63a5\u53e3\u800c\u975e\u6269\u5c55\u63d2\u69fd\u3002\u901a\u5e38\u80fd\u89c1\u5230\u7684\u96c6\u4e2d\u5728PCI-E x1/x4/x8/x16\u56db\u79cd\u3002</p> <p>PCI-E x16\u548cx8\u901a\u5e38\u90fd\u4ee5x16\u7684\u63d2\u69fd\u5c55\u73b0\uff0c\u53ea\u662fx8\u7684\u6570\u636e\u9488\u811a\u53ea\u6709\u4e00\u534a\u662f\u6709\u6548\u7684\uff0c\u8fd9\u79cd\u63d2\u69fd\u4e5f\u662f\u4e3b\u677f\u4e0a\u6700\u5e38\u89c1\u7684</p> <p>PCI-E x4\u540c\u6837\u662f\u5728PCI-E x16\u63d2\u69fd\u7684\u57fa\u7840\u4e0a\uff0c\u4ee5\u51cf\u5c11\u6570\u636e\u9488\u811a\u7684\u65b9\u5f0f\u5b9e\u73b0\uff0c\u4e3b\u8981\u7528\u4e8ePCI-E SSD\uff0c\u6216\u8005\u662f\u901a\u8fc7PCI-E\u8f6c\u63a5\u5361\u5b89\u88c5M.2 SSD\u7b49\u65b9\u9762\uff0c\u6240\u4ee5\u901a\u5e38\u770b\u5230\u7684\u662fM.2\u63a5\u53e3</p> <p>PCI-E x1\u63d2\u69fd\u6570\u636e\u9488\u811a\u6700\u5c11\uff0c\u9762\u5411\u7684\u4ea7\u54c1\u6bd4\u8f83\u5e7f\u6cdb\uff0c\u72ec\u7acb\u7f51\u5361\u3001\u72ec\u7acb\u58f0\u5361\u3001USB 3.0/3.1\u6269\u5c55\u5361\u7b49\u90fd\u4f1a\u7528\u5230PCI-E x1\u63d2\u69fd\u3002\u53e6\u5916\u4e00\u79cd\u5f62\u6001\u662fMini PCI-E\u63a5\u53e3\uff0c\u5e38\u89c1\u4e8eMini-ITX\u4e3b\u677f\u4ee5\u53ca\u7b14\u8bb0\u672c\u7535\u8111\u4e0a\uff0c\u591a\u6570\u7528\u6765\u6269\u5c55\u65e0\u7ebf\u7f51\u5361\uff0c\u76ee\u524d\u5730\u4f4d\u548c\u4f5c\u7528\u88abM.2\u63a5\u53e3\u6240\u53d6\u4ee3\u3002</p>"},{"location":"tech/others/sparsematrix/","title":"\u7a00\u758f\u77e9\u9635","text":""},{"location":"tech/others/sparsematrix/#sparse-matrix","title":"Sparse Matrix\u5b58\u53d6\u683c\u5f0f","text":"<p>\u5728\u7a00\u758f\u77e9\u9635\u7684\u5b58\u50a8\u4e2d\uff0c\u7531\u4e8e\u77e9\u9635\u7684\u5927\u90e8\u5206\u503c\u90fd\u662f0\uff0c\u56e0\u6b64\u76f4\u63a5\u5b58\u50a8\u77e9\u9635\u9700\u8981\u6d6a\u8d39\u5927\u91cf\u7a7a\u95f4\uff0c\u5728\u8ba1\u7b97\u65f6\u4e5f\u4f1a\u6d6a\u8d39\u5927\u91cf\u65f6\u95f4\u3002\u4e3a\u6b64\uff0c\u901a\u5e38\u7531\u4ee5\u4e0b\u51e0\u79cd\u7a00\u758f\u77e9\u9635\u5b58\u50a8\u683c\u5f0f\uff1a</p> <ul> <li>COO: \u5750\u6807\u5b58\u50a8\uff0c\u683c\u5f0f\u662f(row indices, col indices,values)\uff0c\u901a\u8fc7\u884c\u3001\u5217\u3001\u503c\u4e09\u4e2a\u53c2\u6570\u6765\u8868\u793a\u7a00\u758f\u77e9\u9635</li> <li>F-COO:</li> <li>Hi-COO:</li> <li>CSR: \u884c\u538b\u7f29\u5b58\u50a8\uff0c\u683c\u5f0f\u662f(row offsets, column indices, values)\uff0c\u538b\u7f29\u4e86COO\u65b9\u6cd5\u4e2d\u7684\u884c\u6570\u7ec4\uff0c\u8868\u793a\u5f53\u524d\u884c\u7b2c\u4e00\u4e2a\u5143\u7d20\u5728\u987a\u5e8f\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807</li> <li>CSC\uff1a\u5217\u538b\u7f29\u5b58\u50a8\uff0c\u683c\u5f0f\u662f(row indices, col offsets, values)\uff0c\u538b\u7f29\u4e86COO\u65b9\u6cd5\u4e2d\u7684\u5217\u6570\u7ec4\uff0c\u8868\u793a\u5f53\u524d\u5217\u7b2c\u4e00\u4e2a\u5143\u7d20\u5728\u987a\u5e8f\u6570\u7ec4\u4e2d\u7684\u4e0b\u6807</li> </ul>"},{"location":"tech/others/sparsematrix/#spgemm","title":"SpGEMM","text":"<p>Waiting for Completion...</p>"},{"location":"tech/others/sparsematrix/#spgett","title":"SpGETT","text":"<p>\u53c2\u89c1SpGETT.md</p>"},{"location":"tech/tools/CMake/","title":"CMake \u5b66\u4e60\u7b14\u8bb0","text":""},{"location":"tech/tools/CMake/#_1","title":"\u53c2\u8003\u6587\u6863","text":"<p>\u53c2\u8003\u5b98\u65b9Cmake Tutorial cmake-examples Cmake\u4e2d\u6587\u5b9e\u6218\u6559\u7a0b</p>"},{"location":"tech/tools/CMake/#a-basic-starting-point","title":"A Basic Starting Point","text":"<p>\u672c\u7ae0\u4ecb\u7ecd\u4e86Cmake\u7684\u57fa\u672c\u4f7f\u7528\uff0c\u5305\u62ec\u4e00\u7cfb\u5217\u57fa\u672c\u547d\u4ee4:</p> <ul> <li><code>cmake_minimum_required(VERSION 3.10)</code></li> <li><code>project(Tutorial VERSION 1.0)</code></li> <li><code>set(CMAKE_CXX_STANDARD 11) set(CMAKE_CXX_STANDARD_REQUIRED True)</code></li> <li><code>configure_file(TutorialConfig.h.in TutorialConfig.h)</code></li> <li><code>add_executable(Tutorial tutorial.cxx)</code></li> <li><code>cmake     target_include_directories(Tutorial PUBLIC                           \"${PROJECT_BINARY_DIR}\"                           \"${PROJECT_SOURCE_DIR}/MathFunctions\"                           )</code></li> </ul>"},{"location":"tech/tools/CMake/#adding-a-library","title":"Adding a Library","text":"<p>\u672c\u7ae0\u4ecb\u7ecd\u4e86<code>CMakeLists.txt</code>\u5982\u4f55\u6dfb\u52a0\u4e00\u4e2a\u5e93\uff0c\u4ee5\u53ca\u6dfb\u52a0\u7f16\u8bd1\u9009\u9879\u6765\u5f00\u542f\u5e93\u7684\u7f16\u8bd1\uff0c\u4e3b\u8981\u547d\u4ee4\u5305\u62ec\uff1a</p> <ul> <li><code>add_library(MathFunctions MathFunctions.cxx)</code></li> <li><code>add_subdirectory(MathFunctions)</code></li> <li><code>target_include_directories()</code></li> <li><code>target_link_libraries(Tutorial PUBLIC MathFunctions)</code></li> <li><code>PROJECT_SOURCE_DIR</code></li> <li><code>if()</code></li> <li><code>option(USE_MYMATH \"Use tutorial provided math implementation\" ON)</code></li> <li><code>target_compile_definitions()</code></li> <li><code>cmake     if(USE_MYMATH)         target_compile_definitions(MathFunctions PRIVATE \"USE_MYMATH\")         add_library(SqrtLibrary static mysqrt.cxx)         target_link_libraries(MathFunctions PRIVATE SqrtLibrary)     endif()</code></li> </ul>"},{"location":"tech/tools/CMake/#adding-usage-requirements-for-a-library","title":"Adding Usage Requirements for a Library","text":"<p>\u672c\u7ae0\u4ecb\u7ecd\u4e86\u73b0\u4ee3CMake\u65b9\u6cd5\uff0c\u5e76\u7ed9\u5e93\u6dfb\u52a0\u4e2a\u4eba\u7684\u4f7f\u7528\u8981\u6c42(\u63a7\u5236\u5e93\u6216\u53ef\u6267\u884c\u6587\u4ef6\u7684\u8fde\u63a5\u548c\u5305\u542b)\uff0c\u4e3b\u8981\u547d\u4ee4\u5305\u62ec\uff1a</p> <ul> <li><code>CMAKE_CURRENT_SOURCE_DIR</code></li> <li><code>target_compile_definitions()</code></li> <li><code>target_compile_options()</code></li> <li><code>target_include_directories()</code></li> <li><code>target_link_directories()</code></li> <li><code>target_link_options()</code></li> <li><code>target_precompile_headers()</code></li> <li><code>target_sources()</code></li> <li><code>PUBLIC PRIVATE INTERFACE</code>: \u4e09\u8005\u4e4b\u95f4\u6709\u4e00\u5b9a\u7684\u533a\u522b\u3002     + <code>PUBLIC</code>: \u5f53\u5e93A\u4ee5PUBLIC\u65b9\u5f0f\u94fe\u63a5\u5230\u5e93B\u65f6\uff0c\u5e93A\u4f7f\u7528\u5e93B\u7684\u63a5\u53e3\uff0c\u5e76\u4e14\u5e93A\u7684\u63a5\u53e3\u4e5f\u4f1a\u4f7f\u7528\u5e93B\u7684\u63a5\u53e3\u3002\u8fd9\u610f\u5473\u7740\u94fe\u63a5\u5230\u5e93A\u7684\u76ee\u6807\uff08\u5e93\u6216\u53ef\u6267\u884c\u6587\u4ef6\uff09\u4e5f\u4f1a\u81ea\u52a8\u94fe\u63a5\u5230\u5e93B\uff0c\u5e76\u4e14\u5e93B\u7684\u63a5\u53e3\u5c5e\u6027\uff08\u5982\u5934\u6587\u4ef6\u8def\u5f84\u3001\u5b8f\u5b9a\u4e49\u7b49\uff09\u4e5f\u4f1a\u4f20\u9012\u7ed9\u8fd9\u4e9b\u76ee\u6807\u3002     + <code>PRIVATE</code>: \u5f53\u5e93A\u4ee5PRIVATE\u65b9\u5f0f\u94fe\u63a5\u5230\u5e93B\u65f6\uff0c\u5e93A\u4f7f\u7528\u5e93B\u7684\u63a5\u53e3\uff0c\u4f46\u5e93A\u7684\u63a5\u53e3\u4e0d\u4f7f\u7528\u5e93B\u7684\u63a5\u53e3\u3002\u8fd9\u610f\u5473\u7740\u94fe\u63a5\u5230\u5e93A\u7684\u76ee\u6807\u4e0d\u4f1a\u81ea\u52a8\u94fe\u63a5\u5230\u5e93B\uff0c\u4e14\u5e93B\u7684\u63a5\u53e3\u5c5e\u6027\u4e0d\u4f1a\u4f20\u9012\u7ed9\u8fd9\u4e9b\u76ee\u6807\u3002PRIVATE\u94fe\u63a5\u9002\u7528\u4e8e\u5e93B\u4ec5\u5728\u5e93A\u7684\u5185\u90e8\u5b9e\u73b0\u4e2d\u4f7f\u7528\uff0c\u800c\u4e0d\u901a\u8fc7\u5e93A\u7684\u63a5\u53e3\u66b4\u9732\u7ed9\u5176\u4ed6\u76ee\u6807\u7684\u60c5\u51b5\u3002     + <code>INTERFACE</code>: \u5f53\u4f60\u8bbe\u7f6e\u4e00\u4e2a\u76ee\u6807\u7684INTERFACE\u5c5e\u6027\u65f6\uff0c\u8fd9\u4e9b\u5c5e\u6027\u4e0d\u4f1a\u5e94\u7528\u4e8e\u8be5\u76ee\u6807\u672c\u8eab\uff0c\u800c\u53ea\u4f1a\u5e94\u7528\u4e8e\u94fe\u63a5\u4e86\u8be5\u76ee\u6807\u7684\u5176\u4ed6\u76ee\u6807</li> </ul>"},{"location":"tech/tools/CMake/#adding-generator-expressions","title":"Adding Generator Expressions","text":"<p>\u672c\u7ae0\u4ecb\u7ecd\u4e86\u751f\u6210\u8868\u8fbe\u5f0f\uff0c\u751f\u6210\u8868\u8fbe\u5f0f\u7528\u4e8e\u5728\u7f16\u8bd1\u671f\u95f4\u751f\u6210\u4fe1\u606f\uff0c\u5305\u62ec\u903b\u8f91\uff0c\u4fe1\u606f\u548c\u8f93\u51fa\u8868\u8fbe\u5f0f\uff0c\u901a\u5e38\u7528\u4e8e\u6709\u6761\u4ef6\u7684\u6dfb\u52a0\u7f16\u8bd1\u5668\u7f16\u8bd1\u9009\u9879\uff1a</p> <ul> <li><code>cmake-generator-expressions(7)</code></li> <li><code>cmake_minimum_required()</code></li> <li><code>set()</code></li> <li><code>target_compile_options()</code></li> </ul>"},{"location":"tech/tools/CMake/#installing-and-testing","title":"Installing and Testing","text":"<p>\u672c\u7ae0\u4ecb\u7ecd\u4e86CMake\u652f\u6301\u7684\u672c\u5730\u5b89\u88c5\u89c4\u5219\uff0c\u4e00\u822c\u9700\u8981\u6307\u5b9a<code>/lib</code>\u548c<code>include</code>\u76ee\u5f55\u7684\u5b89\u88c5, \u4ee5\u53caCTest\u7684\u6d4b\u8bd5\u6846\u67b6\u548c\u6d4b\u8bd5\u51fd\u6570\u7684\u7f16\u5199\u3002</p> <p>\u7f16\u8bd1\u5b8c\u6210\u540e\uff0c\u5728<code>build</code>\u76ee\u5f55\u4e0b\u8fd0\u884c<code>cmake -VV</code>\u6216\u8005<code>cmake -C</code>\u53ef\u4ee5\u8fdb\u884cCTest\u5e76\u770b\u5230\u6d4b\u8bd5\u7ed3\u679c</p> <ul> <li><code>install()</code></li> <li><code>TARGETS FILES</code></li> <li><code>DESTIANTION</code></li> <li><code>cmake     if (TARGET SqrtLibrary)         list(APPEND installable_libs SqrtLibrary)     endif()</code></li> <li><code>enable_testing()</code></li> <li><code>add_test()</code></li> <li><code>function()</code></li> <li><code>set_tests_properties()</code></li> <li><code>ctest</code></li> <li><code>cmake     function(do_test target arg result)         add_test(NAME Test_${arg} COMMAND ${target} ${arg})         set_tests_properties(Test_${arg}          PROPERTIES PASS_REGULAR_EXPRESSION ${result}         )     endfunction()</code></li> </ul>"},{"location":"tech/tools/CMake/#adding-system-introspection","title":"Adding System Introspection","text":"<p>\u672c\u7ae0\u4e3a<code>CMakeLists.txt</code>\u6dfb\u52a0\u7cfb\u7edf\u81ea\u68c0\uff0c\u6839\u636e\u76ee\u6807\u5e73\u53f0\u662f\u5426\u5177\u6709\u67d0\u4e9b\u7279\u6027\u6765\u6dfb\u52a0\u4ee3\u7801\u6216\u66f4\u6539\u5b9e\u73b0</p> <ul> <li><code>CheckCXXSourceCompiles</code></li> <li><code>target_compile_definitions()</code></li> <li><code>check_cxx_compile_source()</code></li> <li><code>cpp     #if defined(HAVE_LOG) and defined(HAVE_EXP)     // TODO 5: If both HAVE_LOG and HAVE_EXP are defined,  use the following:         double result = std::exp(std::log(x) * 0.5);         std::cout &lt;&lt; \"Computing sqrt of \" &lt;&lt; x &lt;&lt; \" to be \" &lt;&lt; result                 &lt;&lt; \" using log and exp\" &lt;&lt; std::endl;     // else, use the existing logic.     #else         double result = x;     #endif</code></li> </ul>"},{"location":"tech/tools/CMake/#packaging-an-installer","title":"Packaging an Installer","text":"<p>\u6dfb\u52a0\u4ee5\u4e0b\u5230CMakeLists.txt\u4e2d\uff0c\u4e4b\u540e\u5c31\u53ef\u4ee5\u8c03\u7528<code>cpack</code>\u547d\u4ee4\u6253\u5305\u5b89\u88c5\u7a0b\u5e8f</p> <pre><code>    include(InstallRequiredSystemLibraries)\n    set(CPACK_RESOURCE_FILE_LICENSE \"${CMAKE_CURRENT_SOURCE_DIR}/License.txt\")\n    set(CPACK_PACKAGE_VERSION_MAJOR \"${Tutorial_VERSION_MAJOR}\")\n    set(CPACK_PACKAGE_VERSION_MINOR \"${Tutorial_VERSION_MINOR}\")\n    set(CPACK_GENERATOR \"TGZ\")\n    set(CPACK_SOURCE_GENERATOR \"TGZ\")\n    include(CPack)\n</code></pre> <p>\u6253\u5305\u547d\u4ee4\uff1a + <code>cpack</code> + <code>cpack -G ZIP -C Debug</code>: \u6307\u5b9a\u4e8c\u8fdb\u5236\u751f\u6210\u5668\u548c\u591a\u914d\u7f6e\u6784\u5efa + <code>cpack --config CPackSourceConfig.cmake</code>: \u521b\u5efa\u5b8c\u6574\u6e90\u4ee3\u7801\u6811\u7684\u6587\u6863</p>"},{"location":"tech/tools/CMake/#selecting-static-or-shared-libraries","title":"Selecting Static or Shared Libraries","text":"<ul> <li><code>set_target_properties</code></li> <li><code>option(BUILD_SHARED_LIBS \"Build using shared libraries\" ON)</code></li> <li><code>message</code></li> <li><code>cmake     if(CMAKE_BUILD_TYPE STREQUAL \"Debug\")         # \u8bbe\u7f6eDebug\u6a21\u5f0f\u7684\u7279\u5b9a\u7f16\u8bd1\u5668\u6807\u5fd7         message(STATUS \"Configuring for Debug mode\")         add_compile_definitions(MyExecutable PRIVATE DEBUG_MODE=1)         target_compile_options(MyExecutable PRIVATE -g)     elseif(CMAKE_BUILD_TYPE STREQUAL \"Release\")     # \u8bbe\u7f6eRelease\u6a21\u5f0f\u7684\u7279\u5b9a\u7f16\u8bd1\u5668\u6807\u5fd7         message(STATUS \"Configuring for Release mode\")         add_compile_definitions(MyExecutable PRIVATE RELEASE_MODE=1)         target_compile_options(MyExecutable PRIVATE -O3)     endif()</code></li> </ul>"},{"location":"tech/tools/Docker/","title":"Docker Notes","text":"<p>Docker-\u4ece\u5165\u95e8\u5230\u5b9e\u8df5\uff0c\u975e\u5e38\u4e0d\u9519 \u4e2d\u6587\u5b98\u65b9\u6587\u6863</p>"},{"location":"tech/tools/Docker/#install-on-debian12","title":"Install on Debian12","text":"<p>\u53c2\u7167\u5b98\u7f51\u6559\u7a0b</p> <pre><code># Add Docker's official GPG key:\nsudo apt-get update\nsudo apt-get install ca-certificates curl\nsudo install -m 0755 -d /etc/apt/keyrings\nsudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc\nsudo chmod a+r /etc/apt/keyrings/docker.asc\n\n# Add the repository to Apt sources:\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \\\n  $(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\\n  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null\nsudo apt-get update\n\nsudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n</code></pre>"},{"location":"tech/tools/Docker/#docker","title":"Docker\u57fa\u672c\u547d\u4ee4","text":""},{"location":"tech/tools/Docker/#1","title":"1. \u5bb9\u5668\u4f7f\u7528","text":""},{"location":"tech/tools/Docker/#_1","title":"\u9000\u51fa\u5bb9\u5668\u5feb\u6377\u952e","text":"<pre><code>CTRL+P CTRL+Q\n</code></pre>"},{"location":"tech/tools/Docker/#_2","title":"\u57fa\u672c\u547d\u4ee4","text":"<pre><code>docker ps -a #\u67e5\u770b\u6240\u6709\u5bb9\u5668\ndocker container ls #\u67e5\u770b\u6240\u6709\u6b63\u5728\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\n\ndocker start CONTAINER_ID/NAME #\u542f\u52a8\u4e00\u4e2a\u5df2\u505c\u6b62\u7684\u5bb9\u5668\ndocker stop CONTAINER_ID/NAME #\u505c\u6b62\u5bb9\u5668\ndocker restart CONTAINER_ID/NAME #\u91cd\u542f\u5bb9\u5668\ndocker rm -f CONTAINER_ID/NAME #\u5220\u9664\u5bb9\u5668\n\ndocker exec -it CONTAINER_ID/NAME /bin/bash #\u8fdb\u5165\u5bb9\u5668\ndocker attach CONTAINER_ID/NAME #\u8fdb\u5165\u5bb9\u5668, \u4e0d\u63a8\u8350\u4f7f\u7528\uff0c\u56e0\u4e3a\u9000\u51fa\u5bb9\u5668\u7ec8\u7aef\u540e\u4f1a\u5bfc\u81f4\u5bb9\u5668\u7684\u505c\u6b62\n\ndocker export CONTAINER_ID/NAME &gt; ubuntu.tar #\u5bfc\u51fa\u5bb9\u5668\u5230asc.tar\ncat docker/ubuntu.tar | docker import - test/ubuntu:v1 #\u5bfc\u5165\u5bb9\u5668\ndocker import http://example.com/exampleimage.tgz example/imagerepo:v1 #\u4ece\u6307\u5b9aURL\u6216\u76ee\u5f55\u5bfc\u5165\u5bb9\u5668\n\ndocker port CONTAINER_ID/NAME port #\u67e5\u770b\u5bb9\u5668\u5185\u67d0\u4e2a\u7aef\u53e3\u6620\u5c04\u60c5\u51b5\n</code></pre>"},{"location":"tech/tools/Docker/#_3","title":"\u65b0\u5efa\u5bb9\u5668","text":"<p>\u8fd0\u884c\u793a\u4f8b\uff1a <pre><code>docker run -v ~/hpc:/workspace/hpc  --name hpc_2310 -itd --gpus all --privileged --shm-size=4g  nvcr.io/nvidia/hpc-benchmarks:23.10 \n</code></pre> \u8be5\u547d\u4ee4\u53ef\u989d\u5916\u8bbe\u7f6e\u7684\u53c2\u6570\u8f83\u591a\uff0c\u4e3b\u8981\u53ef\u5206\u4e3a\u5bb9\u5668\u7ba1\u7406\uff0c\u7f51\u7edc\u8bbe\u7f6e\uff0cCPU/GPU\u548c\u5185\u5b58\u7684Runtime\uff0c\u4ee5\u53ca\u6743\u9650\u548cLXC\u914d\u7f6e\uff0c\u6b64\u5904\u4ec5\u5217\u4e3e\u8f83\u5e38\u4f7f\u7528\u7684\u53c2\u6570: + -v: \u6302\u8f7d\u76ee\u5f55\uff0c\u683c\u5f0f\u4e3a\uff1a\u4e3b\u673a\u76ee\u5f55:\u5bb9\u5668\u76ee\u5f55 + -p 127.0.0.1:32109:5000/udp: \u7aef\u53e3\u6620\u5c04\uff0c\u683c\u5f0f\u4e3a\uff1a\u7f51\u7edc\u5730\u5740(\u9ed8\u8ba4\u662f\u672c\u673a):\u4e3b\u673a\u7aef\u53e3:\u5bb9\u5668\u7aef\u53e3\uff0c\u9ed8\u8ba4\u7ed1\u5b9atcp\u7aef\u53e3\u3002 + -P: \u968f\u673a\u7aef\u53e3\u6620\u5c04\uff0c\u5c06expose\u7684\u7aef\u53e3\u968f\u673a\u6620\u5c04\u5230\u4e3b\u673a\u7684\u7aef\u53e3\u4e0a + -itd: i\u4ee3\u8868\u4ea4\u4e92\u6a21\u5f0f\uff0ct\u4ee3\u8868\u4e3a\u5bb9\u5668\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u4f2a\u8f93\u5165\u7ec8\u7aef\uff0cd\u4ee3\u8868\u540e\u53f0\u8fd0\u884c + --name\uff1a\u5bb9\u5668\u540d\u79f0 + -h: \u6307\u5b9a\u5bb9\u5668hostname + -e: \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u683c\u5f0f\u4e3aVARIABLE=\"VALUE\" + --env-file=[]: \u4ece\u6307\u5b9a\u6587\u4ef6\u8bfb\u5165\u73af\u5883\u53d8\u91cf\uff1b + -m: \u8bbe\u7f6e\u6700\u5927\u5185\u5b58\u4f7f\u7528 + --cpuset=\"0-2\" / --cpuset=\"0,1\": \u7ed1\u5b9a\u5bb9\u5668\u5230\u6307\u5b9aCPU\u6838\u5fc3 + --network=\"bridge\"/name: \u6307\u5b9a\u5bb9\u5668\u7684\u7f51\u7edc\u8fde\u63a5\u7c7b\u578b\uff0c\u652f\u6301 bridge/host/none/container\uff0c\u6216\u8005\u8fde\u63a5\u5230\u6307\u5b9a\u7f51\u7edc + --expose=[]: \u58f0\u660e\u5bb9\u5668\u5c06\u66b4\u9732\u7684\u7aef\u53e3\uff0c\u4ecd\u9700\u8fdb\u884c\u7aef\u53e3\u6620\u5c04 + --dns=114.114.114.114 --dns-search=DOMAIN: \u8bbe\u7f6e\u5bb9\u5668DNS\uff0c\u4ee5\u53ca\u641c\u7d22\u57df + --rm\uff1a\u5bb9\u5668\u9000\u51fa\u65f6\u81ea\u52a8\u6e05\u9664\u5bb9\u5668\u5185\u7684\u6587\u4ef6\u7cfb\u7edf\uff0c\u5982\u6302\u8f7d\u7684\u76ee\u5f55\uff0c\u7b49\u4ef7\u4e8e\u5bb9\u5668\u63a8\u51fa\u540edocker rm -v CONTAINER_ID</p>"},{"location":"tech/tools/Docker/#2","title":"2. \u955c\u50cf\u4f7f\u7528","text":""},{"location":"tech/tools/Docker/#_4","title":"\u83b7\u53d6\u955c\u50cf","text":"<p><pre><code>docker pull pytorch/latest\ndocker pull -a #\u4e0b\u8f7d\u4e00\u4e2a\u4ed3\u5e93\u4e2d\u6240\u6709\u955c\u50cf tag\ndocker pull --disable-content-trust true #\u7981\u7528\u955c\u50cf\u9a8c\u8bc1\ndocker pull --platform=linux/arm64 #\u8bbe\u7f6e\u955c\u50cf\u6240\u5c5e\u5e73\u53f0   \n</code></pre> \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cdocker pull \u547d\u4ee4\u4ece Docker Hub \u4e0b\u8f7d\u955c\u50cf\u3002\u5982\u679c\u8981\u4f7f\u7528\u955c\u50cf\u6e90\uff0c\u6216\u8005\u4fee\u6539<code>/etc/docker/daemon.json</code>\u5982\u4e0b\uff1a <pre><code>#\u6dfb\u52a0\u955c\u50cf\u6e90\nsudo vim /etc/docker/daemon.json \n{\n    \"registry-mirrors\" : [\n    \"https://registry.docker-cn.com\",\n    \"http://hub-mirror.c.163.com\",\n    \"https://docker.mirrors.ustc.edu.cn\",\n    \"https://cr.console.aliyun.com\",\n    \"https://mirror.ccs.tencentyun.com\"\n  ]\n}\n#\u91cd\u542fDocker\u670d\u52a1\n$ sudo systemctl daemon-reload\n$ sudo systemctl restart docker\n</code></pre></p>"},{"location":"tech/tools/Docker/#_5","title":"\u57fa\u672c\u547d\u4ee4","text":"<pre><code>docker images #\u67e5\u770b\u6240\u6709\u955c\u50cf\ndocker image ls keyword #\u5217\u51fa\u548c\u5173\u952e\u8bcd\u76f8\u5173\u7684\u955c\u50cf\n\ndocker rmi imgae_name #\u5220\u9664\u955c\u50cf\ndocker commit -m=\"New Version\" -a=\"Squarehuang\" CONTAINER_ID/NAME asc24:v1  #\u4ece\u5bb9\u5668\u5bfc\u51fa\u955c\u50cf\ndocker diff CONTAINER_ID/NAME #\u67e5\u770b\u5bb9\u5668\u5b58\u50a8\u5c42\u7684\u6539\u52a8\n\ndocker tag ubuntu:18.04 username/ubuntu:18.04:dev #\u7ed9\u955c\u50cf\u6253\u6807\u7b7e\n\ndocker save alpine | gzip &gt; alpine-latest.tar.gz #\u4fdd\u5b58\u955c\u50cf\u5e76\u7528gzip\u4e9a\u7d22\ndocker load -i alpine-latest.tar.gz #\u52a0\u8f7d\u955c\u50cf\n</code></pre>"},{"location":"tech/tools/Docker/#dockerhub","title":"DockerHub\u4f7f\u7528","text":"<pre><code>docker login #\u767b\u5f55DockerHub\ndocker logout #\u9000\u51fa\ndocker search keyword #\u5728DockerHub\u4e0a\u641c\u7d22\u5173\u952e\u8bcd\u4e3akeyword\u7684\u955c\u50cf\n</code></pre>"},{"location":"tech/tools/Docker/#3-docker","title":"3. Docker\u5bb9\u5668\u4e92\u8054","text":""},{"location":"tech/tools/Docker/#docker_1","title":"Docker\u56db\u79cd\u7f51\u7edc\u7c7b\u578b","text":"<ul> <li>bridge: \u9ed8\u8ba4\u7f51\u7edc\uff0c\u5bb9\u5668\u9ed8\u8ba4\u4f7f\u7528\u7684\u7f51\u7edc, \u8fd9\u4e2a\u7f51\u7edc\u7c7b\u578b\u4e3a\u5bb9\u5668\u63d0\u4f9b\u4e86\u9694\u79bb\u7684\u7f51\u7edc\u73af\u5883\u3002<ul> <li>\u6bcf\u4e2a\u5bb9\u5668\u90fd\u4f1a\u5206\u914d\u4e00\u4e2a\u865a\u62df\u7684\u4ee5\u592a\u7f51\u63a5\u53e3\uff0c\u5e76\u8fde\u63a5\u5230 Docker \u7684\u9ed8\u8ba4\u6865\u63a5\u7f51\u7edc\uff08\u901a\u5e38\u662f docker0\uff09</li> <li>\u5bb9\u5668\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7 IP \u5730\u5740\u4e92\u76f8\u901a\u4fe1</li> <li>\u5bb9\u5668\u53ef\u4ee5\u901a\u8fc7 NAT\uff08\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff09\u8bbf\u95ee\u5916\u90e8\u7f51\u7edc</li> <li>\u5bb9\u5668\u4e0e\u5bbf\u4e3b\u673a\u53ef\u4ee5\u901a\u8fc7\u7aef\u53e3\u6620\u5c04\uff08port mapping\uff09\u8fdb\u884c\u901a\u4fe1</li> </ul> </li> </ul> <ul> <li>host: \u5bb9\u5668\u5171\u4eab\u4e3b\u673a\u7684\u7f51\u7edc\uff0c\u4f7f\u7528 host \u7f51\u7edc\u7684\u5bb9\u5668\u5c06\u4e0d\u4f1a\u83b7\u5f97\u81ea\u5df1\u7684 IP \u5730\u5740\uff0c\u800c\u662f\u4f7f\u7528\u5bbf\u4e3b\u673a\u7684 IP \u5730\u5740\u3002<ul> <li>\u7f51\u7edc\u6027\u80fd\u66f4\u9ad8</li> <li>\u5bb9\u5668\u7aef\u53e3\u548c\u5bbf\u4e3b\u673a\u7aef\u53e3\u662f\u76f8\u540c\u7684, \u5171\u4eab\u76f8\u540c\u7684\u7f51\u7edc\u6808</li> </ul> </li> <li>none: \u4e3a\u5bb9\u5668\u63d0\u4f9b\u4e00\u4e2a\u5b8c\u5168\u9694\u79bb\u7684\u7f51\u7edc\u73af\u5883\u3002\u5bb9\u5668\u5c06\u4e0d\u4f1a\u8fde\u63a5\u5230\u4efb\u4f55\u7f51\u7edc\uff0c\u4e5f\u4e0d\u4f1a\u5206\u914d\u4efb\u4f55\u7f51\u7edc\u63a5\u53e3\u3002<ul> <li>\u53ea\u6709\u4e00\u4e2a\u56de\u73af\u63a5\u53e3lo</li> </ul> </li> <li>container:container_name : \u4f7f\u4e00\u4e2a\u5bb9\u5668\u5171\u4eab\u53e6\u4e00\u4e2a\u5bb9\u5668\u7684\u7f51\u7edc\u547d\u540d\u7a7a\u95f4\u3002\u4f7f\u7528\u8fd9\u79cd\u7f51\u7edc\u6a21\u5f0f\u7684\u5bb9\u5668\u5c06\u4e0e\u6307\u5b9a\u7684\u5bb9\u5668\u5171\u4eab IP \u5730\u5740\u548c\u7f51\u7edc\u63a5\u53e3\u3002<ul> <li>\u4e24\u4e2a\u5bb9\u5668\u5171\u4eab\u76f8\u540c\u7684\u7f51\u7edc\u6808\uff0c\u62e5\u6709\u76f8\u540c\u7684 IP \u5730\u5740\u3002</li> </ul> </li> </ul>"},{"location":"tech/tools/Docker/#_6","title":"\u67e5\u770b\u5bb9\u5668\u7f51\u7edc","text":"<pre><code>docker network ls\n</code></pre>"},{"location":"tech/tools/Docker/#docker_2","title":"\u65b0\u5efaDocker\u7f51\u7edc\u5e76\u8fde\u63a5","text":"<ul> <li>-d: \u6307\u5b9aDocker\u7f51\u7edc\u7c7b\u578b\uff0cbridge/overlay</li> <li>\u53ef\u4ee5\u7ed9\u591a\u4e2acontainer\u521b\u5efa\u4e00\u4e2aBridge\uff0c\u8ba9\u5b83\u4eec\u80fd\u591f\u4e92\u8054 <pre><code>docker network create -d bridge net-name\ndocker run -itd --name test1 --network  net-name ubuntu /bin/bash\n</code></pre></li> <li>\u914d\u7f6e\u5bb9\u5668dns: \u9700\u8981\u4fee\u6539/etc/docker/daemon.json <pre><code># /etc/docker/daemon.json\n{\n   \"dns\" : [\n    \"114.114.114.114\",\n    \"8.8.8.8\"\n  ]\n}\n# /etc/resolv.conf \u67e5\u770bdns\u914d\u7f6e\u60c5\u51b5\ndomain internal.zjusct.io\nsearch internal.zjusct.io complement.com\nnameserver 172.25.2.253 \n</code></pre></li> </ul>"},{"location":"tech/tools/Docker/#docker_3","title":"Docker\u6253\u5305\u6307\u5357","text":""},{"location":"tech/tools/Docker/#_7","title":"\u57fa\u672c\u547d\u4ee4","text":"<p>\u6784\u5efa\u540d\u79f0\u4e3aimage_name\u7684\u955c\u50cf\uff0c<code>.</code>\u6307\u5b9a\u7684\u662fContext\u7684\u8def\u5f84\uff0c\u5305\u62ec\u672c\u5730\u6587\u4ef6\u548cDockerfile\uff0c<code>-f</code>\u53c2\u6570\u6307\u7684\u662fDockerfile\u7684\u540d\u79f0, \u5e94\u8be5\u5b58\u5728\u4e0a\u4e0b\u6587\u8def\u5f84\u4e2d, <code>--no-cache</code>\u544a\u8bc9Docker\u4e0d\u8981\u4f7f\u7528\u7f13\u5b58\u6765\u6784\u5efa\u955c\u50cf <pre><code>docker build -t image_name . -f Dockerfile_specific .\ndocker build -t hello-world https://github.com/docker-library/hello-world.git#master:amd64/hello-world #\u4eceGit repo\u6784\u5efa\u955c\u50cf\uff0c\u6307\u5b9a\u5206\u652f\u662fmaster\uff0c\u6784\u5efa\u76ee\u5f55\u662famd64/hello-world\ndocker build - &lt; context.tar.gz #\u4ece\u4e0a\u4e0b\u6587\u538b\u7f29\u5305\u4e2d\u8fdb\u884c\u6784\u5efa\n</code></pre> \u4ece\u5f53\u524d\u5bb9\u5668\u5bfc\u51fa\u955c\u50cf,\u5b9e\u9645\u4e0a\u662f\u5728\u539f\u6765\u955c\u50cf\u7684\u57fa\u7840\u4e0a\uff0c\u5c06\u5f53\u524d\u5bb9\u5668\u7684\u5b58\u50a8\u5c42\u53e0\u52a0\uff0c\u6784\u6210\u65b0\u7684\u955c\u50cf\u3002\u4f46\u8fd9\u79cd\u7ecf\u7531docker commit\u751f\u6210\u7684\u955c\u50cf\u79f0\u4e3a\"\u9ed1\u7bb1\u955c\u50cf\",\u5b83\u6709\u4e24\u5927\u574f\u5904\uff1a + \u6784\u5efa\u5386\u53f2\u4e0d\u660e\uff1a\u65e0\u6cd5\u5f97\u77e5\u4ece\u539f\u6709\u955c\u50cf\u4e0a\u6267\u884c\u4e86\u4ec0\u4e48\u64cd\u4f5c\u6765\u751f\u6210\u4e86\u65b0\u955c\u50cf\uff0c\u5bfc\u81f4\u955c\u50cf\u65e0\u6cd5\u7ef4\u62a4 + \u4f53\u79ef\u5e9e\u5927\uff1a\u7531\u4e8e\u5b58\u50a8\u5c42\u7684\u53e0\u52a0\uff0c\u65b0\u955c\u50cf\u7684\u4f53\u79ef\u4f1a\u6bd4\u539f\u6709\u955c\u50cf\u5927\u5f88\u591a\u3002\u800c\u4e14\uff0c\u9664\u4e86\u76ee\u6807\u64cd\u4f5c\uff0c\u5b9e\u9645\u4e0a\u53ef\u80fd\u6709\u5927\u91cf\u7684\u65e0\u5173\u5185\u5bb9\u88ab\u6dfb\u52a0\u8fdb\u6765\uff0c\u4ece\u800c\u589e\u5927\u4e86\u955c\u50cf\u7684\u4f53\u79ef\u3002 <pre><code>docker commit -m=\"New Version\" -a=\"Squarehuang\" CONTAINER_ID/NAME asc24:v1  #\u4ece\u5bb9\u5668\u5bfc\u51fa\u955c\u50cf\ndocker history CONTAINER_ID/NAME #\u67e5\u770b\u955c\u50cf\u63d0\u4ea4\u5386\u53f2\ndocker diff CONTAINER_ID/NAME #\u67e5\u770b\u5bb9\u5668\u5b58\u50a8\u5c42\u7684\u6539\u52a8\n</code></pre> \u6240\u4ee5\u6700\u597d\u7684\u65b9\u5f0f\u5c31\u662f\u901a\u8fc7Dockerfile\u6765\u6784\u5efa\u955c\u50cf...</p>"},{"location":"tech/tools/Docker/#dockerfile","title":"Dockerfile\u7f16\u5199\u6307\u5357","text":"<p>Dockerfile\u5b98\u65b9\u6587\u6863 \u6bcf\u4e00\u4e2aDocker\u7684\u6784\u5efa\u90fd\u9700\u8981\u7f16\u5199\u4e00\u4e2aDockerfile\uff0cDockerfile\u7f16\u5199\u8981\u70b9\u53c2\u8003\u5982\u4e0b\uff1a + <code>FROM</code>: FROM\u4ece\u67d0\u4e2a\u955c\u50cf\u5f00\u59cb\u6784\u5efa\uff0c\u4e5f\u53ef\u4ee5\u662f<code>scratch</code>\uff0c\u4ee3\u8868\u4e0d\u9700\u8981\u4ece\u4efb\u4f55\u5df2\u6709\u955c\u50cf\u6784\u5efa <pre><code>FROM scratch\n</code></pre> + <code>RUN</code>: RUN\u547d\u4ee4\u6267\u884c\u4e00\u6b21\u5c31\u662f\u4e00\u5c42\uff0c\u6240\u4ee5\u5c3d\u91cf\u5c06\u591a\u4e2a\u547d\u4ee4\u5408\u5e76\u6210\u4e00\u4e2a\u547d\u4ee4\uff0c\u51cf\u5c11\u955c\u50cf\u5c42\u6570\u3002\u5e76\u4e14\u5728\u6267\u884c\u540e\uff0c\u8981\u5bf9\u5f53\u524d\u5c42\u5f15\u5165\u7684\u65e0\u5173\u6587\u4ef6\u8fdb\u884c\u6e05\u7a7a\uff0c\u4f8b\u5982apt\u7f13\u5b58\u6587\u4ef6\uff0c\u4efb\u4f55\u5728\u5728\u4e0b\u4e00\u5c42\u65e0\u5173\u7684\u4e1c\u897f\u90fd\u5e94\u8be5\u5728\u5f53\u524d\u5c42\u6267\u884c\u6700\u540e\u6e05\u7406\u6389\u3002 <pre><code>RUN echo '&lt;h1&gt;Hello, Docker!&lt;/h1&gt;' &gt; /usr/share/nginx/html/index.html\nRUN [\"/bin/sh\", \"-c\", \"echo '&lt;h1&gt;Hello, Docker!&lt;/h1&gt;' &gt; /usr/share/nginx/html/index.html\"]\n</code></pre> + <code>COPY</code>: \u5c06\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d\u6e90\u8def\u5f84\u7684\u6587\u4ef6/\u76ee\u5f55\u590d\u5236\u5230\u76ee\u6807\u8def\u5f84\u4e2d\uff0c\u4f1a\u4fdd\u7559\u6e90\u6587\u4ef6\u7684\u5404\u79cd\u5143\u6570\u636e\u3002 <pre><code>COPY [--chown=&lt;user&gt;:&lt;group&gt;] &lt;\u6e90\u8def\u5f84&gt;... &lt;\u76ee\u6807\u8def\u5f84&gt;\nCOPY [--chown=&lt;user&gt;:&lt;group&gt;] [\"&lt;\u6e90\u8def\u5f841&gt;\",... \"&lt;\u76ee\u6807\u8def\u5f84&gt;\"]\nCOPY --from=nginx:latest /etc/nginx/nginx.conf /nginx.conf # COPY\u4e5f\u53ef\u4ee5\u4ece\u67d0\u4e2a\u955c\u50cf\u4e2d\u590d\u5236\u6587\u4ef6\n</code></pre> tips:\u5982\u679c\u6e90\u8def\u5f84\u4e3a\u6587\u4ef6\u5939\uff0c\u590d\u5236\u7684\u65f6\u5019\u4e0d\u662f\u76f4\u63a5\u590d\u5236\u8be5\u6587\u4ef6\u5939\uff0c\u800c\u662f\u5c06\u6587\u4ef6\u5939\u4e2d\u7684\u5185\u5bb9\u590d\u5236\u5230\u76ee\u6807\u8def\u5f84 + <code>CMD</code>: \u7528\u4e8e\u6307\u5b9a\u5bb9\u5668\u4e3b\u8fdb\u7a0b\u7684\u542f\u52a8\u547d\u4ee4 <pre><code>CMD &lt;command&gt; &lt;param1&gt; &lt;param2&gt; #Shell\u683c\u5f0f\u9ed8\u8ba4\u7528sh -c\u8fdb\u884c\u6267\u884c\uff0c\u6240\u4ee5\u53c2\u6570\u90fd\u4f1a\u4ea4\u7ed9Shell\u89e3\u6790\nCMD [\"Executable\",\"Param1\",\"Param2\"]\nCMD &lt;param1&gt; &lt;param2&gt; # \u6307\u5b9aEntryPoint\u540e\n</code></pre> tips: \u6b64\u5904\u9700\u8981\u6307\u51fa\uff0cDocker\u548c\u865a\u62df\u673a\u4e0d\u540c\uff0c\u5bb9\u5668\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u8fdb\u7a0b\uff0c\u56e0\u6b64\u5bb9\u5668\u4e2d\u5e76\u6ca1\u6709\u540e\u53f0\u670d\u52a1\u7684\u6982\u5ff5\uff0c\u5e94\u7528\u90fd\u5e94\u8be5\u4ee5\u524d\u53f0\u6267\u884c\u3002\u6240\u4ee5CMD\u7684\u547d\u4ee4\u5e94\u8be5\u662f\u4e00\u4e2a\u4e00\u76f4\u8fd0\u884c\u7684\u524d\u53f0\u670d\u52a1\uff0c\u5426\u5219\u4e3b\u8fdb\u7a0b\u8fd0\u884c\u7ed3\u675f\u540e\u5bb9\u5668\u968f\u4e4b\u9000\u51fa + <code>ENTRYPOINT</code>: \u7528\u4e8e\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u65f6\u6267\u884c\u7684\u547d\u4ee4\uff0c\u53ef\u4ee5\u901a\u8fc7<code>docker run --entrypoint</code>\u8986\u76d6\uff0c\u4f1a\u5c06<code>CMD</code>\u7684\u5185\u5bb9\u4f5c\u4e3a\u53c2\u6570\u4f20\u9012\u7ed9<code>ENTRYPOINT</code>\u6307\u4ee4\uff0c\u5b9e\u9645\u6267\u884c\u65f6\u53d8\u6210 <pre><code># Dockerfile\nENTRYPOINT \"&lt;CMD&gt;\"\n</code></pre> + <code>ENV</code>: \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf <pre><code># Dockerfile\nENV VERSION=1.0 DEBUG=on \\\n    NAME=\"Happy Feet\"\n</code></pre> + <code>ARG</code>: \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\uff0c\u4f46\u662f<code>ARG</code>\u8bbe\u7f6e\u7684\u73af\u5883\u53d8\u91cf\u5728\u5c06\u6765\u5bb9\u5668\u8fd0\u884c\u65f6\u662f\u4e0d\u5b58\u5728\u7684\u3002<code>docker build --build-arg=</code> <pre><code># Dockerfile\n# \u53ea\u5728 FROM \u4e2d\u751f\u6548\nARG DOCKER_USERNAME=library\nFROM ${DOCKER_USERNAME}/alpine\n\n# \u8981\u60f3\u5728 FROM \u4e4b\u540e\u4f7f\u7528\uff0c\u5fc5\u987b\u518d\u6b21\u6307\u5b9a\nARG DOCKER_USERNAME=library\nRUN set -x ; echo ${DOCKER_USERNAME}\n</code></pre> + <code>VOLUME</code>: \u5b9a\u4e49\u533f\u540d\u5377\uff0c\u907f\u514d\u5411\u5bb9\u5668\u5b58\u50a8\u5c42\u4e2d\u5199\u5165\u5927\u91cf\u6570\u636e\uff0c\u4efb\u4f55\u5411VOLUME\u4e2d\u5199\u5165\u7684\u4fe1\u606f\u90fd\u4e0d\u4f1a\u8bb0\u5f55\u8fdb\u5bb9\u5668\u5b58\u50a8\u5c42 + <code>EXPOSE</code>: \u58f0\u660e\u5bb9\u5668\u8fd0\u884c\u65f6\u63d0\u4f9b\u670d\u52a1\u7684\u7aef\u53e3\uff0c\u4f46\u5e76\u6ca1\u6709\u5b9e\u9645\u6620\u5c04 + <code>WORKDIR</code>: \u66f4\u6539\u4e4b\u540e\u7684RUN\u3001CMD\u3001ENTRYPOINT\u3001COPY\u548cADD\u6307\u4ee4\u7684\u5de5\u4f5c\u76ee\u5f55\u3002\u5982\u679c\u662f\u76f8\u5bf9\u8def\u5f84\uff0c\u5219\u4e0e\u4e0a\u4e00\u4e2aWORKDIR\u76f8\u5173\u3002 <pre><code># Dockerfile\nWORKDIR /app\nWORKDIR test\n</code></pre> + <code>USER</code>: \u66f4\u6539RUN\u3001CMD\u3001ENTRYPOINT\u3001COPY\u548cADD\u6307\u4ee4\u7684\u6267\u884c\u7528\u6237\u3002\u7528\u6237\u5fc5\u987b\u4e8b\u5148\u5efa\u7acb\u597d\u3002root\u7528\u6237\u6267\u884c\u7684\u811a\u672c\uff0c\u82e5\u5e0c\u671b\u66f4\u6362\u8eab\u4efd\uff0c\u5efa\u8bae\u4f7f\u7528<code>gosu</code> <pre><code># Dockerfile\n# \u5efa\u7acb redis \u7528\u6237\uff0c\u5e76\u4f7f\u7528 gosu \u6362\u53e6\u4e00\u4e2a\u7528\u6237\u6267\u884c\u547d\u4ee4\nRUN groupadd -r redis &amp;&amp; useradd -r -g redis redis\n# \u4e0b\u8f7d gosu\nRUN wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/1.12/gosu-amd64\" \\\n    &amp;&amp; chmod +x /usr/local/bin/gosu \\\n    &amp;&amp; gosu nobody true\n# \u8bbe\u7f6e CMD\uff0c\u5e76\u4ee5\u53e6\u5916\u7684\u7528\u6237\u6267\u884c\nCMD [ \"exec\", \"gosu\", \"redis\", \"redis-server\" ]\n</code></pre> + <code>HEALTHCHECK</code>: \u901a\u8fc7\u8be5\u6307\u4ee4\u6307\u5b9a\u4e00\u884c\u547d\u4ee4\uff0c\u7528\u8fd9\u884c\u547d\u4ee4\u6765\u5224\u65ad\u5bb9\u5668\u4e3b\u8fdb\u7a0b\u7684\u670d\u52a1\u72b6\u6001\u662f\u5426\u8fd8\u6b63\u5e38\uff0c\u4ece\u800c\u6bd4\u8f83\u771f\u5b9e\u7684\u53cd\u5e94\u5bb9\u5668\u5b9e\u9645\u72b6\u6001\u3002 \u548c<code>CMD</code>,<code>ENTRYPOINT</code>\u4e00\u6837\uff0c<code>HEALTHCHECK</code>\u4e5f\u662f\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c\u5982\u679c\u6709\u591a\u4e2a\uff0c\u53ea\u6709\u6700\u540e\u4e00\u4e2a\u751f\u6548\u3002 <pre><code># Dockerfile\nFROM nginx\nRUN apt-get update &amp;&amp; apt-get install -y curl &amp;&amp; rm -rf /var/lib/apt/lists/*\nHEALTHCHECK --interval=5s --timeout=3s --retries=3 \\\n  CMD curl -fs http://localhost/ || exit 1\n\n# \u67e5\u770b\u5065\u5eb7\u68c0\u67e5\u547d\u4ee4\u7684\u8f93\u51fa\ndocker inspect --format '{{json .State.Health}}' CONTAINER_NAME/ID | python -m json.tool\n</code></pre> + <code>ONBUILD</code>: \u8be5\u547d\u4ee4\u540e\u7684Docker\u6307\u4ee4\u53ea\u4f1a\u5728\u4ee5\u5f53\u524d\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\uff0c\u53bb\u6784\u5efa\u4e0b\u4e00\u7ea7\u955c\u50cf\u7684\u65f6\u5019\u624d\u4f1a\u6267\u884c + <code>SHELL</code>: \u8be5\u547d\u4ee4\u6307\u5b9a\u4e86<code>RUN</code>\u3001<code>CMD</code>\u3001<code>ENTRYPOINT</code>\u7684\u9ed8\u8ba4shell <pre><code>SHELL [\"/bin/sh\", \"-cex\"]\n</code></pre></p>"},{"location":"tech/tools/Docker/#docker_4","title":"Docker\u591a\u9636\u6bb5\u6784\u5efa","text":"<p><code>as</code>: \u4f7f\u7528<code>as</code>\u6765\u4e3a\u67d0\u4e00\u9636\u6bb5\u547d\u540d\uff0c\u5f53\u53ea\u60f3\u6784\u5efa<code>builder</code>\u9636\u6bb5\u7684\u955c\u50cf\u65f6\uff0c\u53ef\u4ee5\u589e\u52a0<code>--target=builder</code>\u53c2\u6570 <code>COPY --from=0 /go/src/github.com/go/helloworld/app .</code>: \u4ece\u4e0a\u4e00\u9636\u6bb5\u7684\u955c\u50cf\u4e2d\u590d\u5236\u6587\u4ef6 <pre><code>FROM golang:alpine as builder\nRUN apk --no-cache add git\nWORKDIR /go/src/github.com/go/helloworld/\nRUN go get -d -v github.com/go-sql-driver/mysql\nCOPY app.go .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .\n\nFROM alpine:latest as prod\nRUN apk --no-cache add ca-certificates\nWORKDIR /root/\nCOPY --from=0 /go/src/github.com/go/helloworld/app .\nCMD [\"./app\"]\n</code></pre></p>"},{"location":"tech/tools/Docker/#dockermpi","title":"Docker\u5185\u4f7f\u7528MPI","text":"<p>......\u8fd8\u6ca1\u5b9e\u8df5\u8fc7 </p>"},{"location":"tech/tools/Docker/#docker-compose","title":"Docker Compose\u5b9e\u8df5","text":"<p><code>Compose</code>\u9879\u76ee\u662fDocker\u5b98\u65b9\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u8d1f\u8d23\u5b9e\u73b0\u5bf9Docker\u5bb9\u5668\u96c6\u7fa4\u7684\u5feb\u901f\u7f16\u6392\uff0c\u5373\u300c\u5b9a\u4e49\u548c\u8fd0\u884c\u591a\u4e2a Docker \u5bb9\u5668\u7684\u5e94\u7528\u300d\u3002 <code>Compose</code>\u4e2d\u6709\u4e24\u4e2a\u5173\u952e\u6982\u5ff5\uff1a</p> <ul> <li>\u670d\u52a1 (service)\uff1a\u4e00\u4e2a\u5e94\u7528\u7684\u5bb9\u5668\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5305\u62ec\u82e5\u5e72\u8fd0\u884c\u76f8\u540c\u955c\u50cf\u7684\u5bb9\u5668\u5b9e\u4f8b\u3002</li> </ul> <ul> <li>\u9879\u76ee (project)\uff1a\u7531\u4e00\u7ec4\u5173\u8054\u7684\u5e94\u7528\u5bb9\u5668\u7ec4\u6210\u7684\u4e00\u4e2a\u5b8c\u6574\u4e1a\u52a1\u5355\u5143\uff0c\u5728 docker-compose.yml \u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002</li> </ul> <p><code>docker-compose.yml</code>\uff1aCompose\u4f7f\u7528\u7684\u4e3b\u6a21\u677f\u6587\u4ef6</p>"},{"location":"tech/tools/Docker/#_8","title":"\u57fa\u672c\u547d\u4ee4","text":"<ul> <li>-f, --file FILE \u6307\u5b9a\u4f7f\u7528\u7684 Compose \u6a21\u677f\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e3a docker-compose.yml\uff0c\u53ef\u4ee5\u591a\u6b21\u6307\u5b9a\u3002</li> <li>-p, --project-name NAME \u6307\u5b9a\u9879\u76ee\u540d\u79f0\uff0c\u9ed8\u8ba4\u5c06\u4f7f\u7528\u6240\u5728\u76ee\u5f55\u540d\u79f0\u4f5c\u4e3a\u9879\u76ee\u540d\u3002</li> <li>--verbose \u8f93\u51fa\u66f4\u591a\u8c03\u8bd5\u4fe1\u606f\u3002</li> <li>-v, --version \u6253\u5370\u7248\u672c\u5e76\u9000\u51fa\u3002</li> </ul> <pre><code>docker compose build #\u91cd\u65b0\u6784\u5efa\u9879\u76ee\u4e2d\u7684\u670d\u52a1\u5bb9\u5668\n  --force-rm #\u5220\u9664\u6784\u5efa\u8fc7\u7a0b\u4e2d\u7684\u4e34\u65f6\u5bb9\u5668\n  --no-cache #\u6784\u5efa\u955c\u50cf\u8fc7\u7a0b\u4e2d\u4e0d\u4f7f\u7528 cache\n  --pull     #\u59cb\u7ec8\u5c1d\u8bd5\u901a\u8fc7 pull \u6765\u83b7\u53d6\u66f4\u65b0\u7248\u672c\u7684\u955c\u50cf\u3002\ndocker compose config #\u9a8c\u8bc1 Compose \u6587\u4ef6\u683c\u5f0f\u662f\u5426\u6b63\u786e\ndocker compose down   #\u505c\u6b62up\u547d\u4ee4\u7684\u542f\u52a8\u5bb9\u5668\uff0c\u5e76\u79fb\u9664\u7f51\u7edc\ndocker compose images #\u5217\u51faCompose\u6587\u4ef6\u4e2d\u7684\u5305\u542b\u7684\u6240\u6709\u955c\u50cf\ndocker compose kill -s SIGKILL/SIGINT/SIGTERM #\u505c\u6b62\u670d\u52a1\u5bb9\u5668\ndocker compose logs #\u67e5\u770b\u5bb9\u5668\u8f93\u51fa\uff0c\u4e0d\u540c\u5bb9\u5668\u989c\u8272\u4e0d\u4e00\u6837\ndocker logs -f -t --tail 10 CONTAINER_ID/NAME #\u5b9e\u65f6\u67e5\u770b\u5bb9\u5668\u8f93\u51fa\uff0c\u5e26\u65f6\u95f4\u6233\uff0c\u540e\u5341\u884c\ndocker compose port  [options] SERVICE PRIVATE_PORT \n  --index=index #\u6307\u5b9a\u591a\u4e2a\u5bb9\u5668\u4e2d\u6240\u8981\u6253\u5370\u7684\u5bb9\u5668\u5e8f\u53f7\uff0c\u9ed8\u8ba4\u4e3a1\ndocker compose ps\n  -q #\u53ea\u6253\u5370ID\u4fe1\u606f\ndocker-compose restart #\u91cd\u542f\u9879\u76ee\u4e2d\u7684\u670d\u52a1\ndocker-compose rm      #\u5220\u9664\u6240\u6709\u670d\u52a1\u5bb9\u5668\ndocker-compose up -d   #\u540e\u53f0\u542f\u52a8\u5e76\u8fd0\u884c\u6240\u6709\u7684\u5bb9\u5668\n</code></pre>"},{"location":"tech/tools/Docker/#docker-composeyml","title":"docker-compose.yml\u7f16\u5199\u6307\u5357","text":"<p>\u6bcf\u4e2a\u670d\u52a1\u90fd\u5fc5\u987b\u901a\u8fc7 image \u6307\u4ee4\u6307\u5b9a\u955c\u50cf\u6216 build \u6307\u4ee4\uff08\u9700\u8981 Dockerfile\uff09\u7b49\u6765\u81ea\u52a8\u6784\u5efa\u751f\u6210\u955c\u50cf\u3002 <pre><code># docker-compose.yml(image)\nservices:\n  webapp:\n    image: examples/web\n    ports:\n      - \"80:80\"\n    volumes:\n      - \"/data\"\n</code></pre> \u6b64\u5904\u5c55\u793a\u4e86\u5e38\u89c1\u7684\u6240\u6709\u5bb9\u5668build\u65f6\u7684\u53c2\u6570\uff1a\u53c2\u8003\u624b\u518c <pre><code># docker-compose.yml(build)\nservices:\n  webapp:\n    build: \n      context: ./dir\n      dockerfile: Dockerfile-build\n      args: \n        buildno: 1\n      entrypoint: /code/entrypoint.sh\n      user: nginx\n      working_dir: /code\n      domainname: example.com\n      hostname: test\n      mac_address: 02:42:ac:11:00:02\n      privileged: true\n      restart: always\n      read_only: true\n      tty: true\n      cache_from:\n        - alpine:latest\n        - corp/web_app:3.14\n      cap_add:\n        - ALL\n      commands: echo \"hello world\"\n      container_name:  docker-web-container(default: \u9879\u76ee\u540d\u79f0_\u670d\u52a1\u540d\u79f0_\u5e8f\u53f7)\n      depends_on:\n        - db\n        - redis\n      dns:\n        - 8.8.8.8\n      dns_search:\n        - domain1.example.com\n      tmpfs:\n        - /run\n      env_file:\n        - ./common.env\n      environment:\n        - DEV_ENV=development\n      expose:\n        - \"3000\"\n      extra_hosts:\n         - \"dockerhub:52.1.157.61\"\n      healthcheck:\n        test: [\"CMD\", \"curl\", \"-f\", \"http://localhost\"]\n        interval: 1m30s\n        timeout: 10s\n        retries: 3\n      labels:\n        com.startupteam.release: \"rc3 for v1.0\"\n      network_mode: \"bridge\"\n      networks:\n        - some-network\n      ports:\n        - \"3000\"\n        - \"8000:8000\"\n      volumes:\n        - mysql_data:/var/lib/mysql\n      secrets:\n        - db_root_password\n  db:\n    image: \"mongo:${MONGO_VERSION}\"\n  redis:\n    image: redis\n\n  secrets:\n    file: ./my_secrets.txt\n</code></pre> \u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u5305\u62ec<code>domainname, entrypoint, hostname, ipc, mac_address, privileged, read_only, shm_size, restart, stdin_open, tty, user, working_dir</code>\uff0c\u57fa\u672c\u548c<code>docker run</code>\u4e2d\u5bf9\u5e94\u53c2\u6570\u529f\u80fd\u4e00\u81f4</p>"},{"location":"tech/tools/Docker/#docker-swarm","title":"Docker Swarm","text":"<p>\u4e00\u4e2a\u7528\u4e8e\u7ba1\u7406\u591a\u4e2a\u88c5\u6709Docker\u7684\u673a\u5668\u7684\u96c6\u7fa4\u7684\u8f6f\u4ef6\uff0c\u672a\u5b8c\u5f85\u7eed......</p>"},{"location":"tech/tools/FileSystem/","title":"FileSystem Notes","text":"<p>\u5f00\u4e2a\u5751\uff0c\u4ecb\u7ecd\u4e00\u4e9b\u5e38\u89c1\u7684\u6587\u4ef6\u7cfb\u7edf.</p>"},{"location":"tech/tools/FileSystem/#nfs","title":"NFS\u6587\u4ef6\u7cfb\u7edf","text":"<p>NFS\u6587\u4ef6\u7cfb\u7edf\u53c2\u8003</p> <p>NFS\u6587\u4ef6\u7cfb\u7edf\u7684\u5168\u79f0\u662fNetwork File System\uff0c\u5b83\u5141\u8bb8\u8fdc\u7a0b\u4e3b\u673a\u901a\u8fc7\u7f51\u7edc\u6302\u8f7d\u6587\u4ef6\u7cfb\u7edf\uff0c\u5e76\u50cf\u5b83\u4eec\u662f\u672c\u5730\u6302\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf\u4e00\u6837\u4e0e\u5b83\u4eec\u8fdb\u884c\u4ea4\u4e92\uff0c\u53ef\u4ee5\u5b9e\u73b0\u591a\u53f0\u670d\u52a1\u5668\u4e4b\u95f4\u6570\u636e\u5171\u4eab</p> <p>\u521b\u5efa\u540e\u4f7f\u7528<code>sudo mount 192.168.189.1:/overlay/nfs/hjj /home/hjj/nfs</code>\u547d\u4ee4\u6765\u5c06nfs\u670d\u52a1\u5668\u4e0a\u7684\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u5230\u672c\u5730\u670d\u52a1\u5668\u76ee\u5f55</p> <p>NFS\u670d\u52a1\u5668\u914d\u7f6e</p>"},{"location":"tech/tools/FileSystem/#fat32exfat","title":"FAT32/exFAT\u6587\u4ef6\u7cfb\u7edf","text":"<p>FAT32\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u78c1\u76d8\u6587\u4ef6\u7cfb\u7edf\u683c\u5f0f\uff0c\u4e4b\u524d\u88ab\u6240\u6709\u975eNT\u6838\u5fc3\u7684Windows\u7cfb\u7edf\u6240\u4f7f\u7528\uff0c\u4f18\u70b9\u662f\u517c\u5bb9\u6027\u597d\uff0c\u901a\u5e38\u7528\u4e8e\u591a\u6570\u7684USB\u95ea\u5b58\u76d8</p> <p>FAT\u6709\u4e00\u4e2a\u4e25\u91cd\u7684\u7f3a\u70b9\uff1a\u5f53\u6587\u4ef6\u5220\u9664\u540e\u5199\u5165\u65b0\u8d44\u6599\uff0cFAT\u4e0d\u4f1a\u5c06\u6587\u4ef6\u6574\u7406\u6210\u5b8c\u6574\u7247\u6bb5\u518d\u5199\u5165\uff0c\u957f\u671f\u4f7f\u7528\u540e\u4f1a\u4f7f\u6587\u4ef6\u8d44\u6599\u53d8\u5f97\u9010\u6e10\u5206\u6563\uff0c\u800c\u51cf\u6162\u4e86\u8bfb\u5199\u901f\u5ea6\u3002\u788e\u7247\u6574\u7406\u662f\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\uff0c\u4f46\u5fc5\u987b\u7ecf\u5e38\u78c1\u76d8\u788e\u7247\u6574\u7406\u6765\u4fdd\u6301FAT\u6587\u4ef6\u7cfb\u7edf\u7684\u6548\u7387\u3002</p> <p>exFAT\u6587\u4ef6\u7cfb\u7edf\u53ef\u4ee5\u770b\u4f5c\u662fFAT32\u768464\u4f4d\u5347\u7ea7\u7248\uff0c\u6700\u5927\u7684\u7f3a\u70b9\u662f\u6ca1\u6709\u6587\u4ef6\u65e5\u5fd7\u529f\u80fd\uff0c\u8fd9\u6837\u5c31\u4e0d\u80fd\u8bb0\u5f55\u78c1\u76d8\u4e0a\u6587\u4ef6\u7684\u4fee\u6539\u8bb0\u5f55\uff0c\u4e0d\u8fc7\u517c\u5bb9\u6027\u597d</p>"},{"location":"tech/tools/FileSystem/#ntfs","title":"NTFS\u6587\u4ef6\u7cfb\u7edf","text":"<p>NTFS\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u78c1\u76d8\u6587\u4ef6\u7cfb\u7edf\uff0c\u7531Microsoft\u5f00\u53d1\uff0c\u5f53\u4ecaWindows\u7cfb\u7edf\u4e3b\u8981\u91c7\u7528NTFS\u4f5c\u4e3a\u78c1\u76d8\u6587\u4ef6\u7cfb\u7edf\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u6574\u5957\u529f\u80fd\uff0c\u5305\u62ec\u5b89\u5168\u63cf\u8ff0\u7b26\u3001\u52a0\u5bc6\u3001\u78c1\u76d8\u914d\u989d\u548c\u4e30\u5bcc\u7684\u5143\u6570\u636e\u3002</p> <p>NTFS\u662f\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6\u7cfb\u7edf\uff0c\u4f7f\u7528NTFS\u65e5\u5fd7\uff08$Logfile\uff09\u8bb0\u5f55\u5377\u66f4\u6539\u5143\u6570\u636e\u3002\u8fd9\u662fNTFS\u4e00\u4e2a\u975e\u5e38\u5173\u952e\u7684\u529f\u80fd\uff08FAT/FAT32\u4e0d\u63d0\u4f9b\u6b64\u9879\u529f\u80fd\uff09\uff0c\u53ef\u786e\u4fdd\u5176\u5185\u90e8\u7684\u590d\u6742\u6570\u636e\u7ed3\u6784\uff08\u5982\u6bd4\u8f83\u91cd\u8981\u7684\u5982\u5377\u5206\u914d\u56fe\u3001\u78c1\u76d8\u788e\u7247\u6574\u7406API\u4ea7\u751f\u7684\u6570\u636e\u8f6c\u79fb\u64cd\u4f5c\u3001MFT\uff08\u4e3b\u6587\u4ef6\u8868\uff09\u8bb0\u5f55\u7684\u66f4\u6539\u60c5\u51b5\uff08\u5305\u62ec\u79fb\u52a8MFT\u8bb0\u5f55\u4e2d\u5b58\u50a8\u7684\u53d8\u957f\u5c5e\u6027\u548c\u5c5e\u6027\u8868\u7b49\uff09\uff09\u548c\u7d22\u5f15\uff08\u5728\u76ee\u5f55\u548c\u5b89\u5168\u63cf\u8ff0\u7b26\u4e2d\u4f7f\u7528\uff09\u5373\u4f7f\u5728\u7cfb\u7edf\u5d29\u6e83\u540e\u4ecd\u7136\u80fd\u4fdd\u8bc1\u4e00\u81f4\u6027\uff0c\u800c\u5f53\u5728\u5377\u88ab\u91cd\u65b0\u52a0\u8f7d\u540e\uff0c\u53ef\u4ee5\u975e\u5e38\u5bb9\u6613\u5730\u56de\u6eda\u8fd9\u4e9b\u5173\u952e\u6570\u636e\u7684\u610f\u5916\u4fee\u6539\u3002</p> <p>NTFS\u80fd\u591f\u4f7f\u7528LZNT1\u7b97\u6cd5\uff08LZ77\u7b97\u6cd5\u7684\u4e00\u79cd\u53d8\u79cd\uff09\u538b\u7f29\u6587\u4ef6\u3002[17]\u6587\u4ef6\u538b\u7f29\u4ee516\u4e2a\u7c07\u4e3a\u4e00\u4e2a\u533a\u5757\u8fdb\u884c\uff0c\u4e5f\u5373\u5982\u679c\u7c07\u5927\u5c0f\u4e3a4KB\uff0c\u5219\u538b\u7f29\u65f6\u5355\u4e2a\u533a\u5757\u7684\u5927\u5c0f\u4e3a64KB</p> <p>NTFS\u5b9e\u73b0\u5bf9\u7a00\u758f\u6587\u4ef6\u7684\u9ad8\u6548\u5b58\u50a8\u652f\u6301\uff0c\u5141\u8bb8\u5e94\u7528\u7a0b\u5e8f\u6307\u5b9a\u6587\u4ef6\u7684\u7a7a\uff08\u96f6\uff09\u6570\u636e\u533a\u57df\u3002\u8bfb\u53d6\u7a00\u758f\u6587\u4ef6\u7684\u5e94\u7528\u7a0b\u5e8f\u4e0d\u9700\u8981\u505a\u5355\u72ec\u5904\u7406\uff0c\u53ef\u4ee5\u7ee7\u7eed\u4f7f\u7528\u5e38\u89c4\u65b9\u6cd5\u8bfb\u53d6\u6570\u636e\uff0c\u64cd\u4f5c\u7cfb\u7edf\u5c06\u6839\u636e\u8bfb\u53d6\u7684\u4f4d\u7f6e\u51b3\u5b9a\u8fd4\u56de\u96f6\u6216\u8005\u5b9e\u9645\u6570\u636e\u3002\u548c\u538b\u7f29\u6587\u4ef6\u7c7b\u4f3c\uff0c\u78c1\u76d8\u9650\u989d\u5bf9\u7a00\u758f\u6587\u4ef6\u7684\u5c3a\u5bf8\u5224\u65ad\u4ee5\u58f0\u660e\u5927\u5c0f\u800c\u975e\u5b9e\u9645\u5360\u7528\u5927\u5c0f\u4e3a\u51c6</p> <p>\u5728NTFS\u4e2d\uff0c\u6bcf\u4e2a\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u5177\u6709\u4e00\u4e2a\u5b89\u5168\u63cf\u8ff0\u7b26\uff0c\u7528\u4e8e\u8bf4\u660e\u5176\u6240\u6709\u8005\uff0c\u5e76\u5305\u542b\u4e24\u4e2a\u5b89\u5168\u63a7\u5236\u5217\u8868\uff08ACL\uff09\u3002\u7b2c\u4e00\u4e2a\u5217\u8868\u88ab\u79f0\u4e3a\u81ea\u4e3b\u8bbf\u95ee\u63a7\u5236\u5217\u8868\uff08DACL\uff09\uff0c\u7528\u4e8e\u63cf\u8ff0\u662f\u5426\u5141\u8bb8\u6216\u7981\u6b62\u7279\u5b9a\u7684\u7528\u6237\u6216\u7528\u6237\u7ec4\u8fdb\u884c\u7279\u5b9a\u7684\u64cd\u4f5c\uff08\u5982\u8bfb\u53d6\u3001\u5199\u5165\u3001\u6267\u884c\u6216\u5220\u9664\uff09,\u7b2c\u4e8c\u4e2a\u5217\u8868\u88ab\u79f0\u4e3a\u7cfb\u7edf\u8bbf\u95ee\u63a7\u5236\u5217\u8868\uff08SACL\uff09\uff0c\u7528\u4e8e\u63cf\u8ff0\u5bf9\u6587\u4ef6\u6216\u6587\u4ef6\u5939\u7684\u7279\u5b9a\u884c\u4e3a\u662f\u5426\u5e94\u5f53\u88ab\u5ba1\u6838\uff0c\u4ee5\u53ca\u5728\u64cd\u4f5c\u6210\u529f\u540e\u662f\u5426\u5e94\u5f53\u8bb0\u5f55\u64cd\u4f5c\u3002</p>"},{"location":"tech/tools/FileSystem/#overlayfs","title":"OverlayFS\u6587\u4ef6\u7cfb\u7edf","text":"<p>OverlayFS\u662f\u4e00\u4e2a\u9762\u5411Linux\u7684\u6587\u4ef6\u7cfb\u7edf\u670d\u52a1\uff0c\u5176\u5b9e\u73b0\u4e00\u4e2a\u9762\u5411\u5176\u4ed6\u6587\u4ef6\u7cfb\u7edf\u7684\u8054\u5408\u6302\u8f7d\u3002</p> <p>OverlayFS\u7684\u4e3b\u8981\u673a\u5236\u6d89\u53ca\u5f53\u4e24\u4e2a\u6587\u4ef6\u7cfb\u7edf\u63d0\u4f9b\u540c\u4e00\u540d\u79f0\u7684\u76ee\u5f55\u65f6\u76ee\u5f55\u8bbf\u95ee\u7684\u5408\u5e76\u3002\u9664\u6b64\u4e4b\u5916\uff0cOverlayFS\u5448\u73b0\u5176\u4e2d\u4e00\u4e2a\u6240\u4ea7\u751f\u7684\u5bf9\u8c61\uff08\u5982\u679c\u6709\uff09\uff0c\u201c\u4e0a\u5c42\u201d\u6587\u4ef6\u7cfb\u7edf\u4f18\u5148\u3002OverlayFS\u4e0e\u5176\u4ed6\u8986\u76d6\u578b\u6587\u4ef6\u7cfb\u7edf\u4e0d\u540c\uff0cOverlayFS\u5408\u5e76\u7684\u76ee\u5f55\u5b50\u6811\u4e0d\u4e00\u5b9a\u662f\u6765\u81ea\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u3002</p> <p>\u5e38\u89c1\u7528\u6cd5\u662f\uff1a\u5e95\u5c42\u6587\u4ef6\u7cfb\u7edf\u53ea\u8bfb\uff0c\u4e0a\u5c42\u6587\u4ef6\u7cfb\u7edf\u53ef\u8bfb\u5199\uff0c\u8457\u540d\u7684Docker\u5c31\u662f\u4f7f\u7528\u7684OverlayFs\u3002</p>"},{"location":"tech/tools/FileSystem/#zfs","title":"ZFS\u6587\u4ef6\u7cfb\u7edf","text":"<p>ZFS\u5168\u79f0\u662f(Zettabyte File System)\uff0cZFS\u662f\u4e00\u4e2a\u62e5\u6709\u903b\u8f91\u5377\u7ba1\u7406\u529f\u80fd\u7684\u6587\u4ef6\u7cfb\u7edf\u7ed9\uff0c\u8f6f\u4ef6RAID\uff0c\u5305\u62ec\u5927\u91cf\u4fdd\u62a4\u63aa\u65bd\u9632\u6b62\u6570\u636e\u635f\u574f\uff0c\u652f\u6301\u9ad8\u5b58\u50a8\u5bb9\u91cf\u3001\u9ad8\u6548\u6570\u636e\u538b\u7f29\u3001\u96c6\u6210\u6587\u4ef6\u7cfb\u7edf\u3001\u5377\u7ba1\u7406\u3001\u5feb\u7167\u548c\u5199\u5165\u65f6\u590d\u5236\u3001\u8fde\u7eed\u5b8c\u6574\u6027\u68c0\u67e5\u4e0e\u81ea\u52a8\u4fee\u590d\u3001RAID-Z\u3001\u539f\u751fNFSv4 ACL\u7b49\u529f\u80fd\uff0c\u5e76\u4e14\u80fd\u88ab\u7cbe\u786e\u914d\u7f6e\u3002</p> <p>\u4e0d\u540c\u4e8e\u4f20\u7edf\u6587\u4ef6\u7cfb\u7edf\u9700\u8981\u9a7b\u7559\u4e8e\u5355\u72ec\u8bbe\u5907\u6216\u8005\u9700\u8981\u4e00\u4e2a\u5377\u7ba1\u7406\u7cfb\u7edf\u53bb\u4f7f\u7528\u4e00\u4e2a\u4ee5\u4e0a\u7684\u8bbe\u5907\uff0cZFS\u5efa\u7acb\u5728\u865a\u62df\u7684\uff0c\u88ab\u79f0\u4e3a\u201czpools\u201d\u7684\u5b58\u50a8\u6c60\u4e4b\u4e0a\uff0c\u6bcf\u4e2a\u5b58\u50a8\u6c60\u7531\u82e5\u5e72\u865a\u62df\u8bbe\u5907\uff08virtual devices\uff0cvdevs\uff09\u7ec4\u6210\u3002</p>"},{"location":"tech/tools/Git/","title":"Git Notes","text":""},{"location":"tech/tools/Git/#session-1","title":"Session 1 \u57fa\u672c\u7528\u6cd5","text":"<ul> <li>\u521d\u59cb\u5316\uff1a<ul> <li><code>git init</code></li> </ul> </li> </ul> <ul> <li>\u63d0\u4ea4\u4fee\u6539<ul> <li><code>git add readme.txt</code></li> <li><code>git commit -m \"wrote a readme file\"</code></li> </ul> </li> </ul> <ul> <li>\u64a4\u9500\u4fee\u6539<ul> <li><code>git checkout -- &lt;\u6587\u4ef6\u540d&gt; / git restore &lt;\u6587\u4ef6\u540d&gt;</code>: \u64a4\u9500\u5f53\u524d\u6240\u505a\u7684\u4fee\u6539(\u8fd8\u672a git add )</li> <li><code>git reset HEAD &lt;\u6587\u4ef6\u540d\u5b57&gt; / git restore --staged &lt;\u6587\u4ef6\u540d&gt;</code>: \u64a4\u9500\u5f53\u524d git add \u7684\u6682\u5b58\u533a\u4e2d\u7684\u5185\u5bb9</li> </ul> </li> </ul> <ul> <li> <p>\u67e5\u770b\u72b6\u6001</p> <ul> <li>git status: \u663e\u793a\u5f53\u524d\u5de5\u4f5c\u533a\u7684\u72b6\u6001<ul> <li>\u82e5git status\u544a\u8bc9\u4f60\u6587\u4ef6\u88ab\u4fee\u6539\u8fc7\uff0c\u7528git diff \"filename\"\uff1a\u53ef\u4ee5\u67e5\u770b\u4fee\u6539\u5185\u5bb9</li> </ul> </li> </ul> <ul> <li>git log: \u67e5\u770b\u5386\u53f2\u7248\u672c\uff0c<code>git log</code>\u547d\u4ee4\u663e\u793a\u4ece\u6700\u8fd1\u5230\u6700\u8fdc\u7684\u63d0\u4ea4\u65e5\u5fd7\uff0c\u5982\u679c\u5acc\u8f93\u51fa\u4fe1\u606f\u592a\u591a\uff0c\u770b\u5f97\u773c\u82b1\u7f2d\u4e71\u7684\uff0c\u53ef\u4ee5\u8bd5\u8bd5\u52a0\u4e0a<code>--pretty=oneline</code>\u53c2\u6570\uff1a<ul> <li>git log\u7684\u53c2\u6570  <p>--pretty=oneline\u53ea\u663e\u793a\u7248\u672c\u53f7 --graph\u663e\u793a\u5206\u652f\u5408\u5e76\u56fe --abbrev-commit \u663e\u793aAuthor\u548cDate\u5e76\u4e14\u8be6\u7ec6\u663e\u793amerge\u7684\u7248\u672c\u53f7 \u6ce8\u610f\u5230Git\u7528<code>(HEAD -&gt; master)</code>\u548c<code>(origin/master)</code>\u6807\u8bc6\u51fa\u5f53\u524d\u5206\u652f\u7684HEAD\u548c\u8fdc\u7a0borigin\u7684\u4f4d\u7f6e\u5206\u522b\u662f<code>582d922 add author</code>\u548c<code>d1be385 init hello</code></p> </li> </ul> </li> </ul> <pre><code>$ git log --pretty=oneline\uff08\u663e\u793a\u7684\u5168\u4e3a\u7248\u672c\u53f7\uff09\n</code></pre> </li> </ul> <ul> <li> <p>\u7248\u672c\u56de\u9000</p> <ul> <li><code>git reset --hard HEAD^</code>  \u56de\u9000\u4e00\u4e2a\u7248\u672c</li> <li><code>git reset --hard HEAD^^</code>, \u56de\u9000\u4e24\u4e2a `</li> <li><code>git reset --hard HEAD~100</code>\uff0c\u56de\u9000\u4e00\u767e\u4e2a</li> <li><code>git reset --hard commit_id</code></li> </ul> <ul> <li> <p><code>git reflog</code>\u7528\u6765\u8bb0\u5f55\u4f60\u7684\u6bcf\u4e00\u6b21\u547d\u4ee4</p> <ul> <li><code>HEAD</code>\u6307\u5411\u7684\u7248\u672c\u5c31\u662f\u5f53\u524d\u7248\u672c\uff0c\u56e0\u6b64\uff0cGit\u5141\u8bb8\u6211\u4eec\u5728\u7248\u672c\u7684\u5386\u53f2\u4e4b\u95f4\u7a7f\u68ad\uff0c\u4f7f\u7528\u547d\u4ee4<code>git reset --hard commit_id</code>\u3002</li> </ul> <ul> <li>\u56de\u9000\uff1a\u7528<code>git log</code>\u53ef\u4ee5\u67e5\u770b\u63d0\u4ea4\u5386\u53f2\uff0c\u4ee5\u4fbf\u786e\u5b9a\u8981\u56de\u9000\u5230\u54ea\u4e2a\u7248\u672c\u3002</li> </ul> <ul> <li>\u8df3\u8f6c\uff1a\u7528<code>git reflog</code>\u67e5\u770b\u547d\u4ee4\u5386\u53f2\uff0c\u4ee5\u4fbf\u786e\u5b9a\u8981\u56de\u5230\u672a\u6765\u7684\u54ea\u4e2a\u7248\u672c\u3002</li> </ul> </li> </ul> </li> </ul> <ul> <li> <p>\u5220\u9664\u6587\u4ef6</p> <ul> <li>rm \u6216\u8005\u624b\u52a8\u5220\u9664\u6587\u4ef6(\u672c\u5730\u5220\u9664\u6587\u4ef6)\uff0crmdir\u5220\u9664\u6587\u4ef6\u5939 <ul> <li>\u518d\u6b21\u4f7f\u7528git rm\u6216\u8005git add\u53ef\u4ee5\u4ece\u7248\u672c\u5e93\u4e2d\u5220\u9664\u8be5\u6587\u4ef6\uff0c\u5e76\u4e14\u53ef\u4ee5git commit. <ul> <li><code>git checkout</code>\u5176\u5b9e\u662f\u7528\u7248\u672c\u5e93\u91cc\u7684\u7248\u672c\u66ff\u6362\u5de5\u4f5c\u533a\u7684\u7248\u672c\uff0c\u65e0\u8bba\u5de5\u4f5c\u533a\u662f\u4fee\u6539\u8fd8\u662f\u5220\u9664\uff0c\u90fd\u53ef\u4ee5\u201c\u4e00\u952e\u8fd8\u539f\u201d\u3002<ul> <li>\u60c5\u51b5\u4e00\uff1a\u5de5\u4f5c\u533a\u6587\u4ef6\u5220\u9664\uff0c\u65e0\u5176\u4ed6\u64cd\u4f5c<ul> <li>git restore test.txt</li> </ul> </li> <li>\u60c5\u51b5\u4e8c\uff1a\u5de5\u4f5c\u533a\u6587\u4ef6\u5220\u9664\uff0c\u7248\u672c\u5e93\u6587\u4ef6\u5220\u9664(\u5373\u591a\u4e86git rm\u7684\u64cd\u4f5c\u5e76\u4e14\u8fdb\u884c\u4e86git commit)<ul> <li>git reset --hard HEAD^</li> </ul> </li> </ul> </li> </ul> <ul> <li>\u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a<ul> <li>\u5de5\u4f5c\u533a\uff08Working Directory): \u5de5\u4f5c\u76ee\u5f55\uff0c\u6bd4\u5982\u6211\u7684<code>learngit</code>\u6587\u4ef6\u5939\u5c31\u662f\u4e00\u4e2a\u5de5\u4f5c\u533a\uff1a</li> <li>\u7248\u672c\u5e93\uff08Repository\uff09(\u6682\u5b58\u533a\u662f\u7248\u672c\u5e93\u7684\u4e00\u90e8\u5206)\uff1a\u5de5\u4f5c\u533a\u6709\u4e00\u4e2a\u9690\u85cf\u76ee\u5f55<code>.git</code>\uff0c\u8fd9\u4e2a\u4e0d\u7b97\u5de5\u4f5c\u533a\uff0c\u800c\u662fGit\u7684\u7248\u672c\u5e93\u3002</li> </ul> </li> </ul> <p>Git\u7684\u7248\u672c\u5e93\u91cc\u5b58\u4e86\u5f88\u591a\u4e1c\u897f\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u5c31\u662f\u79f0\u4e3astage\uff08\u6216\u8005\u53ebindex\uff09\u7684\u6682\u5b58\u533a\uff0c\u8fd8\u6709Git\u4e3a\u6211\u4eec\u81ea\u52a8\u521b\u5efa\u7684\u7b2c\u4e00\u4e2a\u5206\u652f<code>master</code>\uff0c\u4ee5\u53ca\u6307\u5411<code>master</code>\u7684\u4e00\u4e2a\u6307\u9488\u53eb<code>HEAD</code>\u3002 \u6240\u4ee5\uff0c<code>git add</code>\u547d\u4ee4\u5b9e\u9645\u4e0a\u5c31\u662f\u628a\u8981\u63d0\u4ea4\u7684\u6240\u6709\u4fee\u6539\u653e\u5230\u6682\u5b58\u533a\uff08Stage\uff09\uff0c\u7136\u540e\uff0c\u6267\u884c<code>git commit</code>\u5c31\u53ef\u4ee5\u4e00\u6b21\u6027\u628a\u6682\u5b58\u533a\u7684\u6240\u6709\u4fee\u6539\u63d0\u4ea4\u5230\u5206\u652f\u3002</p>"},{"location":"tech/tools/Git/#session-2","title":"Session 2 \u8fdc\u7a0b\u4ed3\u5e93","text":"<ul> <li>\u8fdc\u7a0b\u4ed3\u5e93SSH\u90e8\u5206\u521b\u5efa\uff0c\u76ee\u5f55\u5728<code>C:\\Users\\\u7528\u6237\u540d\\.ssh</code></li> </ul> <p>\u521b\u5efaSSH Key\u3002\u5728\u7528\u6237\u4e3b\u76ee\u5f55\u4e0b\uff0c\u770b\u770b\u6709\u6ca1\u6709.ssh\u76ee\u5f55\uff0c\u5982\u679c\u6709\uff0c\u518d\u770b\u770b\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u6709\u6ca1\u6709<code>id_rsa</code>\u548c<code>id_rsa.pub</code>\u8fd9\u4e24\u4e2a\u6587\u4ef6\uff0c\u5982\u679c\u5df2\u7ecf\u6709\u4e86\uff0c\u53ef\u76f4\u63a5\u8df3\u5230\u4e0b\u4e00\u6b65\u3002\u5982\u679c\u6ca1\u6709\uff0c\u6253\u5f00Shell\uff0c\u5efaSSH Key\uff1a</p> <pre><code>$ ssh-keygen -t rsa -C \"youremail@example.com\"\n</code></pre> <ul> <li> <p>\u6dfb\u52a0\u8fdc\u7a0b\u5e93</p> <ul> <li>\u5728github\u4e0a\u65b0\u5efa\u4e00\u4e2a\u4ed3\u5e93\uff1arepository name</li> </ul> <ul> <li>\u672c\u5730\u4ed3\u5e93\u4e0b\u8f93\u5165\uff1a$ git remote add origin git@github.com:user name/repository name.git</li> </ul> <ul> <li> <p>git push -u origin \u5206\u652f\u540d (\u7b2c\u4e00\u6b21\u63d0\u4ea4) \uff08\u4e00\u822c\u4e3amain\uff09</p> <p>\u6dfb\u52a0\u540e\uff0c\u8fdc\u7a0b\u5e93\u7684\u540d\u5b57\u5c31\u662f<code>origin</code>\uff0c\u8fd9\u662fGit\u9ed8\u8ba4\u7684\u53eb\u6cd5\uff0c\u4e5f\u53ef\u4ee5\u6539\u6210\u522b\u7684\uff0c\u4f46\u662f<code>origin</code>\u8fd9\u4e2a\u540d\u5b57\u4e00\u770b\u5c31\u77e5\u9053\u662f\u8fdc\u7a0b\u5e93\u3002\u7531\u4e8e\u8fdc\u7a0b\u5e93\u662f\u7a7a\u7684\uff0c\u6211\u4eec\u7b2c\u4e00\u6b21\u63a8\u9001<code>main</code>\u5206\u652f\u65f6\uff0c\u52a0\u4e0a\u4e86<code>-u</code>\u53c2\u6570\uff0cGit\u4e0d\u4f46\u4f1a\u628a\u672c\u5730\u7684<code>main</code>\u5206\u652f\u5185\u5bb9\u63a8\u9001\u7684\u8fdc\u7a0b\u65b0\u7684<code>main</code>\u5206\u652f\uff0c\u8fd8\u4f1a\u628a\u672c\u5730\u7684<code>main</code>\u5206\u652f\u548c\u8fdc\u7a0b\u7684<code>main</code>\u5206\u652f\u5173\u8054\u8d77\u6765\uff0c\u5728\u4ee5\u540e\u7684\u63a8\u9001\u6216\u8005\u62c9\u53d6\u65f6\u5c31\u53ef\u4ee5\u7b80\u5316\u547d\u4ee4\u3002</p> </li> </ul> <ul> <li>git push origin \u5206\u652f\u540d//git push origin\uff08\u63d0\u4ea4\u5f53\u524d\u5206\u652f\uff09</li> </ul> </li> </ul> <ul> <li>git remote rm repo_name \u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93</li> </ul> <ul> <li> <p>git remote -v \u67e5\u770b\u8fdc\u7a0b\u5e93\u4fe1\u606f</p> <ul> <li> <p><code>git remote rm &lt;name&gt;</code>\u547d\u4ee4\u3002\u4f7f\u7528\u524d\uff0c\u5efa\u8bae\u5148\u7528<code>git remote -v</code>\u67e5\u770b\u8fdc\u7a0b\u5e93\u4fe1\u606f\uff1a</p> <p>\u4e0a\u9762\u663e\u793a\u4e86\u53ef\u4ee5\u6293\u53d6\u548c\u63a8\u9001\u7684<code>origin</code>\u7684\u5730\u5740\u3002\u5982\u679c\u6ca1\u6709\u63a8\u9001\u6743\u9650\uff0c\u5c31\u770b\u4e0d\u5230push\u7684\u5730\u5740\u3002</p> <pre><code>$ git remote -v\norigin  git@github.com:michaelliao/learn-git.git (fetch)\norigin  git@github.com:michaelliao/learn-git.git (push)\n</code></pre> <p>\u7136\u540e\uff0c\u6839\u636e\u540d\u5b57\u5220\u9664\uff0c\u6bd4\u5982\u5220\u9664<code>origin</code>\uff1a</p> <pre><code>$ git remote rm origin\n</code></pre> <p>\u6b64\u5904\u7684\u201c\u5220\u9664\u201d\u5176\u5b9e\u662f\u89e3\u9664\u4e86\u672c\u5730\u548c\u8fdc\u7a0b\u7684\u7ed1\u5b9a\u5173\u7cfb\uff0c\u5e76\u4e0d\u662f\u7269\u7406\u4e0a\u5220\u9664\u4e86\u8fdc\u7a0b\u5e93\u3002\u8fdc\u7a0b\u5e93\u672c\u8eab\u5e76\u6ca1\u6709\u4efb\u4f55\u6539\u52a8\u3002\u8981\u771f\u6b63\u5220\u9664\u8fdc\u7a0b\u5e93\uff0c\u9700\u8981\u767b\u5f55\u5230GitHub\uff0c\u5728\u540e\u53f0\u9875\u9762\u627e\u5230\u5220\u9664\u6309\u94ae\u518d\u5220\u9664</p> </li> </ul> </li> </ul> <ul> <li>git clone: \u514b\u9686\u8fdc\u7a0b\u4ed3\u5e93\u5230\u672c\u5730</li> </ul> <pre><code>$ git clone git@github.com:username/repositoryname.git\n</code></pre> <ul> <li>git checkout -b branch-name origin/branch-name\uff1a\u521b\u5efa\u672c\u5730\u548c\u8fdc\u7a0b\u76f8\u5bf9\u5e94\u7684\u5206\u652f</li> </ul>"},{"location":"tech/tools/Git/#session-3","title":"Session 3 \u5206\u652f\u7ba1\u7406","text":"<ul> <li> <p>git checkout -b \u8868\u793a\u521b\u5efa\u4e00\u4e2a\u65b0\u5206\u652f\u5e76\u4e14\u5207\u6362\u5230\u8be5\u5206\u652f  <ul> <li> <p><code>git checkout</code>\u547d\u4ee4\u52a0\u4e0a<code>-b</code>\u53c2\u6570\u8868\u793a\u521b\u5efa\u5e76\u5207\u6362\uff0c\u76f8\u5f53\u4e8e\u4ee5\u4e0b\u4e24\u6761\u547d\u4ee4\uff1a</p> <pre><code>$ git branch dev\n$ git checkout dev\n#Switched to branch 'dev'\n</code></pre> </li> </ul> <ul> <li>git branch \u67e5\u770b\u5f53\u524d\u5206\u652f\uff0c\u5e26*\u53f7\u6807\u660e\u4e3a\u5f53\u524d\u5206\u652f\\</li> </ul> <ul> <li>git branch -vv: \u67e5\u770b\u5f53\u524d\u5206\u652f\u4e0e\u8fdc\u7a0b\u5206\u652f\u4e4b\u95f4\u7684\u5173\u7cfb</li> </ul> <ul> <li>git checkout \u8868\u793a\u5207\u6362\u5230\u8be5\u5206\u652f //git switch master <ul> <li> <p>git branch -d \u5206\u652fname\u8868\u793a\u5220\u9664\u8be5\u5206\u652f</p> <ul> <li>git branch -D \u5f3a\u884c\u5220\u9664\u4e00\u4e2a\u5206\u652f\uff0c\u6bd4\u5982\u8be5\u5206\u652f\u8fd8\u6ca1\u6709\u5408\u5e76\u4f46\u9700\u8981\u5220\u9664\u65f6 <ul> <li>git merge \u5206\u652fname\u8868\u793a\u5c06\u8be5\u5206\u652f\u5408\u5e76\u5f53\u5f53\u524d\u5206\u652f</li> </ul> <ul> <li> <p>\u89e3\u51b3\u51b2\u7a81</p> <ul> <li>PS: git status\u67e5\u770b\u51b2\u7a81\u6587\u4ef6</li> </ul> <p>\u51b2\u7a81\u4ea7\u751f\u7684reason: \u5728\u5176\u4ed6branch\u4e0a\u4fee\u6539\u5e76\u4e14\u63d0\u4ea4\u540e\uff0c\u5728main\u5206\u652f\u4e0a\u518d\u6b21\u4fee\u6539\u6dfb\u52a0\u63d0\u4ea4\uff0c\u4f7f\u5f97\u4e24\u8005\u4e0d\u4e00\u81f4\u3002\u5982\u679c\u4e0d\u5728main\u5206\u652f\u4e0a\u4fee\u6539\uff0c\u5219\u53ef\u4ee5\u76f4\u63a5\u5c06\u5176\u4ed6branch\u5408\u5e76\u5230main\u5206\u652f\u4e0a\u3002</p> <ul> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a<ul> <li>\u624b\u52a8\u4fee\u6539\u51b2\u7a81\u7684\u6587\u4ef6\u5e76\u6dfb\u52a0\u63d0\u4ea4\uff0c\u518d\u8fdb\u884cmerge</li> </ul> </li> </ul> </li> </ul> <ul> <li> <p>git merge --no-ff \u5206\u652f\u540d\u8868\u793a\u7981\u6b62<code>Fast forward</code>\u6a21\u5f0f\uff0c\u5373\u5220\u9664\u5206\u652f\u540e\u4e0d\u4f1a\u4e22\u5931\u5206\u652f\u4fe1\u606f\uff0c\u5f88\u91cd\u8981\u3002\u5408\u5e76\u65f6\u5019\u4e5f\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u65b0\u7684commit\u3002</p> <pre><code> $ git merge --no-ff -m \"merge with no-ff\" dev\n</code></pre> </li> </ul> <ul> <li>\u5206\u652f\u7ba1\u7406\u7b56\u7565</li> </ul> <p>\u5728\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u6211\u4eec\u5e94\u8be5\u6309\u7167\u51e0\u4e2a\u57fa\u672c\u539f\u5219\u8fdb\u884c\u5206\u652f\u7ba1\u7406\uff1a</p> <p>\u9996\u5148\uff0c<code>master</code>\u5206\u652f\u5e94\u8be5\u662f\u975e\u5e38\u7a33\u5b9a\u7684\uff0c\u4e5f\u5c31\u662f\u4ec5\u7528\u6765\u53d1\u5e03\u65b0\u7248\u672c\uff0c\u5e73\u65f6\u4e0d\u80fd\u5728\u4e0a\u9762\u5e72\u6d3b\uff1b</p> <p>\u90a3\u5728\u54ea\u5e72\u6d3b\u5462\uff1f\u5e72\u6d3b\u90fd\u5728<code>dev</code>\u5206\u652f\u4e0a\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c<code>dev</code>\u5206\u652f\u662f\u4e0d\u7a33\u5b9a\u7684\uff0c\u5230\u67d0\u4e2a\u65f6\u5019\uff0c\u6bd4\u59821.0\u7248\u672c\u53d1\u5e03\u65f6\uff0c\u518d\u628a<code>dev</code>\u5206\u652f\u5408\u5e76\u5230<code>master</code>\u4e0a\uff0c\u5728<code>master</code>\u5206\u652f\u53d1\u5e031.0\u7248\u672c\uff1b</p> <ul> <li>git stash\u7684\u4f7f\u7528<ul> <li>git-stash\u7528\u6cd5\u5c0f\u7ed3 - Tocy - \u535a\u5ba2\u56ed (cnblogs.com)</li> <li>git stash/git stash save\"branch_name\"</li> <li>git stash list</li> <li>git stash apply / git stash pop</li> <li>git stash drop</li> </ul> </li> </ul> <ul> <li> <p>git cherry-pick </p> <ul> <li> <p>delete\u5206\u652f\u7684\u65f6\u5019\u4f1a\u663e\u793a\u8be5\u5206\u652f\u505a\u7684\u63d0\u4ea4\u7684\u7248\u672c\u53f7\uff0c\u6216\u8005\u7528git reflog\u67e5\u770b\u7248\u672c\u53f7</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\uff0cGit\u4e13\u95e8\u63d0\u4f9b\u4e86\u4e00\u4e2a<code>cherry-pick</code>\u547d\u4ee4\uff0c\u8ba9\u6211\u4eec\u80fd\u590d\u5236\u4e00\u4e2a\u7279\u5b9a\u7684\u63d0\u4ea4\u5230\u5f53\u524d\u5206\u652f\uff1a\u65b9\u4fbf\u91cd\u590d\u4e4b\u524d\u63d0\u4ea4\u8fc7\u7684\u4fee\u590d</p> <pre><code>$ git branch\n* dev\n  master\n$ git cherry-pick 4c805e2\n[master 1d4b803] fix bug 101\n 1 file changed, 1 insertion(+), 1 deletion(-)\n</code></pre> </li> </ul> </li> </ul> <p>\u4fee\u590dbug\u65f6\uff0c\u6211\u4eec\u4f1a\u901a\u8fc7\u521b\u5efa\u65b0\u7684bug\u5206\u652f\u8fdb\u884c\u4fee\u590d\uff0c\u7136\u540e\u5408\u5e76\uff0c\u6700\u540e\u5220\u9664\uff1b</p> <p>\u5f53\u624b\u5934\u5de5\u4f5c\u6ca1\u6709\u5b8c\u6210\u65f6\uff0c\u5148\u628a\u5de5\u4f5c\u73b0\u573a<code>git stash</code>\u4e00\u4e0b\uff0c\u7136\u540e\u53bb\u4fee\u590dbug\uff0c\u4fee\u590d\u540e\uff0c\u518d<code>git stash pop</code>\uff0c\u56de\u5230\u5de5\u4f5c\u73b0\u573a\uff1b\u5728master\u5206\u652f\u4e0a\u4fee\u590d\u7684bug\uff0c\u60f3\u8981\u5408\u5e76\u5230\u5f53\u524ddev\u5206\u652f\uff0c\u53ef\u4ee5\u7528<code>git cherry-pick &lt;commit&gt;</code>\u547d\u4ee4\uff0c\u628abug\u63d0\u4ea4\u7684\u4fee\u6539\u201c\u590d\u5236\u201d\u5230\u5f53\u524d\u5206\u652f\uff0c\u907f\u514d\u91cd\u590d\u52b3\u52a8\u3002</p> <ul> <li>git pull\u5904\u7406\u51b2\u7a81</li> </ul> <p>\u63a8\u9001\u5931\u8d25\uff0c\u56e0\u4e3a\u4f60\u7684\u5c0f\u4f19\u4f34\u7684\u6700\u65b0\u63d0\u4ea4\u548c\u4f60\u8bd5\u56fe\u63a8\u9001\u7684\u63d0\u4ea4\u6709\u51b2\u7a81\uff0c\u89e3\u51b3\u529e\u6cd5\u4e5f\u5f88\u7b80\u5355\uff0cGit\u5df2\u7ecf\u63d0\u793a\u6211\u4eec\uff0c\u5148\u7528<code>git pull</code>\u628a\u6700\u65b0\u7684\u63d0\u4ea4\u4ece<code>origin/dev</code>\u6293\u4e0b\u6765\uff0c\u7136\u540e\uff0c\u5728\u672c\u5730\u5408\u5e76\uff0c\u89e3\u51b3\u51b2\u7a81\uff0c\u518d\u63a8\u9001\uff1a</p> <p><code>git pull</code>\u4e5f\u5931\u8d25\u4e86\uff0c\u539f\u56e0\u662f\u6ca1\u6709\u6307\u5b9a\u672c\u5730<code>dev</code>\u5206\u652f\u4e0e\u8fdc\u7a0b<code>origin/dev</code>\u5206\u652f\u7684\u94fe\u63a5\uff0c\u6839\u636e\u63d0\u793a\uff0c\u8bbe\u7f6e<code>dev</code>\u548c<code>origin/dev</code>\u7684\u94fe\u63a5\uff1a</p> <pre><code>$ git branch --set-upstream-to=origin/dev dev\nBranch 'dev' set up to track remote branch 'dev' from 'origin'.\n</code></pre> <p>\u518dpull\uff1a</p> <pre><code>$ git pull\nAuto-merging env.txt\nCONFLICT (add/add): Merge conflict in env.txt\nAutomatic merge failed; fix conflicts and then commit the result.\n</code></pre> <p>\u5982\u679c\u5408\u5e76\u65f6\u53d1\u751f\u51b2\u7a81\u90a3\u6211\u4eec\u8981\u5148\u8fdb\u5165vi \u6a21\u5f0f\u89e3\u51b3\u51b2\u7a81\u3002</p> <p>\u56e0\u6b64\uff0c\u591a\u4eba\u534f\u4f5c\u7684\u5de5\u4f5c\u6a21\u5f0f\u901a\u5e38\u662f\u8fd9\u6837\uff1a</p> <ol> <li>\u9996\u5148\uff0c\u53ef\u4ee5\u8bd5\u56fe\u7528<code>git push origin &lt;branch-name&gt;</code>\u63a8\u9001\u81ea\u5df1\u7684\u4fee\u6539\uff1b</li> <li>\u5982\u679c\u63a8\u9001\u5931\u8d25\uff0c\u5219\u56e0\u4e3a\u8fdc\u7a0b\u5206\u652f\u6bd4\u4f60\u7684\u672c\u5730\u66f4\u65b0\uff0c\u9700\u8981\u5148\u7528<code>git pull</code>\u8bd5\u56fe\u5408\u5e76\uff1b</li> <li>\u5982\u679c\u5408\u5e76\u6709\u51b2\u7a81\uff0c\u5219\u89e3\u51b3\u51b2\u7a81\uff0c\u5e76\u5728\u672c\u5730\u63d0\u4ea4\uff1b</li> <li>\u6ca1\u6709\u51b2\u7a81\u6216\u8005\u89e3\u51b3\u6389\u51b2\u7a81\u540e\uff0c\u518d\u7528<code>git push origin &lt;branch-name&gt;</code>\u63a8\u9001\u5c31\u80fd\u6210\u529f\uff01</li> </ol> <p>\u5982\u679c<code>git pull</code>\u63d0\u793a<code>no tracking information</code>\uff0c\u5219\u8bf4\u660e\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f\u7684\u94fe\u63a5\u5173\u7cfb\u6ca1\u6709\u521b\u5efa\uff0c\u7528\u547d\u4ee4<code>git branch --set-upstream-to &lt;branch-name&gt; origin/&lt;branch-name&gt;</code>\u3002</p> <p>\u8fd9\u5c31\u662f\u591a\u4eba\u534f\u4f5c\u7684\u5de5\u4f5c\u6a21\u5f0f\uff0c\u4e00\u65e6\u719f\u6089\u4e86\uff0c\u5c31\u975e\u5e38\u7b80\u5355\u3002 </p> <ul> <li> <p><code>git rebase -i main</code>\uff1a</p> <ul> <li>\u628a\u672c\u5730\u672apush\u7684\u67d0\u4e2a\u5206\u652f\u7684\u5206\u53c9\u63d0\u4ea4\u5386\u53f2\u6574\u7406\u6210\u4e00\u6761\u76f4\u7ebf(\u79fb\u52a8\u5230\u5206\u53c9\u4e3b\u8def\u5f84\u7684\u67d0\u4e2a\u66f4\u65b0\u7684\u63d0\u4ea4)\uff0c\u770b\u4e0a\u53bb\u66f4\u76f4\u89c2\u3002\u7f3a\u70b9\u662f\u672c\u5730\u7684\u5206\u53c9\u63d0\u4ea4\u5df2\u7ecf\u88ab\u4fee\u6539\u8fc7\u4e86\u3002</li> </ul> <ul> <li>rebase\u7684\u76ee\u7684\u662f\u4f7f\u5f97\u6211\u4eec\u5728\u67e5\u770b\u5386\u53f2\u63d0\u4ea4\u7684\u53d8\u5316\u65f6\u66f4\u5bb9\u6613\uff0c\u56e0\u4e3a\u5206\u53c9\u7684\u63d0\u4ea4\u9700\u8981\u4e09\u65b9\u5bf9\u6bd4\u3002</li> </ul> </li> </ul>"},{"location":"tech/tools/Git/#session-4","title":"Session 4 \u6807\u7b7e\u7ba1\u7406","text":"<ul> <li>git tag \u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6807\u7b7e\u5230\u5f53\u524d\u7248\u672c\uff0c\u4e5f\u53ef\u52a0\u4e0acommit id <ul> <li>git tag -a  -m\"informaion_tag\" <ul> <li>git tag \u67e5\u770b\u6240\u6709\u6807\u7b7e</li> <li>git show \u53ef\u4ee5\u67e5\u770b\u6807\u7b7e <li>git tag -d tagname: \u5220\u9664\u672c\u5730\u6807\u7b7e</li> <li>\u6807\u7b7e\u548ccommit\u6302\u94a9\u5982\u679c\u8fd9\u4e2acommit\u65e2\u51fa\u73b0\u5728master\u5206\u652f\uff0c\u53c8\u51fa\u73b0\u5728dev\u5206\u652f\uff0c\u90a3\u4e48\u5728\u8fd9\u4e24\u4e2a\u5206\u652f\u4e0a\u90fd\u53ef\u4ee5\u770b\u5230\u8fd9\u4e2a\u6807\u7b7e\u3002</li> <ul> <li>git push origin :refs/tags/\u7528\u4e8e\u5220\u9664\u8fdc\u7a0b\u6807\u7b7e <ul> <li>git push origin \u7528\u4e8e\u63a8\u9001\u67d0\u4e2a\u6807\u7b7e\u5230\u8fdc\u7a0b\u5e93 <ul> <li>git push origin --tags \u4e00\u6b21\u6027\u63a8\u9001\u5168\u90e8\u672a\u63a8\u9001\u8fc7\u7684\u6807\u7b7e\u5230\u8fdc\u7a0b\u5e93</li> </ul>"},{"location":"tech/tools/Git/#_1","title":"\u5176\u4ed6","text":"<p>1\u3001git clone\u9519\u8bef\u6307\u5357</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u6302\u4e0a\u4ee3\u7406\u5e94\u8be5\u5c31\u6ca1\u95ee\u9898\u4e86</p> <ul> <li>Failed to connect to github.com port 443: Timed out   \u89e3\u51b3\u65b9\u6cd5\uff1a\u5237\u65b0DNS\u7f13\u5b58\uff0cipconfig /flushdns</li> </ul> <ul> <li>OpenSSL SSL_read: Connection was reset, errno 10054   \u89e3\u51b3\u65b9\u6cd5\uff1a\u5ffd\u7565ssl\u9a8c\u8bc1\uff0cgit config --global http.sslVerify \"false\"</li> </ul> <p>2\u3001shell\u4e2d\u7684\u542b\u7a7a\u683c\u8def\u5f84\u5904\u7406</p> <ul> <li>\u5982\u679c\u8def\u5f84\u4e0a\u6709\u5b58\u5728\u7a7a\u683c\u540d\u79f0\u7684\u8def\u5f84\uff0c\u9700\u8981\u4f7f\u7528\u5355\u5f15\u53f7   \u6bd4\u5982\uff1a<code>E:/\u2018Git Repository\u2019/Tesontainer</code></li> <li>Git\u4e0a\u7684\u8def\u5f84\u5206\u9694\u7b26\u662f\u6b63\u659c\u6760<code>/</code></li> </ul> <p>3\u3001\u5f53\u4e00\u4e2aGit\u4ed3\u5e93\u5d4c\u5957\u5728\u53e6\u4e00\u4e2aGit\u4ed3\u5e93\u4e2d\u65f6clone</p> <p>\u6b64\u65f6\u5728\u8fdb\u884cclone\u672c\u4ed3\u5e93\u540e\uff0c\u9700\u8981\u6267\u884c<code>git submodule update --init --recursive</code>, \u4f5c\u7528\u662f\u9012\u5f52\u66f4\u65b0\u6240\u6709\u5b50\u6a21\u5757\uff0c\u5982\u679c\u5b50\u6a21\u5757\u4e0d\u5b58\u5728\u5219\u8fdb\u884c\u521d\u59cb\u5316\u3002</p> <p>4. git-filter-repo\u5220\u9664\u6587\u4ef6git\u8bb0\u5f55</p> <p>\u6700\u8fd1\u9047\u5230\u4e00\u4e2a\u5f88\u5c34\u5c2c\u7684\u95ee\u9898\uff0c\u4e0d\u5c0f\u5fc3\u628a\u5b9e\u9a8c\u7684\u4e00\u4e2a\u6807\u51c6\u4f8b\u7a0b\u4f20\u5230\u4e86\u8fdc\u7a0b\u4ed3\u5e93\u4e2d\uff0c\u6211\u4eec\u60f3\u8981\u5f7b\u5e95\u6e05\u9664\u6389\u8fd9\u4e2a\u6587\u4ef6\u5728\u8fdc\u7a0b\u4ed3\u5e93\u7684\u4fe1\u606f\u8be5\u600e\u4e48\u529e\u5462\uff1f\u6b63\u5e38\u5220\u9664\u65b9\u6cd5\u5f53\u7136\u662f\u4e0d\u884c\u7684\uff0c\u4f8b\u5982\u505a\u4e00\u4e2arevert\u7684\u63d0\u4ea4\uff0c\u4ecd\u7136\u53ef\u4ee5\u4ece\u5386\u53f2\u7248\u672c\u4e2d\u83b7\u53d6\u6587\u4ef6\u4fe1\u606f\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c\u6211\u4eec\u9700\u8981\u5b8c\u6574\u7684\u66f4\u6539Git\u7684\u63d0\u4ea4\u5386\u53f2\u4fe1\u606f\uff0c\u4e3a\u6b64\u4fbf\u5f15\u5165\u4e86 <code>git-filter-repo</code> \u5de5\u5177\u7684\u4f7f\u7528\u3002\u5177\u4f53\u6d41\u7a0b\u5982\u4e0b\uff1a</p> <ul> <li> <ol> <li>\u5207\u6362\u5230\u4ed3\u5e93\u6839\u76ee\u5f55, \u6267\u884c<code>git-filter-repo --path \u4e0e\u6839\u76ee\u5f55\u7684\u76f8\u5bf9\u76ee\u5f55 --invert-paths --force</code>\uff0c\u9700\u8981\u5207\u6362\u5230\u4e4b\u524d\u7684\u63d0\u4ea4\u5386\u53f2\u67e5\u770b\u662f\u5426\u6210\u529f\u5c06\u6587\u4ef6\u4fe1\u606f\u4ece\u63d0\u4ea4\u5386\u53f2\u4e2d\u5220\u53bb</li> </ol> </li> <li> <ol> <li>\u91cd\u65b0\u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\uff0c<code>git remote add origin url</code></li> </ol> </li> <li> <ol> <li>\u5f3a\u5236\u63d0\u4ea4\u5386\u53f2\uff0c <code>git push origin main --force</code></li> </ol> </li> </ul>"},{"location":"tech/tools/Mysql/","title":"Mysql Notes","text":""},{"location":"tech/tools/Mysql/#install-on-ubuntu2204","title":"Install on Ubuntu22.04","text":"<p>\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u53ef\u4ee5\u76f4\u63a5\u5b89\u88c5latest\u7684Mysql-server\uff0c\u5b89\u88c5\u5b8c\u6bd5\u540e\u4f7f\u7528<code>sudo systemctl status mysql</code>\u67e5\u770bmysql\u670d\u52a1\u7684\u8fd0\u884c\u72b6\u6001\uff0c\u9ed8\u8ba4\u4f1a\u81ea\u52a8\u542f\u52a8 <pre><code>    sudo apt update\n    sudo apt install mysql-server\n</code></pre></p>"},{"location":"tech/tools/Mysql/#install-on-debian12","title":"Install on Debian12","text":"<p>\u53c2\u8003\u5b98\u65b9doc <pre><code>wget https://dev.mysql.com/get/mysql-apt-config_0.8.30-1_all.deb\nsudo dpkg -i mysql-apt-config_0.8.30-1_all.deb\nsudo apt update\nsudo apt install mysql-server\n</code></pre></p>"},{"location":"tech/tools/Mysql/#_1","title":"\u89e3\u51b3\u542f\u52a8\u540e\u9ed8\u8ba4\u8bbf\u95ee\u4e0d\u4e86\u95ee\u9898","text":"<ol> <li>\u4fee\u6539<code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>\u6587\u4ef6\uff0c\u5728<code>[mysqld]</code>\u4e0b\u6dfb\u52a0<code>skip-grant-tables</code>\uff0c\u610f\u4e3a\u8df3\u8fc7\u6743\u9650\u68c0\u67e5\uff0c\u5e76\u91cd\u542fMysql\u670d\u52a1</li> <li>\u767b\u5f55\u540e\u4fee\u6539mysql.user\u8868\u4e2d\u7684<code>plugin</code>\u548c<code>authentication_string</code>\u5b57\u6bb5\uff0c\u89e3\u51b3\u76f4\u63a5alter table\u5f15\u53d1\u7684socket\u62a5\u9519 <pre><code>    mysql -u root -h localhost\n    use mysql;\n    update user set plugin='mysql_native_password', authentication_string='Your password' where User='root';\n    flush privileges;\n</code></pre></li> <li>\u4fee\u6539<code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>\u6587\u4ef6\uff0c\u5c06<code>skip-grant-tables</code>\u6ce8\u91ca\u6389\uff0c\u91cd\u542fMysql\u670d\u52a1</li> </ol>"},{"location":"tech/tools/Mysql/#mysql","title":"Mysql\u914d\u7f6e\u8fdc\u7a0b\u8fde\u63a5","text":"<p>\u914d\u7f6e\u8fdc\u7a0b\u8fde\u63a5\u9700\u8981\u4fee\u6539\u4e24\u4e2a\u5730\u65b9\uff0c\u5982\u679c\u662f\u670d\u52a1\u5668\uff0c\u8bb0\u5f97\u67e5\u770b\u662f\u5426\u914d\u7f6e\u4e86\u9632\u706b\u5899\u7aef\u53e3\u89c4\u5219 1. \u4fee\u6539<code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>\u6587\u4ef6\uff0c\u5c06<code>bind-address</code>\u66f4\u6539\u4e3a<code>0.0.0.0</code>\uff0c\u610f\u4e3a\u53ef\u4ee5\u4ece\u4efb\u4f55ip\u8bbf\u95ee\u6570\u636e\u5e93 2. \u4fee\u6539<code>mysql</code>\u6570\u636e\u5e93\u4e2d\u7684<code>user</code>\u8868\uff0c\u5c06\u5e0c\u671b\u8fde\u63a5\u7528\u6237\u7684<code>host</code>\u5b57\u6bb5\u66f4\u6539\u4e3a<code>%</code>\uff0c\u610f\u4e3a\u53ef\u4ee5\u4ece\u4efb\u4f55ip\u8bbf\u95ee\u6570\u636e\u5e93 <pre><code>    mysql -u root -h localhost\n    use mysql;\n    update user set host='%' where User='Your user'\n    flush privileges\n</code></pre></p>"},{"location":"tech/tools/Mysql/#_2","title":"\u4f7f\u7528\u7b14\u8bb0","text":"<p>written by squarehuang</p> <p>For mysql 5.x</p> <p>\u6ce8\uff1a\u5b89\u88c5mysql8.x\u53c2\u8003\uff1aUbuntu20.04\u5b89\u88c5mysql8.x - \u730e\u624b\u5bb6\u56ed - \u535a\u5ba2\u56ed (cnblogs.com)</p>"},{"location":"tech/tools/Mysql/#1","title":"1. \u57fa\u672c\u547d\u4ee4","text":"<ul> <li>\u670d\u52a1\u542f\u52a8\u4e0e\u5173\u95ed\uff1anet start mysql | net stop mysql</li> <li>\u91cd\u65b0\u542f\u52a8\uff1a<code>service mysqld restarts</code></li> <li>\u767b\u5f55\u7528\u6237\uff1amysql -h \u7aef\u53e3IP -u username -p</li> <li>\u9000\u51fa: quit(QUIT)\uff0cexit</li> <li>\u6e05\u9664\u7b49\u5f85\u5185\u5bb9\uff1a\\c, ctrl+c, clear</li> <li>\u6e05\u5c4f\uff1asystem clear(Linux)</li> <li>\u67e5\u770bMysql\u7248\u672c\u4fe1\u606f\uff1astatus\uff0c<ul> <li>\u7248\u672c\u53f7+\u65e5\u671f\uff1aSELECT VERSION(), CURRENT_DATE;</li> </ul> </li> <li>\u4fee\u6539\u63d0\u793a\u7b26 PROMPT xxx<ul> <li>\\D \u65e5\u671f\uff0c \\d \u6570\u636e\u5e93 ,\\h \u670d\u52a1\u5668\u540d\u79f0 , \\u \u5f53\u524d\u7528\u6237</li> </ul> </li> <li>Show\u547d\u4ee4\uff1a<ul> <li>\u5f53\u524d\u6570\u636e\u5e93: SHOW DATABASES;</li> <li>\u5f53\u524d\u6570\u636e\u5e93\u4e2d\u7684\u8868\uff1aSHOW TABLES;</li> <li>\u8868\u7684\u5c5e\u6027\u4fe1\u606f\uff1aSHOW COLUMNS FROM table_name</li> <li>\u8868\u7684\u7d22\u5f15\u4fe1\u606f\uff1aSHOW INDEX FROM table_name</li> <li>\u663e\u793a\u6570\u636e\u5e93\u4e2d\u6240\u6709\u8868\u7684\u4fe1\u606f: SHOW TABLE STATUS FROM database_name (LIKE 'runroob%'\uff0c\u8868\u540d\u4ee5runroob\u5f00\u5934\u7684\u8868\u7684\u4fe1\u606f)</li> </ul> </li> </ul> SELECT VERSION( ) \u670d\u52a1\u5668\u7248\u672c\u4fe1\u606f SELECT DATABASE( ) \u5f53\u524d\u6570\u636e\u5e93\u540d (\u6216\u8005\u8fd4\u56de\u7a7a) SELECT USER( ) \u5f53\u524d\u7528\u6237\u540d SHOW STATUS \u670d\u52a1\u5668\u72b6\u6001 SHOW VARIABLES \u670d\u52a1\u5668\u914d\u7f6e\u53d8\u91cf <p>\u8865\uff1a</p> <ul> <li>Mysql\u547d\u4ee4\u7684\u5927\u5c0f\u5199\u95ee\u9898</li> </ul> <p>\u9ed8\u8ba4Windows\u4e0b\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0cLinux\u4e0b\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5b9e\u9645\u4e0a\u7531\u5168\u5c40\u53c2\u6570<code>lower_case_file_system</code>\u548c<code>lower_case_table_names</code>\u63a7\u5236\uff0cLinux\u4e0b\u4fee\u6539my.cnf\uff0cWindows\u4e0b\u4fee\u6539my.ini\uff0c \u8be6\u60c5\uff1a <code>lower_case_file_system</code>\uff1aON\uff0cOFF(\u4e0d\u654f\u611f) <code>lower_case_table_names</code>\uff1a0(\u654f\u611f)\uff0c1\uff0c2 \u67e5\u770b\u547d\u4ee4\uff1ashow global variables like '%lower_case%';</p> <p>\u8981\u6c42\uff1a\u8868\u540d\u3001\u5b57\u6bb5\u540d\u5fc5\u987b\u4f7f\u7528\u5c0f\u5199\u5b57\u6bcd\u6216\u6570\u5b57 \uff0c \u7981\u6b62\u51fa\u73b0\u6570\u5b57\u5f00\u5934\uff0c\u7981\u6b62\u4e24\u4e2a\u4e0b\u5212\u7ebf\u4e2d\u95f4\u53ea \u51fa\u73b0\u6570\u5b57\u3002</p> <ul> <li>\u89c4\u8303</li> </ul> <p>\u5173\u952e\u5b57\u4e0e\u51fd\u6570\u540d\u79f0\u5168\u90e8\u5927\u5199\uff0c\u6570\u636e\u5e93\u540d\u79f0\uff0c\u8868\u540d\u79f0\uff0c\u5b57\u6bb5\u540d\u79f0\u5168\u90e8\u5c0f\u5199\uff0c\u8bed\u53e5\u4ee5\u5206\u53f7\u7ed3\u5c3e</p>"},{"location":"tech/tools/Mysql/#2","title":"2.\u7528\u6237\u6743\u9650\u7ba1\u7406","text":"<ul> <li>\u6743\u9650\u5206\u5e03\uff1a</li> </ul> <ul> <li>\u6743\u9650\u68c0\u67e5\u987a\u5e8f\uff1a</li> </ul> <ul> <li> <p>\u7528\u6237\u64cd\u4f5c\uff1a</p> <ul> <li>\u521b\u5efa\u7528\u6237\u4ee5\u53ca\u5bc6\u7801</li> </ul> <pre><code>CREATE USER 'username'@'ip' IDENTIFIED BY 'password';\n#eg. @\u8868\u793a\u4efb\u4f55\u4e3b\u673a\u90fd\u53ef\u4ee5\u901a\u8fc7\u8be5\u7528\u6237\u8fde\u63a5\nCREATE USER 'lisi'@'%' IDENTIFIED BY 'password';\n</code></pre> <ul> <li>\u5220\u9664\u7528\u6237\uff1a<code>DROP user username@ip;</code></li> </ul> <ul> <li> <p>\u4fee\u6539\u7528\u6237\u5bc6\u7801\uff1a</p> <pre><code>ALTER USER usrname@ip IDENTIFIED BY 'newpassword';\nSET PASSWORD FOR username@ip = PASSWORD('newpassword');\n#\u5916\u90e8shell\u4e2d\nshell&gt; mysqladmin -u user_name -h host_name password \"new_password\"\n</code></pre> </li> </ul> <ul> <li> <p>\u8bbe\u7f6e\u5bc6\u7801\u8fc7\u671f\uff1a</p> <pre><code>#\u4fee\u6539my.cnf\ndefault_password_lifetime=xxx\n#\u7ed9\u7528\u6237\u8bbe\u7f6e\nALTER USER username@ip PASSWORD EXPIRE INTERVAL 90 DAY/ NEVER / DEFAULT\n</code></pre> </li> </ul> <ul> <li>\u9501\u5b9a\u7528\u6237\uff1a<code>ALTER USER username@ip account unlock/lock</code></li> </ul> <ul> <li>\u7528\u6237\u91cd\u547d\u540d\uff1a<code>rename user username@ip to new_username@ip</code></li> </ul> </li> </ul> <ul> <li> <p>\u6743\u9650\u64cd\u4f5c\uff1a</p> <ul> <li> <p>\u5e38\u89c1grant\u6743\u9650\uff1a</p> <ul> <li>select, insert, update, delete, create, alter, drop, refrerences, index, create view, show view, create routine, alter routine, execute</li> <li>\u4e5f\u53ef\u4ee5\u63a5\u67e5\u8be2\u8bed\u53e5\u8bbe\u7f6e\u9488\u5bf9\u5217\u7684\u6743\u9650</li> </ul> </li> </ul> <ul> <li> <p>\u6388\u6743\uff1a<code>GRANT (priv_type) ON (priv_level) TO 'username'@'IP'</code></p> <pre><code>grant select, insert, update, delete on testdb.* to common_user@'%' #\u793a\u4f8b\n\n#\u5168\u90e8\u6570\u636e\u5e93\ngrant all on *.* to dba@'localhost' \n#\u67d0\u4e2a\u6570\u636e\u5e93\u7684\u67d0\u4e2a\u8868\ngrant all privileges on testdb.testtable to dba@'localhost'\n#\u5141\u8bb8\u8be5\u7528\u6237\u7ee7\u7eed\u7ed9\u522b\u7684\u7528\u6237\u8d4b\u6743\ngrant all privileges on *.* to 'zhangsan'@'192.168.1.%' with grant option;\n#\u5b58\u50a8\u8fc7\u7a0b\ngrant execute on procedure testdb.pr_add to 'dba'@'localhos'\n#\u51fd\u6570\ngrant execute on function testdb.fn_add to 'dba'@'localhost'\n</code></pre> </li> </ul> <ul> <li>\u67e5\u770b\u6743\u9650\uff1a<code>show grants (for username@localhost);</code></li> </ul> <ul> <li> <p>\u64a4\u9500\u6743\u9650\uff1a<code>revoke all on *.* from dba@localhost;</code></p> <ul> <li>\u8bed\u6cd5\u548cgrant\u76f8\u540c\uff0c\u5c06to\u4e3afrom</li> </ul> </li> </ul> <ul> <li>\u521b\u5efa\u5b8c\u540e\u5237\u65b0\uff1a<code>FLUSH PRIVILEGES;</code></li> </ul> </li> </ul>"},{"location":"tech/tools/Mysql/#3","title":"3.\u6570\u636e\u5e93\u6570\u636e\u64cd\u4f5c","text":""},{"location":"tech/tools/Mysql/#31","title":"3.1\u6570\u636e\u5e93","text":"<ul> <li>\u521b\u5efa\u6570\u636e\u5e93\uff1a CREATE DATABASE DATABASE_NAME<ul> <li>\u4e0d\u767b\u5f55\u7248\u672c\uff1amysqladmin -u root -p create RUNOOB</li> </ul> </li> <li>\u5220\u9664\u6570\u636e\u5e93\uff1aDROP DATABASE DATABASE_NAME<ul> <li>\u4e0d\u767b\u5f55\u7248\u672c\uff1amysqladmin -u root -p drop RUNOOB</li> </ul> </li> <li>\u9009\u62e9\u6570\u636e\u5e93\uff1ause database_name</li> </ul>"},{"location":"tech/tools/Mysql/#32","title":"3.2\u6570\u636e\u8868","text":"<ul> <li> <p>\u521b\u5efa\u6570\u636e\u8868\uff1aCREATE TABLE table_name(column_name column_type)</p> <pre><code>CREATE TABLE IF NOT EXISTS runoob_tbl(\n   runoob_id INT UNSIGNED AUTO_INCREMENT,\n   runoob_title VARCHAR(100) character set utf8 NOT NULL,\n   runoob_author VARCHAR(40) NOT NULL,\n   submission_date DATE,\n   PRIMARY KEY ( runoob_id )\n)ENGINE=InnoDB DEFAULT CHARSET=utf8;\n</code></pre> <ul> <li>PRIMARY\u6307\u5b9a\u4e3b\u952e\uff0cCHARSET\u8bbe\u7f6e\u7f16\u7801\uff0cENGINE\u6307\u5b9a\u5b58\u50a8\u5f15\u64ce</li> </ul> <ul> <li>AUTO_INCREMENT\u5b9a\u4e49\u5217\u4e3a\u81ea\u589e\u7684\u5c5e\u6027\uff0c\u4e00\u822c\u7528\u4e8e\u4e3b\u952e\uff0c\u6570\u503c\u4f1a\u81ea\u52a8\u52a01\u3002</li> <li>\u5982\u679c\u4f60\u4e0d\u60f3\u5b57\u6bb5\u4e3a NULL \u53ef\u4ee5\u8bbe\u7f6e\u5b57\u6bb5\u7684\u5c5e\u6027\u4e3a NOT NULL\uff0c \u5728\u64cd\u4f5c\u6570\u636e\u5e93\u65f6\u5982\u679c\u8f93\u5165\u8be5\u5b57\u6bb5\u7684\u6570\u636e\u4e3aNULL \uff0c\u5c31\u4f1a\u62a5\u9519\u3002</li> <li><code>character set utf8</code>\u8bbe\u7f6e\u5b57\u7b26\u96c6\u9632\u6b62\u4e2d\u6587\u4e71\u7801</li> </ul> </li> </ul> <ul> <li>\u5220\u9664\u6570\u636e\u8868\uff1a DROP TABLE table_name;</li> </ul> <ul> <li> <p>\u4fee\u6539\u6570\u636e\u8868\uff1a\u5229\u7528ALTER\u547d\u4ee4</p> <ul> <li> <p>\u4fee\u6539\u5b57\u6bb5\uff1a</p> <ul> <li>ADD(\u6dfb\u52a0\u5217)\uff0cDROP(\u5220\u9664\u5217)\uff0cMODIFY\u3001CHANGE(\u4fee\u6539\u5b57\u6bb5\u7c7b\u578b\u540d\u79f0)</li> </ul> <ul> <li><code>mysql   ALTER TABLE testalter_tbl DROP i;   ALTER TABLE testalter_tbl ADD i INT FIRST;   ALTER TABLE testalter_tbl ADD i INT AFTER c;   ALTER TABLE testalter_tbl MODIFY c CHAR(10);   ALTER TABLE testalter_tbl CHANGE i j BIGINT;</code></li> </ul> <ul> <li> <p>\u9ed8\u8ba4\u503c\u7684\u5904\u7406\uff1a</p> <ul> <li> <p>\u5982\u679c\u4f60\u4e0d\u8bbe\u7f6e\u9ed8\u8ba4\u503c\uff0cMySQL\u4f1a\u81ea\u52a8\u8bbe\u7f6e\u8be5\u5b57\u6bb5\u9ed8\u8ba4\u4e3a NULL\u3002</p> <pre><code>ALTER TABLE testalter_tbl \n      MODIFY j BIGINT NOT NULL DEFAULT 100;\n</code></pre> </li> </ul> </li> </ul> </li> </ul> <ul> <li>\u4fee\u6539\u8868\u540d\uff1aALTER TABLE testalter_tbl RENAME TO alter_tbl;</li> </ul> <ul> <li> <p>ALTER\u7684\u5176\u4ed6\u7528\u9014\uff1a</p> <ul> <li>\u4fee\u6539\u5b58\u50a8\u5f15\u64ce\uff1a<code>ALTER TABLE table_name ENGINE=engine_name</code>;</li> <li>\u4fee\u6539\u5b50\u6bb5\u76f8\u5bf9\u4f4d\u7f6e\uff1a<code>alter table tableName modify name1 type1 first(after name2);</code> \u653e\u5728\u6700\u524d\u9762\u6216name2\u540e\u9762</li> </ul> </li> </ul> </li> </ul> <ul> <li> <p>\u67e5\u770b\u6570\u636e\u8868\uff1a</p> <ul> <li><code>SHOW CREATE TABLE table_name\\G</code></li> <li><code>Describe table_name</code></li> <li><code>desc table_name</code></li> <li><code>select * from table_name</code></li> </ul> </li> </ul>"},{"location":"tech/tools/Mysql/#33","title":"3.3\u6570\u636e","text":"<ul> <li> <p>\u63d2\u5165\u6570\u636e\uff1a\u5b57\u7b26\u578b\u8981\u7528\u5f15\u53f7</p> <pre><code>INSERT INTO table_name ( field1, field2,...fieldN )\n                       VALUES\n                       ( value1, value2,...valueN );\n#\u793a\u4f8b\nmysql&gt; INSERT INTO runoob_tbl\n    -&gt; (runoob_title, runoob_author, submission_date)\n    -&gt; VALUES\n    -&gt; (\"\u5b66\u4e60 MySQL\", \"\u83dc\u9e1f\u6559\u7a0b\", NOW());\n</code></pre> </li> </ul> <ul> <li> <p>\u67e5\u8be2\u6570\u636e\uff1a</p> <pre><code>SELECT column_name,column_name\nFROM table_name\n[WHERE Clause]\ngroup by column_nmae\nhaving xxx\norder by\n[LIMIT N][ OFFSET M];\n</code></pre> <ul> <li> <p>\u6267\u884c\u987a\u5e8f\uff1a</p> <ul> <li>FROM, including JOINs</li> <li>WHERE</li> <li>GROUP BY</li> <li>HAVING</li> <li>WINDOW functions</li> <li>SELECT</li> <li>DISTINCT</li> <li>UNION<ul> <li>UNION\u8981\u4fdd\u8bc1\u4e24\u4e2a\u8868\u7684\u5217\u7684\u6570\u76ee\u548c\u5217\u7684\u7c7b\u578b\u5b8c\u5168\u4e00\u81f4\uff0c\u53ef\u4ee5\u7528NULL\u53bb\u6d4b\u8bd5\u7c7b\u578b</li> </ul> </li> <li>ORDER BY</li> <li>LIMIT and OFFSET</li> </ul> </li> </ul> <ul> <li> <p>WHERE\u5b50\u53e5\uff1a\u64cd\u4f5c\u7b26\u6709=, &lt;&gt;(!=), &gt;, &lt;, &gt;=, &lt;=</p> <pre><code>SELECT field1, field2,...fieldN FROM table_name1, table_name2...\n[WHERE condition1 [AND [OR]] condition2.....\n</code></pre> </li> </ul> <ul> <li> <p>Like\u5b50\u53e5\uff1a%\u5339\u914dany str, _\u5339\u914dany char</p> <pre><code>SELECT field1, field2,...fieldN \nFROM table_name\nWHERE field1 LIKE condition1 [AND [OR]] filed2 = 'somevalue'\n</code></pre> </li> </ul> <ul> <li> <p>ORDER BY\u5b50\u53e5\uff1aASC(\u5347\u5e8f\uff0c\u9ed8\u8ba4)\uff0cDESC(\u964d\u5e8f)\uff0c\u53ef\u8bbe\u5b9a\u591a\u4e2a\u5b57\u6bb5</p> <pre><code>SELECT field1, field2,...fieldN FROM table_name1, table_name2...\nORDER BY field1 [ASC [DESC][\u9ed8\u8ba4 ASC]], [field2...] [ASC [DESC][\u9ed8\u8ba4 ASC]]\n</code></pre> </li> </ul> <ul> <li> <p>GROUP BY\u5b50\u53e5\uff1afunction\u5728\u5217\u4e0a\u64cd\u4f5c</p> <pre><code>SELECT column_name, function(column_name)\nFROM table_name\nWHERE column_name operator value\nGROUP BY column_name;\n(WITH ROLLUP)\n</code></pre> <ul> <li>\u6700\u540e\u53ef\u4ee5\u52a0\u4e0a\uff0cWITH ROLLUP\uff0c\u6b64\u51fd\u6570\u662f\u5bf9\u805a\u5408\u51fd\u6570\u8fdb\u884c\u6c42\u548c\uff0c\u6ce8\u610f with rollup\u662f\u5bf9 group by \u540e\u7684\u7b2c\u4e00\u4e2a\u5b57\u6bb5\uff0c\u8fdb\u884c\u5206\u7ec4\u6c42\u548c\uff0c\u4e0d\u80fd\u548corder by\u4e00\u8d77\u4f7f\u7528\u3002</li> </ul> </li> </ul> <ul> <li> <p>JOIN\u5b50\u53e5\uff1a</p> <ul> <li>INNER JOIN\uff08\u5185\u8fde\u63a5,\u6216\u7b49\u503c\u8fde,\u81ea\u7136\u8fde\u63a5\uff09\uff1a\u83b7\u53d6\u4e24\u4e2a\u8868\u4e2d\u5b57\u6bb5\u5339\u914d\u5173\u7cfb\u7684\u8bb0\u5f55\u3002</li> </ul> <ul> <li>LEFT JOIN\uff08\u5de6\u8fde\u63a5\uff09\uff1a\u83b7\u53d6\u5de6\u8868\u6240\u6709\u8bb0\u5f55\uff0c\u5373\u4f7f\u53f3\u8868\u6ca1\u6709\u5bf9\u5e94\u5339\u914d\u7684\u8bb0\u5f55\u3002</li> </ul> <ul> <li> <p>RIGHT JOIN\uff08\u53f3\u8fde\u63a5\uff09\uff1a \u4e0e LEFT JOIN \u76f8\u53cd\uff0c\u7528\u4e8e\u83b7\u53d6\u53f3\u8868\u6240\u6709\u8bb0\u5f55\uff0c\u5373\u4f7f\u5de6\u8868\u6ca1\u6709\u5bf9\u5e94\u5339\u914d\u7684\u8bb0\u5f55\u3002</p> <pre><code>SELECT a.runoob_id, a.runoob_author, b.runoob_count \nFROM runoob_tbl a INNER JOIN tcount_tbl b \nON a.runoob_author = b.runoob_author;\n</code></pre> </li> </ul> </li> </ul> </li> </ul> <ul> <li> <p>\u4fee\u6539\u3001\u66f4\u65b0\u6570\u636e\uff1a</p> <pre><code>UPDATE table_name SET field1=new-value1, field2=new-value2\n[WHERE Clause]\n</code></pre> </li> </ul> <ul> <li> <p>\u5220\u9664\u6570\u636e\uff1a</p> <pre><code>DELETE FROM table_name [WHERE Clause]\n</code></pre> </li> </ul> <ul> <li> <p>\u5176\u4ed6\u64cd\u4f5c\u7b26\uff1a</p> <ul> <li> <p>UNION\uff1aALL(\u8fd4\u56de\u6240\u6709\u7ed3\u679c\uff0c\u5305\u542b\u91cd\u590d\u6570\u636e), DISTINCT(\u5220\u9664\u91cd\u590d\u6570\u636e\uff0c\u9ed8\u8ba4)</p> <pre><code>SELECT expression1, expression2, ... expression_n\nFROM tables\n[WHERE conditions]\nUNION [ALL | DISTINCT]\nSELECT expression1, expression2, ... expression_n\nFROM tables\n[WHERE conditions];\n</code></pre> </li> </ul> <ul> <li>\u6b63\u5219\u5339\u914d\uff1aREGEXP / RLIKE\uff08\u5751\uff09</li> </ul> </li> </ul>"},{"location":"tech/tools/Mysql/#4","title":"4.\u4e8b\u52a1\u64cd\u4f5c","text":"<ul> <li>\u4e8b\u52a1\uff1a\u4e00\u7cfb\u5217\u6570\u636e\u5e93\u64cd\u4f5c\u8bed\u53e5\u6784\u6210\u4e00\u4e2a\u4e8b\u52a1<ul> <li>\u6ee1\u8db3\uff1a\u539f\u5b50\u6027\uff08Atomicity\uff0c\u6216\u79f0\u4e0d\u53ef\u5206\u5272\u6027\uff09\u3001\u4e00\u81f4\u6027\uff08Consistency\uff09\u3001\u9694\u79bb\u6027\uff08Isolation\uff0c\u53c8\u79f0\u72ec\u7acb\u6027\uff09\u3001\u6301\u4e45\u6027\uff08Durability\uff09\u3002</li> <li>MySQL \u547d\u4ee4\u884c\u7684\u9ed8\u8ba4\u8bbe\u7f6e\u4e0b\uff0c\u4e8b\u52a1\u90fd\u662f\u81ea\u52a8\u63d0\u4ea4\u3002\u53ef\u4ee5\u9009\u62e9\u7528BEGIN/START TRANSACTION\uff0c\u6216\u8005SET AUTOCOMMIT=0</li> </ul> </li> <li>\u4e8b\u52a1\u63a7\u5236\u8bed\u53e5\uff1a<ul> <li>BEGIN/ START TRANSACTION: \u5f00\u542f\u4e00\u4e2a\u4e8b\u52a1</li> <li>COMMIT/COMMIT WORK: \u63d0\u4ea4\u4e8b\u52a1\u8fdb\u884c\u4fee\u6539</li> <li>ROLLBACK/ ROLLBACK WORK: \u7ed3\u675f\u4e8b\u52a1\uff0c\u64a4\u9500\u672a\u63d0\u4ea4\u7684\u4fee\u6539</li> <li>SAVEPOINT identifier: \u521b\u5efa\u4e00\u4e2a\u4fdd\u5b58\u70b9</li> <li>RELEASE SAVEPOINT identifier: \u5220\u9664\u4e00\u4e2a\u4fdd\u5b58\u70b9</li> <li>ROLLBACK TO identifier: \u56de\u6eda\u5230\u4fdd\u5b58\u70b9</li> <li>SET TRANSACTION: \u8bbe\u7f6e\u9694\u79bb\u7ea7\u522b\uff0c\u56db\u79cdREAD UNCOMMITTED\u3001READ COMMITTED\u3001REPEATABLE READ \u548c SERIALIZABLE\u3002</li> </ul> </li> </ul>"},{"location":"tech/tools/Mysql/#5","title":"5.\u7d22\u5f15\u548c\u7ea6\u675f\u64cd\u4f5c","text":"<ul> <li> <p>INDEX</p> <ul> <li> <p>\u521b\u5efa\u7d22\u5f15\uff1aCREATE INDEX indexName ON table_name (column_name)</p> <ul> <li>ALTER table tableName ADD INDEX indexName(columnName)</li> </ul> <ul> <li>\u5982\u679c\u662fCHAR\uff0cVARCHAR\u7c7b\u578b\uff0clength\u53ef\u4ee5\u5c0f\u4e8e\u5b57\u6bb5\u5b9e\u9645\u957f\u5ea6\uff1b\u5982\u679c\u662fBLOB\u548cTEXT\u7c7b\u578b\uff0c\u5fc5\u987b\u6307\u5b9a length</li> </ul> <ul> <li> <p>\u521b\u5efa\u8868\u65f6\u6307\u5b9a\uff1a</p> <ul> <li><code>mysql   CREATE TABLE mytable(      ID INT NOT NULL,      username VARCHAR(16) NOT NULL,      INDEX [indexName] (username(length))     );</code></li> </ul> </li> </ul> </li> </ul> <ul> <li>\u6dfb\u52a0\u7d22\u5f15\uff1aALTER table tableName ADD INDEX indexName(columnName)</li> </ul> <ul> <li>\u5220\u9664\u7d22\u5f15\uff1aDROP INDEX [indexName] ON mytable; </li> </ul> <ul> <li> <p>\u552f\u4e00\u7d22\u5f15\uff1a\u7d22\u5f15\u5217\u7684\u503c\u5fc5\u987b\u552f\u4e00\uff0c\u5141\u8bb8\u6709\u7a7a\u3002\u7ec4\u5408\u7d22\u5f15\u7684\u7ec4\u5408\u5fc5\u987b\u552f\u4e00</p> <ul> <li>\u7b2c\u4e00\u79cd\u628aINDEX\u6362\u4e3aUNIQUE INDEX\uff0c\u7b2c\u4e8c\u4e2d\u628aADD INDEX \u6362\u4e3a ADD UNIQUE</li> <li>\u521b\u5efa\u8868\u65f6\u628aINDEX\u6362\u4f4dUNIQUE</li> </ul> </li> </ul> <ul> <li> <p>\u663e\u793a\u7d22\u5f15\u4fe1\u606f\uff1a</p> <ul> <li>SHOW INDEX FROM table_n/ SHOW INDEX IN table_name</li> </ul> </li> </ul> </li> </ul> <ul> <li> <p>CONSTRAINT:</p> <ul> <li> <p>ALTER\u547d\u4ee4\u6dfb\u52a0\u7ea6\u675f\uff1a</p> <ul> <li><code>ALTER TABLE tbl_name ADD PRIMARY KEY (column_list):</code>\u8be5\u8bed\u53e5\u6dfb\u52a0\u4e00\u4e2a\u4e3b\u952e\uff0c\u8fd9\u610f\u5473\u7740\u7d22\u5f15\u503c\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0c\u4e14\u4e0d\u80fd\u4e3aNULL\u3002</li> </ul> <ul> <li><code>ALTER TABLE testalter_tbl DROP PRIMARY KEY</code>: \u5220\u9664\u4e3b\u952e</li> </ul> <ul> <li><code>ALTER TABLE tbl_name ADD UNIQUE index_name (column_list):</code>\u8fd9\u6761\u8bed\u53e5\u521b\u5efa\u7d22\u5f15\u7684\u503c\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff08\u9664\u4e86NULL\u5916\uff0cNULL\u53ef\u80fd\u4f1a\u51fa\u73b0\u591a\u6b21\uff09\u3002</li> </ul> <ul> <li><code>ALTER TABLE tbl_name ADD INDEX index_name (column_list):</code> \u6dfb\u52a0\u666e\u901a\u7d22\u5f15\uff0c\u7d22\u5f15\u503c\u53ef\u51fa\u73b0\u591a\u6b21\u3002</li> </ul> <ul> <li><code>ALTER TABLE tbl_name ADD FULLTEXT index_name (column_list)</code>:\u8be5\u8bed\u53e5\u6307\u5b9a\u4e86\u7d22\u5f15\u4e3a FULLTEXT \uff0c\u7528\u4e8e\u5168\u6587\u7d22\u5f15\u3002</li> </ul> <ul> <li> <p><code>ALTER table_name ADD CONSTRAINT (constraint_name) constraint</code>\u589e\u52a0\u7ea6\u675f</p> <pre><code>ALTER TABLE book ADD CONSTRAINT PRIMARY KEY(bno);\n</code></pre> </li> </ul> </li> </ul> <ul> <li> <p>ALTER\u547d\u4ee4\u5220\u9664\u7ea6\u675f</p> <ul> <li><code>AUTO_INCREMENT</code>\u7ea6\u675f\uff1a<code>ALTER TABLE table_name change i i int</code></li> <li><code>FOREIGN KEY</code>: <code>ALTER TABLE table_name DROP FOREIGN KEY constraint_name</code></li> </ul> </li> </ul> <ul> <li> <p>CHECK\u64cd\u4f5c\u7684\u5b9e\u73b0\uff1a\u5229\u7528enum\u5b57\u6bb5</p> <ul> <li> <p>\u7279\u522b\u6ce8\u610f\uff1aenum\u7684\u4e0b\u6807\u4ece1\u5f00\u59cb</p> <pre><code>create table table_name(\n  priority ENUM('low','middle', 'high') NOT NULL\n);\n</code></pre> </li> </ul> <ul> <li> <p>\u66f4\u6539ENUM\u503c\uff1a\u5148\u65b0\u589e\u65b0\u7c7b\u578b\u503c\uff0c\u5c06\u539f\u6709\u7684\u8981\u88ab\u66ff\u6362\u6389\u7684\u7c7b\u578b\u503c\u7684\u6570\u636e\u53d8\u66f4\u4e3a\u65b0\u7684\u7c7b\u578b\u503c\uff0c\u6700\u540e\u518d\u6b21\u53d8\u66f4\u8868\u4e2d\u7684Enum\u7c7b\u578b\u503c\uff0c\u5220\u53bb\u8981\u66ff\u6362\u6389\u7684\u7c7b\u578b\u503c</p> <pre><code>alter table servers modify status enum ('initializing','initialized','error','initialize_failed') default 'initializing';\nupdate servers set status = 'initialize_failed' where status = 'error';\nalter table servers modify status enum ('initializing','initialized','initialize_failed') default 'initializing';\n</code></pre> </li> </ul> </li> </ul> </li> </ul>"},{"location":"tech/tools/Mysql/#6","title":"6.\u6570\u636e\u5bfc\u51fa\\\u5165","text":"<ul> <li> <p>\u6570\u636e\u5bfc\u51fa</p> <pre><code>SELECT * FROM passwd INTO OUTFILE '/tmp/runoob.txt'\nFIELDS TERMINATED BY ',' ENCLOSED BY '\"'\nLINES TERMINATED BY '\\r\\n'; #csv\u683c\u5f0f\n</code></pre> <ul> <li>mysqldump\u547d\u4ee4\u5bfc\u51faSQL\u683c\u5f0f<ul> <li>mysqldump -u root -p RUNOOB runoob_tbl &gt; dump.txt</li> <li>mysqldump -u root -p --all-databases &gt; database_dump.txt</li> <li>mysqldump -u root -p RUNOOB runoob_tbl &gt; dump.txt</li> </ul> </li> <li>mysqldump\u5bfc\u51faSQL\u811a\u672c\uff1a<ul> <li>mysqldump -u root -p --no-create-info \\       --tab=/tmp RUNOOB runoob_tbl</li> </ul> </li> </ul> </li> </ul> <ul> <li> <p>\u6570\u636e\u5bfc\u5165: local\u4ee3\u8868\u5ba2\u6237\u4e3b\u673a\uff0c\u5426\u5219\u9ed8\u8ba4\u4e3a\u670d\u52a1\u5668</p> <pre><code>LOAD DATA LOCAL INFILE 'dump.txt' INTO TABLE mytbl\nFIELDS TERMINATED BY ':'\nLINES TERMINATED BY '\\r\\n';\n</code></pre> <ul> <li>mysql -u root -p 123456 &lt; runoob.sql</li> </ul> <ul> <li>source /home/abc/abc.sql\uff0c\u767b\u9646\u540e\u521b\u5efa\u6570\u636e\u5e93\u8bbe\u7f6e\u7f16\u7801\u540e\u5bfc\u5165</li> </ul> </li> </ul>"},{"location":"tech/tools/Mysql/#7","title":"7.\u89c6\u56fe\u64cd\u4f5c","text":"<p>\u89c6\u56fe\u662f\u4ec0\u4e48</p> <ul> <li>\u89e3\u91ca\uff1a\u5176\u5b9e\u5c31\u662f\u865a\u62df\u8868\uff0c\u884c\u548c\u5217\u6765\u81ea\u4e8e\u81ea\u5b9a\u4e49\u89c6\u56fe\u7684\u67e5\u8be2\u6240\u5f15\u7528\u57fa\u672c\u8868\uff0c\u5e76\u5728\u5177\u4f53\u5f15\u7528\u89c6\u56fe\u65f6\u52a8\u6001\u751f\u6210</li> </ul> <ul> <li>\u7279\u6027\uff1a<ul> <li>\u89c6\u56fe\u7684\u5efa\u7acb\u548c\u5220\u9664\u4e0d\u5f71\u54cd\u57fa\u672c\u8868</li> <li>\u5bf9\u89c6\u56fe\u7684\u5185\u5bb9\u7684\u66f4\u65b0(\u589e\u3001\u5220\u3001\u8be5)\u76f4\u63a5\u5f71\u54cd\u57fa\u672c\u8868</li> <li>\u89c6\u56fe\u6765\u81ea\u591a\u4e2a\u57fa\u672c\u8868\u65f6\uff0c\u4e0d\u5141\u8bb8\u6dfb\u52a0\u548c\u5220\u9664\u6570\u636e</li> </ul> </li> </ul> <p>\u89c6\u56fe\u64cd\u4f5c</p> <ul> <li> <p>\u5efa\u7acb\u89c6\u56fe\uff1aCREATE VIEW view_name as \u67e5\u8be2\u8bed\u53e5</p> <ul> <li>\u4e00\u822c\u4ee5\u89c6\u56fe\u540d\u4ee5v_\u6216\u8005view_\u5f00\u5934</li> <li>\u591a\u8868\uff1aCREATE[OR REPLACE] VIEW viewname[columnlist]AS SELECT statement;</li> </ul> </li> </ul> <ul> <li> <p>\u67e5\u8be2\u89c6\u56fe\uff1aSELECT * FROM view_name</p> <ul> <li>\u63cf\u8ff0\u89c6\u56fe\uff1adesc view_name</li> <li>show tables</li> <li>show create view view_nmae</li> </ul> </li> </ul> <ul> <li> <p>\u4fee\u6539\u89c6\u56fe\uff1a</p> <ul> <li>ALTER VIEW viewname[columnlist]AS SELECT statement;</li> </ul> </li> </ul> <ul> <li>\u5220\u9664\u89c6\u56fe\uff1adrop view view_name</li> </ul> <ul> <li> <p>\u66f4\u65b0\u89c6\u56fe\u6570\u636e</p> <ul> <li>insert into view_name values(xxx)</li> </ul> <ul> <li>update delete\u548c\u4e00\u822c\u8bed\u6cd5\u76f8\u540c</li> </ul> <ul> <li> <p>\u4e0d\u80fd\u66f4\u65b0\u7684\u60c5\u51b5\uff1a</p> <ul> <li>\u89c6\u56fe\u4e2d\u5305\u542bSUM()\u3001COUNT()\u3001MAX()\u548cMIN()\u7b49\u51fd\u6570</li> </ul> <ul> <li>\u89c6\u56fe\u4e2d\u5305\u542bUNION\u3001UNION ALL\u3001DISTINCT\u3001GROUP BY\u548cHAVING\u7b49\u5173\u952e\u5b57</li> </ul> <ul> <li>\u89c6\u56fe\u5bf9\u5e94\u7684\u8868\u5b58\u5728\u6ca1\u6709\u9ed8\u8ba4\u503c\u7684\u5217\uff0c\u800c\u4e14\u8be5\u5217\u6ca1\u6709\u5305\u542b\u5728\u89c6\u56fe\u91cc</li> </ul> <ul> <li>\u5305\u542b\u5b50\u67e5\u8be2\u7684\u89c6\u56fe</li> </ul> </li> </ul> </li> </ul>"},{"location":"tech/tools/Mysql/#8-trigger","title":"8. Trigger","text":"<ul> <li> <p>\u5b9a\u4e49\uff1a\u89e6\u53d1\u5668\u662f\u4e0e\u8868\u6709\u5173\u7684\u6570\u636e\u5e93\u5bf9\u8c61\uff0c\u5728\u6ee1\u8db3\u5b9a\u4e49\u6761\u4ef6\u65f6\u89e6\u53d1\uff0c\u5e76\u6267\u884c\u89e6\u53d1\u5668\u4e2d\u5b9a\u4e49\u7684\u8bed\u53e5\u96c6\u5408\u3002</p> <p><pre><code>CREATE TRIGGER trigger_name BEFORE/AFTER UPDATE/DELETE/INSERT\nON table_name FOR EACH ROW\nBEGIN\nxxx #\u4e0d\u540c\u8bed\u53e5\u7528\u5206\u53f7\u9694\u5f00\nEND;\n</code></pre> </p> <p><code>FOR EACH ROW</code>\u8868\u793a\u4efb\u4f55\u4e00\u6761\u8bb0\u5f55\u4e0a\u7684\u64cd\u4f5c\u6ee1\u8db3\u89e6\u53d1\u4e8b\u4ef6\u540e\u90fd\u4f1a\u89e6\u53d1\u8be5\u89e6\u53d1\u5668</p> <p>\u66f4\u6539\u7ed3\u675f\u7b26\u4ee5\u514d\u7a81\u7136\u7ed3\u675f\u8bed\u53e5</p> <pre><code>DELIMITER ||\nxxx\nDELIMITER ;\n</code></pre> <p>\u5904\u7406\u8bed\u53e5\uff1a</p> <ul> <li> <p>\u629b\u51fa\u5f02\u5e38</p> <pre><code>SIGNAL sqlstate '45000' #\u7528\u6237\u672a\u5b9a\u4e49\u7684\u64cd\u4f5c\nSET MESSAGE_TEXT = 'xxx';\n</code></pre> </li> </ul> <pre><code>DECLARE var_name var_type [DEFAULT value];\nSET var_name = value;\nselect xxx into var_name;\nNEW.columnname #\u65b0\u589e\u884c\u7684\u67d0\u5217\u6570\u636e\nOLD.columnname #\u5220\u9664\u884c\u7684\u67d0\u5217\u6570\u636e\nIF xxx THEN\n  xxx\nELSE \n  xxx\nEND IF;\n#\u5b8c\u6574\u793a\u4f8b\nDELIMITER ||\nCREATE TRIGGER check_book_inventory BEFORE\nINSERT ON borrow FOR EACH ROW\nBEGIN \nDECLARE STOCK1 INT;\nSELECT stock into STOCK1 from book WHERE book.bno = NEW.bno;\n-- SELECT stock from book WHERE book.bno = NEW.bno;\nIF (STOCK1 &gt; 0) THEN\n  UPDATE book SET book.stock=STOCK1-1 WHERE book.bno = NEW.bno;\nELSE\n  SIGNAL sqlstate '45000'\n    SET MESSAGE_TEXT = 'Out of STOCK';\nEND IF;\nEND\n||\nDELIMITER ;\n</code></pre> </li> </ul> <ul> <li>\u67e5\u770b\u89e6\u53d1\u5668\uff1a<code>SHOW TRIGGERS</code></li> </ul> <ul> <li>\u5220\u9664\u89e6\u53d1\u5668\uff1a<code>DROP TRIGGER trigger_n ame;</code></li> </ul>"},{"location":"tech/tools/Mysql/#_3","title":"Mysql Notes","text":""},{"location":"tech/tools/Mysql/#0","title":"0.\u5c0f\u77e5\u8bc6","text":"<ul> <li>\u4e34\u65f6\u8868\u7684\u521b\u5efa\u4e0e\u5220\u9664: CREATE(DROP) TEMPORARY TABLE SalesSummary</li> </ul> <ul> <li> <p>\u5b8c\u6574\u590d\u5236\u8868:</p> <ul> <li>CREATE TABLE targetTable LIKE sourceTable;   INSERT INTO targetTable SELECT * FROM sourceTable;</li> </ul> </li> </ul> <ul> <li> <p>AUTO_INCREMENT\uff1a \u53ea\u80fd\u7ed9\u4e00\u4e2a\u5b57\u6bb5\u4f7f\u7528\uff0c\u5fc5\u987b\u6709NOT NULL\u5c5e\u6027\uff0c\u53ea\u80fd\u7ea6\u675f\u6574\u6570\u7c7b\u578b\u3002\u5f53\u5b9a\u4e49AUTO_INCREMENT\u540e\uff0c\u5c31\u65e0\u9700\u7528\u6237\u8f93\u5165\u6570\u636e\u3002</p> <pre><code>#\u793a\u4f8b\nmysql&gt; CREATE TABLE insect\n    -&gt; (\n    -&gt; id INT UNSIGNED NOT NULL AUTO_INCREMENT,\n    -&gt; PRIMARY KEY (id),\n    -&gt; name VARCHAR(30) NOT NULL, \n    -&gt; date DATE NOT NULL,\n    -&gt; origin VARCHAR(30) NOT NULL\n)engine=innodb auto_increment=100 charset=utf8;\n\nALTER TABLE t AUTO_INCREMENT = 100;\n</code></pre> </li> </ul> <ul> <li> <p>\u5904\u7406\u91cd\u590d\uff1a</p> <ul> <li> <p>\u9632\u6b62\u51fa\u73b0\u91cd\u590d\u6570\u636e</p> <ul> <li>\u8bbe\u7f6e\u4e3b\u952e\uff0c\u6ce8\u610f\u4e3b\u952e\u9ed8\u8ba4\u503c\u8bbe\u7f6e\u4e3aNOT NULL</li> <li>INSERT IGNORE INTO\u63d2\u5165\u6570\u636e\uff0c\u5ffd\u7565\u6570\u636e\u5e93\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\uff0c\u5982\u679c\u6570\u636e\u5e93\u6ca1\u6709\u6570\u636e\uff0c\u5c31\u63d2\u5165\u65b0\u7684\u6570\u636e\uff0c\u5982\u679c\u6709\u6570\u636e\u7684\u8bdd\u5c31\u8df3\u8fc7\u8fd9\u6761\u6570\u636e</li> </ul> </li> </ul> <ul> <li> <p>\u7edf\u8ba1\u91cd\u590d\u6570\u636e\uff1a</p> <pre><code>SELECT COUNT(*) as repetitions, last_name, first_name\nFROM person\nGROUP BY last_name, first_name\nHAVING repetitions &gt; 1;\n</code></pre> </li> </ul> <ul> <li> <p>\u8fc7\u6ee4\u91cd\u590d\u6570\u636e\uff1a</p> <ul> <li>SELECT DISTINCT last_name FROM person</li> <li>SELECT last_name FROM person GROUP BY last_name</li> </ul> </li> </ul> <ul> <li> <p>\u5220\u9664\u91cd\u590d\u6570\u636e\uff1a</p> <pre><code>CREATE TABLE tmp SELECT last_name, first_name, sex FROM person_tbl  GROUP BY (last_name, first_name, sex);\nDROP TABLE person_tbl;\nALTER TABLE tmp RENAME TO person_tbl;\n</code></pre> </li> </ul> </li> </ul>"},{"location":"tech/tools/Mysql/#x","title":"x. \u57fa\u7840\u77e5\u8bc6","text":""},{"location":"tech/tools/Mysql/#x1","title":"x.1 \u6570\u636e\u7c7b\u578b\uff1a","text":"<ul> <li> <p>\u6570\u503c\u7c7b\u578b\uff1aINTEGER, SMALLINT, DECIMAL(NUMERIC), FLOAT, REAL, DOUBLE</p> <ul> <li>\u6ce8\u610f\u5f53decimal\u7c7b\u578b\u957f\u5ea6\u5c0f\u4e8e14\u7684\u65f6\u5019,\u5411decimal\u7c7b\u578b\u5b57\u6bb5\u4e2d\u63d2\u5165\u6570\u636e\u65f6\uff0c\u5c0f\u6570\u4f4d\u65e0\u6548\u76840\u4f1a\u88ab\u81ea\u52a8\u53bb\u6389\uff0c\u8fd9\u65f6\u5019\u9875\u9762\u663e\u793a\u9700\u8981\u8fdb\u884c\u5c0f\u6570\u4f4d\u683c\u5f0f\u5316</li> </ul> <p></p> </li> </ul> <ul> <li> <p>\u65e5\u671f\u548c\u65f6\u95f4\u7c7b\u578b\uff1aDATETIME\u3001DATE\u3001TIMESTAMP\u3001TIME\u3001YEAR\uff0c\u5f53\u6307\u5b9a\u4e0d\u5408\u6cd5\u7684Mysql\u4e0d\u80fd\u8868\u793a\u7684\u503c\u4f7f\u7528\u96f6\u503c</p> <ul> <li>\u63d2\u5165date\u7c7b\u578b\u6570\u636e\u8981\u52a0\u4e0a\u5355\u5f15\u53f7</li> </ul> </li> </ul> <p></p> <ul> <li>\u5b57\u7b26\u4e32\u7c7b\u578b\uff1aCHAR\u3001VARCHAR\u3001BINARY\u3001VARBINARY\u3001BLOB\u3001TEXT\u3001ENUM\u548cSET  </li> </ul> <p></p>"},{"location":"tech/tools/Mysql/#x2-null","title":"x.2 NULL\u503c\u5904\u7406","text":"<ul> <li>IS NULL: \u5f53\u5217\u7684\u503c\u662f NULL,\u6b64\u8fd0\u7b97\u7b26\u8fd4\u56de true\u3002</li> <li>IS NOT NULL: \u5f53\u5217\u7684\u503c\u4e0d\u4e3a NULL, \u8fd0\u7b97\u7b26\u8fd4\u56de true\u3002</li> <li>&lt;=&gt;: \u6bd4\u8f83\u64cd\u4f5c\u7b26\uff08\u4e0d\u540c\u4e8e = \u8fd0\u7b97\u7b26\uff09\uff0c\u5f53\u6bd4\u8f83\u7684\u7684\u4e24\u4e2a\u503c\u76f8\u7b49\u6216\u8005\u90fd\u4e3a NULL \u65f6\u8fd4\u56de true\u3002</li> </ul> <pre><code>select * , columnName1+ifnull(columnName2,0) from tableName;\nSELECT * FROM runoob_test_tbl WHERE runoob_count IS NULL;\n</code></pre> <p>columnName1\uff0ccolumnName2 \u4e3a int \u578b\uff0c\u5f53 columnName2 \u4e2d\uff0c\u6709\u503c\u4e3a null \u65f6\uff0ccolumnName1+columnName2=null\uff0c ifnull(columnName2,0) \u628a columnName2 \u4e2d null \u503c\u8f6c\u4e3a 0\u3002</p>"},{"location":"tech/tools/Mysql/#x3","title":"x.3 \u4e3b\u952e\u548c\u5916\u952e\u95ee\u9898","text":"<ul> <li> <p>\u4e3b\u952e</p> <ul> <li>\u6bcf\u4e2a\u8868\u53ea\u80fd\u5b9a\u4e49\u4e00\u4e2a\u4e3b\u952e\uff0c\u4e3b\u952e\u503c\u5fc5\u987b\u552f\u4e00\u6807\u8bc6\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\uff0c\u4e0d\u80fd\u4e3aNULL</li> </ul> <ul> <li>\u4e00\u4e2a\u5b57\u6bb5\u540d\u53ea\u80fd\u5728\u8054\u5408\u4e3b\u952e\u5b57\u6bb5\u8868\u4e2d\u51fa\u73b0\u4e00\u6b21, \u8054\u5408\u4e3b\u952e\u4e0d\u80fd\u5305\u542b\u4e0d\u5fc5\u8981\u7684\u591a\u4f59\u5b57\u6bb5</li> </ul> <ul> <li>\u4e0d\u540c\u8868\u7684\u4e3b\u952e\u540d\u4e0d\u80fd\u76f8\u540c</li> <li>\u5916\u952e\uff1a</li> </ul> <ul> <li>desc\u547d\u4ee4\u4f1a\u663e\u793a\u4e3aMUL\uff0c\u8868\u793a\u5728\u5c5e\u6027\u4e0a\u521b\u5efa\u4e86\u975e\u552f\u4e00\u7d22\u5f15\uff0c\u5e76\u4e14\u5916\u952e\u5217\u53ef\u4ee5\u51fa\u73b0\u76f8\u540c\u7684\u503c(\u662f\u7684\uff0c\u81ea\u5df1\u60f3\u60f3)</li> <li>\u5916\u952e\u53ef\u4ee5\u4e3aNULL</li> <li>\u5b50\u8868\u7684\u5916\u952e\u5217\u4e0d\u80fd\u8bbe\u7f6e\u4e3aNOT NULL</li> </ul> </li> </ul> <ul> <li>\u66f4\u6539\u7236\u8868\u4e2d\u7684\u6570\u636e\u65f6\uff0c\u8981\u786e\u4fdd\u5b50\u8868\u4e2d\u6709\u76f8\u5e94\u7684\u6570\u636e</li> </ul>"},{"location":"tech/tools/Mysql/#x4-grant","title":"x.4 grant\u95ee\u9898","text":"<ul> <li> <p><code>granted by current_role</code>\u662f\u6307\u4f7f\u7528\u548c\u5f53\u524d\u4f1a\u8bdd\u76f8\u5173\u8054\u7684\u89d2\u8272\u800c\u4e0d\u662f\u5f53\u524d\u7528\u6237\u6765\u8fdb\u884c\u6388\u6743\u884c\u4e3a\u3002\u82e5\u4f7f\u7528role\u6765grant\uff0c\u5373\u4f7f\u6388\u4e88\u6743\u9650\u7684\u7528\u6237\u5c06\u6765\u88ab\u64a4\u9500\u6743\u9650\uff0c\u53ea\u8981\u8fd9\u4e2arole\u4ecd\u7136\u5177\u6709\u76f8\u5173\u6743\u9650\uff0c\u90a3\u4e48\u88ab\u6388\u4e88\u6743\u9650\u7684\u7528\u6237\u5c06\u4f1a\u7ee7\u7eed\u62e5\u6709\uff0c\u907f\u514d\u4e86\u4e0d\u5fc5\u8981\u7684cascade\u56de\u6536</p> <p>\u800c\u5982\u679c\u4f7f\u7528\u5f53\u524d\u7528\u6237\u6765\u6388\u6743\uff0c\u90a3\u4e48\u8be5\u7528\u6237\u88ab\u64a4\u9500\u6743\u9650\u65f6\uff0c\u88ab\u6388\u4e88\u6743\u9650\u7684\u7528\u6237\u4e5f\u4f1a\u88ab\u64a4\u9500\u76f8\u5e94\u6743\u9650\u3002</p> </li> </ul> <p>Fibonacci heap\u662f\u5728Binomial heap\u57fa\u7840\u4e0a\u8fdb\u884c\u6539\u8fdb\u7684\u4e00\u79cd\u6570\u636e\u7ed3\u6784\uff0cPush\u64cd\u4f5c\u7684\u5747\u644a\u4ee3\u4ef7\u4e3aO(1)\uff0cPop_min\u64cd\u4f5c\u7684\u5747\u644a\u4ee3\u4ef7\u4ecd\u4e3aO(logn)\uff0c\u4f46\u662fDecrease_key\u7684\u5747\u644a\u4ee3\u4ef7\u88ab\u964d\u4f4e\u5230\u4e86O(1)\u3002\u6838\u5fc3\u5728\u4e8e\u524d\u8005\u820d\u5f03\u4e86\u5728Binomial heap\u4e2dPush\u548cdecrease_key\u4e2d\u7684merge\u64cd\u4f5c\uff0c\u5c06\u5176\u8f6c\u79fb\u5230\u4e86Pop_min\u4e2d\u3002\u603b\u4f53\u65f6\u95f4\u590d\u6742\u5ea6\u4ecd\u7136\u662fO(ElogV)</p>"},{"location":"tech/tools/PackageManager/","title":"PackageManager Notes","text":"<p>\u95f2\u6687\u4e4b\u4f59\u8bb0\u5f55\u5404\u79cd\u5305\u7ba1\u7406\u5668\u4f7f\u7528......</p>"},{"location":"tech/tools/PackageManager/#_1","title":"\u8f6f\u4ef6\u5b89\u88c5\u5305\u7684\u67b6\u6784\u7248\u672c","text":"<ul> <li><code>x86</code>: 32\u4f4d\u7cfb\u7edf\u4e13\u7528</li> <li><code>x86_64</code>: x86\u67b6\u678464\u4f4d\u7cfb\u7edf\u4e13\u7528</li> <li><code>amd64</code>: \u7b49\u4e8e<code>x86_64</code></li> <li><code>aarch64</code>: arm\u67b6\u678464\u4f4d\u7cfb\u7edf\u4e13\u7528</li> <li><code>arm64</code>: \u7b49\u4e8e<code>aarch64</code></li> </ul>"},{"location":"tech/tools/PackageManager/#conda","title":"Conda","text":"<ul> <li>conda\u73af\u5883\u5b89\u88c5:</li> </ul> <p>\u6309\u7167\u5b98\u7f51, \u5efa\u8bae\u5b89\u88c5\u4f53\u79ef\u66f4\u5c0f\u7684miniconda <pre><code>mkdir -p ~/miniconda3\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh\nbash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3\nrm -rf ~/miniconda3/miniconda.sh\n</code></pre></p> <ul> <li><code>conda env create -f environment.yml</code>: \u6839\u636e\u5f53\u524d\u76ee\u5f55\u4e0b\u7684<code>environment.yml</code> \u6587\u4ef6\u521b\u5efaconda\u73af\u5883</li> </ul> <ul> <li>\u514b\u9686\u73af\u5883(\u4eceA-&gt;B) \uff1aconda create -n B --clone A</li> <li>\u5220\u9664\u73af\u5883\uff1aconda remove -n your_env_name --all\u6216\u8005conda create -n B --clone A</li> <li>\u6dfb\u52a0\u7279\u5b9a\u7248\u672c\u73af\u5883\uff1aconda create --name Python35 python=3.5</li> <li>\u8bbe\u7f6e\u975e\u81ea\u52a8\u542f\u52a8\uff1aconda config --set auto_activate_base false # \u8bbe\u7f6e\u975e\u81ea\u52a8\u542f\u52a8</li> </ul>"},{"location":"tech/tools/PackageManager/#pip","title":"Pip","text":"<ul> <li><code>pip install -r requirements.txt</code>: pip\u7684\u73af\u5883\u914d\u7f6e\u6587\u4ef6\u4e00\u822c\u662f<code>requirements.txt</code></li> </ul> <ul> <li><code>pip install -i https://mirrors.zju.edu.cn/pypi/web/simple some-package --extra-index-url https://pypi.tuna.tsinghua.edu.cn/simple https://mirrors.aliyun.com/pypi/simple</code>: \u7528\u4e8e\u6307\u5b9a\u4e00\u4e2a\u7d22\u5f15\u4ed3\u5e93\u548c\u5907\u7528\u7d22\u5f15\u4ed3\u5e93\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2a\u5907\u7528\u7d22\u5f15\u4ed3\u5e93<p>\u6216\u8005\u7f16\u8f91<code>~/.pip/pip.conf</code>\uff1a</p> <pre><code>    [global]\n    index-url = https://pypi.douban.com/simple\n    extra-index-url =\n        https://pypi.tuna.tsinghua.edu.cn/simple\n        https://mirrors.aliyun.com/pypi/simple\n        https://pypi.mirrors.ustc.edu.cn/simple\n</code></pre> </li> </ul> <ul> <li><code>pip install -e .</code>: <code>-e</code>\u4ee3\u8868\u4ee5\u53ef\u7f16\u8f91\u6a21\u5f0f\u8fdb\u884cpython\u5305\u7684\u5b89\u88c5\uff0c<code>.</code>\u4ee3\u8868\u5b89\u88c5\u5230\u5f53\u524d\u8def\u5f84\uff0c\u901a\u5e38\u4f1a\u6709\u4e00\u4e2a\u540d\u4e3a<code>setup.py</code>\u7684\u6587\u4ef6\u5b9a\u4e49\u4e86\u5305\u7684\u5143\u6570\u636e\u548c\u5b89\u88c5\u8981\u6c42 \u5177\u4f53\u539f\u7406\u662f\u8be5\u547d\u4ee4\u4f1a\u521b\u5efa\u4e00\u4e2a\u6307\u5411\u6e90\u4ee3\u7801\u76ee\u5f55\u7684\u7b26\u53f7\u94fe\u63a5\uff0c\u56e0\u6b64\u5bf9\u6e90\u4ee3\u7801\u7684\u4efb\u4f55\u66f4\u6539\u90fd\u4f1a\u7acb\u5373\u53cd\u6620\u5728\u5b89\u88c5\u7684\u5305\u4e2d\uff0c\u4e0d\u9700\u8981\u91cd\u65b0install <p><code>pip install -e .</code>\u5e26\u6765\u7684\u5947\u602a\u95ee\u9898\uff0c\u4eca\u5929\u5c06python\u5305\u76ee\u5f55\u548c\u5de5\u4f5c\u76ee\u5f55\u653e\u5728\u540c\u4e00\u6587\u4ef6\u5939\u65f6\uff0c\u53d1\u73b0instaLl\u540e\u7684python\u5305\u65e0\u6cd5\u6b63\u5e38\u5bfc\u5165\uff0c\u5c06python\u6e90\u4ee3\u7801\u76ee\u5f55\u653e\u5728\u53e6\u4e00\u4e2a\u76ee\u5f55\u4e2d\u91cd\u65b0install\u4fbf\u6062\u590d   \u539f\u56e0\u5728\u4e8e<code>pip install</code>\u5c06\u5305\u5b89\u88c5\u5230site-packages\u4e4b\u540e\uff0c\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684<code>run.py</code>\u4ecd\u7136\u4f1a\u4ece\u5f53\u524d\u76ee\u5f55\u7684<code>vllm/</code>\u6587\u4ef6\u5939\u5bfc\u5165\u6a21\u5757\uff0c\u4f46\u662f\u5b9e\u9645\u6a21\u5757\u5728<code>vllm/vllm</code> \u4e2d</p> </li> </ul> <ul> <li>pip\u548cconda\u7684\u5171\u5b58\u95ee\u9898\uff0c\u5728\u4e00\u4e2aPython\u73af\u5883\u4e2d\u5b89\u88c5\u5305\u65f6\uff0c\u4e24\u8005\u7684\u5b89\u88c5\u5305\u786e\u5b9e\u662f\u53ef\u80fd\u4f1a\u51fa\u73b0\u51b2\u7a81\u7684\u3002<p>\u4e00\u822c\u6765\u8bf4\uff0c\u9996\u5148\u4f7f\u7528conda\u8fdb\u884c\u5b89\u88c5\uff0c\u627e\u4e0d\u5230\u5bf9\u5e94\u7684\u5305\u5c31\u4f7f\u7528pip\u5b89\u88c5\uff0c\u4e00\u822c\u9ed8\u8ba4conda\u73af\u5883\u4f1a\u6709pip\uff0c\u5426\u5219\u9700\u8981\u6267\u884c<code>conda install pip</code></p> <p>\u4e24\u8005\u6307\u5b9a\u7248\u672c\u8bed\u6cd5\u533a\u522b:</p> <pre><code>\u3000\u3000conda install numpy=1.93\n\u3000\u3000pip  install numpy==1.93\n</code></pre> </li> </ul> <ul> <li>pip cache purge: \u6e05\u9664\u7f13\u5b58\u76ee\u5f55\u6587\u4ef6\uff0c\u4e00\u822c\u4f4d\u4e8e<code>~/.cache/pip</code>\u4e2d\uff0c\u53ef\u7528<code>pip cache dir</code>\u67e5\u770b\u5177\u4f53\u7f13\u5b58\u8def\u5f84</li> </ul>"},{"location":"tech/tools/PackageManager/#aptdpkg","title":"Apt/Dpkg","text":""},{"location":"tech/tools/Vim/","title":"VIM Notes","text":""},{"location":"tech/tools/Vim/#session-1","title":"Session 1","text":""},{"location":"tech/tools/Vim/#move","title":"Move","text":"<ul> <li>\u5355\u5b57\u6bcd\uff1ahjkl\uff0c</li> <li>\u67e5\u8be2\u79fb\u52a8f, F, t, T, </li> <li>\u5355\u8bcd\u79fb\u52a8\uff1aw, b, e, ge\uff0c </li> <li>\u6c34\u5e73\u79fb\u52a8\uff1a0\uff0c^, $, g_, </li> <li>\u5782\u76f4\u79fb\u52a8\uff1a{\uff0c}\uff0cctrl+D, ctrl+u</li> <li>\u641c\u7d22\uff1a/, ?, enter, n, N</li> <li>\u6570\u5b57\u500d\u589e\uff1a2w, 3g, 2/baby</li> <li>gd\u8df3\u8f6c\u5b9a\u4e49\uff0cgf\u8df3\u8f6c\u5230import\u7684\u6587\u4ef6</li> <li>gg, G, 2gg</li> </ul>"},{"location":"tech/tools/Vim/#operator","title":"Operator","text":"<ul> <li>operator count motion<ul> <li>Operators: c(change, delete + insert), d, y, p, =, g~, &gt;, &lt;, =</li> <li>ggdG, df', dt', d5w, d5j(\u5220\u9664\u63a5\u4e0b\u6765\u7684\u4e94\u884c), ggyG, gUw</li> <li>cc, dd, yy</li> </ul> </li> <li>Text objects:<ul> <li>Built-in text-objects: <ul> <li>word, sentence, paragraph, block by(), Block by {}, &lt;, [, t for tag</li> </ul> </li> <li>cit, ci\", cib</li> </ul> </li> <li><code>.</code> commands\uff1a Repeat the last change, can be used with search command</li> </ul>"},{"location":"tech/tools/Vim/#base-op","title":"Base op","text":"<ul> <li>\u9009\u4e2dv, \u590d\u5236y, \u5220\u9664d, \u7c98\u8d34p</li> <li>back:u </li> <li>Rel: ctrl+R</li> </ul>"},{"location":"tech/tools/Vim/#session-2","title":"Session 2","text":""},{"location":"tech/tools/Vim/#inserting-text","title":"Inserting Text","text":"<ul> <li>i for insert and a for append<ul> <li>i: before the cursor I:  at the beginning of line</li> <li>a: after th ecursor A: at the end of line</li> </ul> </li> <li>o: insert a new line below<ul> <li>O: insert a new line above the current one</li> </ul> </li> <li>gi: puts you into insert mode at the last place you made a change</li> <li>CTRL-h, w, u\uff1adelete the last character, word, line you typed</li> </ul>"},{"location":"tech/tools/Vim/#selecting-text","title":"Selecting Text","text":"<ul> <li>Visual mode:<ul> <li>v: character-wise </li> <li>V: line-wise</li> <li>ctrl+v: block-wise</li> </ul> </li> </ul>"},{"location":"tech/tools/Vim/#search-text","title":"Search Text","text":"<ul> <li>/xxx\uff1a \u641c\u7d22xxx\uff0c\u7528.\u9000\u51fa</li> <li>gn, gN: ** \u5c06\u4e0egn\u4e00\u8d77\u8fd0\u884c\u7684\u547d\u4ee4\u6267\u884c\u5728next match\u4e0a\uff0c\u548c.**\u4e00\u8d77\u4f7f\u7528</li> </ul>"},{"location":"tech/tools/Vim/#copy-and-paste","title":"Copy and Paste","text":"<ul> <li> <p><code>y{motion}</code></p> <ul> <li>yl(letter), yaw(word), yas(sentence), yi( (\u7c98\u8d34()\u5185\u7684\u6240\u6709\u5185\u5bb9)</li> <li>yy</li> </ul> </li> </ul> <ul> <li><code>p, P</code>\uff1a\u524d\u8005\u5728cursor\u540e\u7c98\u8d34\uff0c\u540e\u8005\u5728cursor\u524d\u7c98\u8d34</li> </ul> <ul> <li><code>gp, gP</code>\uff1a \u7c98\u8d34\u540e\u628acursor\u79fb\u5230\u7c98\u8d34\u5185\u5bb9\u540e</li> </ul> <ul> <li> <p>\u5e38\u89c1\u642d\u914d:</p> <ul> <li>yyp, yyP,</li> <li>ddp, ddP, dlp</li> </ul> </li> </ul> <ul> <li> <p>Registers:</p> <ul> <li>\", a-z, 0, 1-9\u56db\u7c7bregister\uff0c\u5206\u522b\u5b58\u50a8\u4e86\u4e0d\u540c\u7684\u5185\u5bb9</li> <li><code>\"</code>\uff1aunnamed reg\u9ed8\u8ba4\u5bc4\u5b58\u5668\u5b58\u50a8\u4e86\u4f60\u7684copy\u548ccut\u5185\u5bb9</li> <li><code>a-z</code>\uff1anamed reg\u53ef\u4ee5\u663e\u793a\u7684\u6307\u660e\u4f7f\u7528\u6765\u5b58\u50a8copy\u548ccut</li> <li><code>0</code>\uff1ayank reg\u5b58\u50a8\u4e86\u6700\u8fd1\u4e00\u6b21\u7684\u590d\u5236\u5185\u5bb9</li> <li><code>1-9</code>\uff1acut reg\u5b58\u50a8\u4e86\u6700\u8fd19\u6b21\u4f60\u8fdb\u884ccut\u7684\u5185\u5bb9\uff0c\u5982delete or change</li> <li>\u4f7f\u7528\uff1a<ul> <li><code>\"a</code>\u5f00\u5934\u6765\u663e\u793a\u6307\u660e\u6240\u7528\u7684\u5bc4\u5b58\u5668</li> </ul> </li> </ul> </li> </ul> <ul> <li> <p>In insert mode:</p> <ul> <li><code>CTRL-R{register}:</code>\u7c98\u8d34\u67d0\u4e2a\u5bc4\u5b58\u5668\u4e2d\u7684\u5185\u5bb9</li> </ul> </li> </ul> <ul> <li>\u663e\u793a\u884c\u53f7: <code>set number</code></li> </ul>"},{"location":"tech/tools/ssh/","title":"SSH Notes","text":""},{"location":"tech/tools/ssh/#install-on-debian12","title":"Install on Debian12","text":"<pre><code>sudo apt-get update\nsudo apt-get install openssh-server\nsudo systemctl start ssh\n</code></pre>"},{"location":"tech/tools/ssh/#_1","title":"\u57fa\u672c\u4f7f\u7528","text":"<p>\u751f\u6210\u5bc6\u94a5\u5bf9</p> <p><code>-t</code>\u53ef\u4ee5\u6307\u5b9a\u4f7f\u7528\u7684\u975e\u5bf9\u79f0\u52a0\u5bc6\u7b97\u6cd5</p> <p><pre><code>ssh-keygen -t rsa/ed25519\n</code></pre> \u4f7f\u7528\u65f6\u9700\u8981\u5c06\u751f\u6210\u7684<code>id_rsa.pub</code>\u6587\u4ef6\u62f7\u8d1d\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u7684<code>~/.ssh/authorized_keys</code>\u6587\u4ef6\u4e2d\u3002</p> <p>\u68c0\u67e5\u672c\u673a.ssh\u7684\u5c5e\u6027 + \u672c\u5730 .ssh \u76ee\u5f55\u548c id_rsa \u6587\u4ef6\u6743\u9650\u8981\u6c42\uff1a   + .ssh \u76ee\u5f55\u7684\u5c5e\u6027\u662f 700   + .ssh \u76ee\u5f55\u4e0b\u7684 id_rsa \u79c1\u6709\u5bc6\u94a5\u7684\u5c5e\u6027\u662f 600   + .ssh \u76ee\u5f55\u4e0b\u7684 id_rsa.pub \u516c\u7528\u5bc6\u94a5\u7684\u5c5e\u6027\u662f 644 + \u8fdc\u7a0b .ssh \u76ee\u5f55\u548c authorized_keys \u6587\u4ef6\u6743\u9650\u8981\u6c42\uff1a   + .ssh \u76ee\u5f55\u7684\u5c5e\u6027\u662f 700   + .ssh \u76ee\u5f55\u4e0b\u7684 authorized_keys \u79c1\u6709\u5bc6\u94a5\u7684\u5c5e\u6027\u662f 600</p> <p>\u4fee\u6539sshd_config <pre><code>#sshd_config\nPasswordAuthentication no \nRSAAuthentication yes\nPubkeyAuthentication yes\nAuthorizedKeysFile     .ssh/authorized_keys\n</code></pre></p>"},{"location":"tech/tools/ssh/#ssh","title":"ssh\u547d\u4ee4\u53c2\u6570","text":"<ul> <li><code>-o</code>: \u6307\u5b9a\u914d\u7f6e\u9009\u9879     <code>StrictHostKeyChecking=no</code>: \u5ffd\u7565\u670d\u52a1\u5668Key\u9a8c\u8bc1\uff0c\u53ef\u4ee5\u8ba9\u7b2c\u4e00\u6b21\u8bbf\u95ee\u4e0d\u7528\u786e\u8ba4\u670d\u52a1\u5668Key     <code>UserKnownHostsFile=/dev/null</code>: \u53ef\u4ee5\u4e0d\u8ba9\u670d\u52a1\u5668\u7684key\u4fdd\u5b58\u5728\u672c\u5730\u7684known_hosts\u6587\u4ef6\u4e2d\uff0c\u9002\u7528\u4e8e\u4e0d\u80fd\u4fdd\u5b58\u548c\u4fee\u6539\u672c\u5730\u6587\u4ef6\u7684\u60c5\u51b5     <code>IdentityFile=/path/to/my_private_key</code>: \u6307\u5b9a\u5bc6\u94a5\u6587\u4ef6 <pre><code>ssh -o StrictHostKeyChecking=no username@hostname\n</code></pre></li> <li><code>-N -f</code>: \u4e0d\u6267\u884c\u8fdc\u7a0b\u547d\u4ee4\uff0c\u5c06ssh\u6302\u8f7d\u5728\u540e\u53f0\u3002\u9002\u7528\u4e8e\u53ea\u9700\u8981\u6253\u5f00\u7aef\u53e3\uff0c\u4e0d\u7528\u6267\u884c\u4efb\u4f55\u8fdc\u7a0b\u547d\u4ee4\u7684\u6e05\u7a7a</li> <li><code>-L</code>: \u8bbe\u7f6e\u672c\u5730\u7aef\u53e3\u8f6c\u53d1\uff0c\u5f53ssh\u5230192.168.7.23\u65f6\uff0c\u5c06\u672c\u5730\u768425443\u7aef\u53e3\u8f6c\u53d1\u5230192.168.6.254\u7684443\u7aef\u53e3\u3002 <pre><code>ssh -L 25443:192.168.6.254:443 Squarehuang@192.168.7.23\n</code></pre></li> <li><code>-R</code>: \u8bbe\u7f6e\u8fdc\u7a0b\u7aef\u53e3\u8f6c\u53d1\u3002\u82e5\u8981\u7ed1\u5b9a\u5230\u672c\u5730\u7684\u6240\u6709\u63a5\u53e3\uff0c\u9700\u8981\u5728<code>sshd_config</code>\u4e2d\u4fee\u6539\u4e3a<code>GatewayPorts yes</code> <pre><code>ssh -R 20080:localhost:20080 Squarehuang@192.168.7.23\n</code></pre></li> <li><code>-D</code>: \u8bbe\u7f6e\u52a8\u6001\u8f6c\u53d1\u7aef\u53e3\uff0c\u5f53\u672c\u5730\u5ba2\u6237\u7aef\u94fe\u63a5\u52302008\u7aef\u53e3\uff0c\u8fde\u63a5\u5c31\u4f1a\u88ab\u8f6c\u53d1\u5230\u8fdc\u7a0b\u4e3b\u673a\uff0c\u7136\u540e\u88ab\u8f6c\u53d1\u6210\u4e3assh\u670d\u52a1\u5668\u7684\u52a8\u6001\u7aef\u53e3\u3002 <pre><code>ssh -D 2008 Squarehuang@192.168.7.23\n</code></pre></li> <li><code>-o \"ProxyCommand ssh -W %h:%p &lt;jump_server&gt;\"</code>: \u901a\u8fc7\u8df3\u677f\u673a\u8fde\u63a5\u76ee\u6807\u4e3b\u673a  <pre><code>ssh Squarehuang@192.168.6.253 -o \"ProxyCommand ssh -W %h:%p 10.10.1.200\"\n</code></pre></li> <li><code>-J</code>: ProxyJump\u9009\u9879\uff0c\u7b80\u5316\u4e86\u901a\u8fc7\u8df3\u677f\u673a\u8fde\u63a5\u76ee\u6807\u4e3b\u673a\u7684\u547d\u4ee4 <pre><code>ssh -J user@host1:port1,user2@host2:port2 user3@host3\n</code></pre></li> <li><code>-v</code>: \u542f\u7528SSH\u5ba2\u6237\u7aef\u7684Verbose\u6a21\u5f0f\uff0c\u53ef\u4ee5\u8be6\u7ec6\u8f93\u51fa\u8c03\u8bd5\u4fe1\u606f\u4fbf\u4e8e\u8c03\u8bd5\u3001</li> <li><code>-i</code>: \u5728\u8fdb\u884cssh\u8fde\u63a5\u65f6\uff0c\u6307\u5b9a\u8ba4\u8bc1\u6240\u4f7f\u7528\u7684\u79c1\u94a5</li> </ul>"},{"location":"tech/tools/ssh/#sshconfig","title":".ssh/config\u914d\u7f6e","text":"<p>\u57fa\u672c\u914d\u7f6e <pre><code># .ssh/config\nHost jetson\n    HostName 192.168.7.23\n    LocalForward 25443 192.168.6.254:443\n    LocalForward 33062 db2:3306\n    User Squarehuang\n    Port 22\n</code></pre></p> <p>ssh Multiplexing\u52a0\u901f\uff1a\u514b\u670d\u4e86TCP\u8fde\u63a5\u7684\u6d88\u8017\uff0c\u5373\u5bf9\u4e8e\u591a\u6b21\u8fde\u63a5\u4f1a\u8bdd\uff0c\u53ea\u4f1a\u4f7f\u7528\u4e00\u4e2aTCP\u8fde\u63a5\u3002OpenSSH\u4f7f\u7528\u73b0\u6709\u7684TCP\u8fde\u63a5\u6765\u5b9e\u73b0\u591a\u4e2aSSH\u4f1a\u8bdd\uff0c\u8fd9\u79cd\u65b9\u5f0f\u964d\u4f4e\u4e86\u65b0\u5efaTCP\u8fde\u63a5\u7684\u8d1f\u8f7d\u3002</p> <p>tips:OpenSSH 5.6\u4ee5\u4e0a\u7248\u672c\u652f\u6301 \u52a0\u901fSSH\u8fde\u63a5\uff0c\u51cf\u5c11TCP\u8fde\u63a5\u7684\u6d88\u8017\u914d\u7f6e\u6240\u6709\u4e3b\u673a\u767b\u9646\u6fc0\u6d3bssh multiplexing,\u538b\u7f29\u4ee5\u53ca\u4e0d\u68c0\u67e5\u670d\u52a1\u5668SSH key <pre><code>#.ssh/config\nHost *\n  ServerAliveInterval 60\n  ControlMaster auto/10\n  ControlPath ~/.ssh/%h-%p-%r\n  ControlPersist yes/10m\n  StrictHostKeyChecking no\n  Compression yes\n</code></pre></p> <p>ssh \u914d\u7f6e\u8df3\u677f\u670d\u52a1\u5668: + \u4f7f\u7528ProxyCommand: <pre><code>Host z-dev\n   HostName 192.168.6.253\n   User Squarehuang\n   ProxyCommand ssh -W %h:%p 10.10.1.200\n</code></pre></p> <ul> <li>\u4f7f\u7528ProxyJump: <pre><code>Host pixel\n    HostName 192.168.10.9\n    Port 8022\n    User u0_a299\n    LocalForward 8443 127.0.0.1:8443\n\nHost zcloud\n    HostName 192.168.7.200\n    ProxyJump pixel\n    LocalForward 8443 192.168.6.25:8443\n\nHost z-dev\n    HostName 192.168.6.253\n    ProxyJump zcloud\n    LocalForward 8443 127.0.0.1:443\n</code></pre></li> </ul> <ul> <li>\u5173\u95ed\u670d\u52a1\u5668\u7684ProxyJump: <pre><code># /etc/sshd_config\nAllowTcpForwarding no\n</code></pre></li> </ul>"},{"location":"tech/tools/ssh/#ssh-agent","title":"ssh-agent","text":"<p><code>ssh-agent</code>\u662f\u4e00\u4e2a\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u5b88\u62a4\u8fdb\u7a0b\uff08daemon\uff09\uff0c\u7528\u9014\u662f\u5bf9\u89e3\u5bc6\u7684\u4e13\u7528\u5bc6\u94a5\u8fdb\u884c\u9ad8\u901f\u7f13\u5b58\u3002 <pre><code>eval `ssh-agent` #\u542f\u52a8ssh-agent\nssh-add ~/my_key #\u4e0d\u6307\u5b9a\u76ee\u5f55\uff0c\u9ed8\u8ba4\u52a0\u8f7d.ssh/id_rsa\n</code></pre> \u5f53\u5728\u56fe\u5f62\u73af\u5883\u4e2d\uff08\u4e5f\u5c31\u662f\u591a\u4e2a\u7528\u6237\uff09\uff0c\u6bcf\u4e2a\u767b\u9646\u4f1a\u8bdd\u90fd\u4f1a\u542f\u52a8\u4e00\u4e2a\u65b0\u7684ssh-agent\u526f\u672c\uff0c\u4e3a\u4e86\u89e3\u51b3\u4e3a\u6bcf\u4e2ashell\u7a97\u53e3\u90fd\u8fd0\u884c\u4e00\u4e2a\u4ee3\u7406\u7684\u95ee\u9898\uff1a</p> <p>\u4e0b\u9762\u4ee3\u7801\u4f1a\u7ef4\u62a4\u4e00\u4e2a ~/.agent.env \u6587\u4ef6\u4ee5\u53ca\u6307\u5411\u5f53\u524d\u8fd0\u884c\u7684 ssh-agent \u7684\u73af\u5883\u3002\u5982\u679c\u4ee3\u7406\u5931\u8d25\uff0c\u5c06\u4f1a\u81ea\u52a8\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\u7a97\u53e3\u5e76\u6dfb\u52a0\u5bc6\u94a5\uff0c\u6240\u6709\u540e\u7eed\u7684\u7ec8\u7aef\u7a97\u53e3\u90fd\u53ef\u4ee5\u5171\u4eab\u8fd9\u4e2a\u7a97\u53e3 <pre><code>#~/.profile \u6dfb\u52a0ssh-agent\u542f\u52a8\u811a\u672c\nif [ -f ~/.agent.env ]; then\n  . ~/.agent.env -s &gt; /dev/null\n\n  if ! kill -0 $SSH_AGENT_PID &gt; /dev/null 2&gt;&amp;1; then\n    echo\n    echo \"Stale agent file found.  Spawning new agent...\"\n    eval `ssh-agent -s | tee ~/.agent.env`\n    ssh-add\n  fi\nelse\n  echo \"Starting ssh-agent...\"\n  eval `ssh-agent -s | tee ~/.agent.env`\n  ssh-add\nfi\n</code></pre></p>"},{"location":"tech/tools/ssh/#ssh_1","title":"ssh\u5b9e\u9645\u5e94\u7528","text":"<ul> <li><code>ssh -R</code>\u914d\u7f6e\u53cd\u5411\u4ee3\u7406\uff0c\u5047\u8bbe\u73b0\u5728\u4f60\u5728\u67d0\u4e2a\u8fdc\u7a0b\u96c6\u7fa4\u4e0a\uff0c\u8be5\u96c6\u7fa4\u6ca1\u6709\u5916\u7f51\uff0c\u90a3\u4e48\u8be5\u5982\u4f55\u901a\u8fc7ssh\u4e0a\u7f51\u5462\u3002\u4e00\u79cd\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u672c\u5730\u7684\u67d0\u4e2a\u7aef\u53e3\u4e0a\u8bbe\u7f6ehttp\u4ee3\u7406\uff0c\u5728ssh\u7684\u65f6\u5019\u5c06\u90a3\u4e2a\u7aef\u53e3\u4ee3\u7406\u5230\u672c\u5730\u7684\u4ee3\u7406\u7aef\u53e3\uff0c\u90a3\u4e48\u6d41\u91cf\u4fbf\u53ef\u4ee5\u901a\u8fc7\u672c\u5730\u7684\u4ee3\u7406\u4ece\u800c\u8bbf\u95ee\u5916\u7f51\u3002</li> </ul>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/archive/2023/","title":"2023","text":""},{"location":"blog/archive/2022/","title":"2022","text":""},{"location":"blog/category/%E5%8A%A8%E6%BC%AB/","title":"\u52a8\u6f2b","text":""},{"location":"blog/category/%E6%97%A5%E5%B8%B8/","title":"\u65e5\u5e38","text":""},{"location":"blog/category/%E5%AD%A6%E4%B9%A0/","title":"\u5b66\u4e60","text":""},{"location":"blog/page/2/","title":"Squarehuang's \u7b80\u4ecb","text":""},{"location":"blog/page/3/","title":"Squarehuang's \u7b80\u4ecb","text":""},{"location":"blog/archive/2022/page/2/","title":"2022","text":""},{"location":"blog/category/%E6%97%A5%E5%B8%B8/page/2/","title":"\u65e5\u5e38","text":""}]}